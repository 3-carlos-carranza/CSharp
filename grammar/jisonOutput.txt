Processing grammar.
$accept(0)
$end(1)
error(2)
compilationUnit(3)
es(4)
EOF(5)
e(6)
attributes(7)
enum-declaration(8)
delegate-declaration(9)
block(10)
BOOLEAN_LITERAL(11)
TRUE(12)
FALSE(13)
literal(14)
REAL_LITERAL(15)
INTEGER_LITERAL(16)
STRING_LITERAL(17)
CHARACTER_LITERAL(18)
NULL(19)
namespace-name(20)
namespace-or-type-name(21)
type-name(22)
IDENTIFIER(23)
DOT(24)
type(25)
value-type(26)
reference-type(27)
struct-type(28)
enum-type(29)
simple-type(30)
numeric-type(31)
BOOL(32)
integral-type(33)
floating-point-type(34)
DECIMAL(35)
SBYTE(36)
BYTE(37)
SHORT(38)
USHORT(39)
INT(40)
UINT(41)
LONG(42)
ULONG(43)
CHAR(44)
FLOAT(45)
DOUBLE(46)
class-type(47)
interface-type(48)
array-type(49)
delegate-type(50)
OBJECT(51)
STRING(52)
non-array-type(53)
rank-specifiers(54)
rank-specifier(55)
OPEN_BRACKET(56)
CLOSE_BRACKET(57)
dim-separators(58)
COMMA(59)
variable-reference(60)
expression(61)
argument-list(62)
argument(63)
REF(64)
OUT(65)
primary-expression(66)
primary-no-array-creation-expression(67)
array-creation-expression(68)
simple-name(69)
parenthesized-expression(70)
member-access(71)
invocation-expression(72)
element-access(73)
this-access(74)
base-access(75)
post-increment-expression(76)
post-decrement-expression(77)
object-creation-expression(78)
delegate-creation-expression(79)
typeof-expression(80)
sizeof-expression(81)
checked-expression(82)
unchecked-expression(83)
OPEN_PARENS(84)
CLOSE_PARENS(85)
predefined-type(86)
expression-list(87)
THIS(88)
base(89)
OP_INC(90)
OP_DEC(91)
NEW(92)
array-initializer(93)
TYPEOF(94)
VOID(95)
CHECKED(96)
UNCHECKED(97)
unary-expression(98)
PLUS(99)
MINUS(100)
BANG(101)
TILDE(102)
STAR(103)
pre-increment-expression(104)
pre-decrement-expression(105)
cast-expression(106)
multiplicative-expression(107)
DIV(108)
PERCENT(109)
additive-expression(110)
shift-expression(111)
OP_LEFT_SHIFT(112)
RIGHT_SHIFT(113)
relational-expression(114)
LT(115)
GT(116)
OP_LE(117)
OP_GE(118)
IS(119)
AS(120)
equality-expression(121)
OP_EQ(122)
OP_NE(123)
and-expression(124)
AMP(125)
exclusive-or-expression(126)
CARET(127)
inclusive-or-expression(128)
BITWISE_OR(129)
conditional-and-expression(130)
OP_AND(131)
conditional-or-expression(132)
OP_OR(133)
conditional-expression(134)
INTERR(135)
COLON(136)
assignment(137)
assignment-operator(138)
ASSIGN(139)
OP_ADD_ASSIGNMENT(140)
OP_SUB_ASSIGNMENT(141)
OP_MULT_ASSIGNMENT(142)
OP_DIV_ASSIGNMENT(143)
OP_MOD_ASSIGNMENT(144)
OP_AND_ASSIGNMENT(145)
OP_OR_ASSIGNMENT(146)
OP_XOR_ASSIGNMENT(147)
OP_LEFT_SHIFT_ASSIGNMENT(148)
RIGHT_SHIFT_ASSIGNMENT(149)
constant-expression(150)
boolean-expression(151)
statement(152)
labeled-statement(153)
declaration-statement(154)
embedded-statement(155)
empty-statement(156)
expression-statement(157)
selection-statement(158)
iteration-statement(159)
jump-statement(160)
try-statement(161)
checked-statement(162)
unchecked-statement(163)
lock-statement(164)
using-statement(165)
OPEN_BRACE(166)
CLOSE_BRACE(167)
statement-list(168)
SEMICOLON(169)
local-variable-declaration(170)
local-constant-declaration(171)
local-variable-declarators(172)
local-variable-declarator(173)
local-variable(174)
local-variable-initializer(175)
CONST(176)
constant-declarators(177)
constant-declarator(178)
statement-expression(179)
if-statement(180)
switch-statement(181)
IF(182)
ELSE(183)
SWITCH(184)
switch-block(185)
switch-sections(186)
switch-section(187)
switch-labels(188)
switch-label(189)
CASE(190)
DEFAULT(191)
while-statement(192)
do-statement(193)
for-statement(194)
foreach-statement(195)
WHILE(196)
DO(197)
FOR(198)
for-initializer(199)
for-condition(200)
for-iterator(201)
statement-expression-list(202)
FOREACH(203)
IN(204)
break-statement(205)
continue-statement(206)
goto-statement(207)
return-statement(208)
throw-statement(209)
BREAK(210)
CONTINUE(211)
GOTO(212)
RETURN(213)
THROW(214)
TRY(215)
catch-clauses(216)
finally-clause(217)
specific-catch-clauses(218)
general-catch-clause(219)
specific-catch-clause(220)
CATCH(221)
FINALLY(222)
LOCK(223)
USING(224)
resource-acquisition(225)
variable-initializer-list(226)
variable-initializer(227)
global-attributes(228)
global-attribute-sections(229)
global-attribute-section(230)
global-attribute-target-specifier(231)
attribute-list(232)
global-attribute-target(233)
ASSEMBLY(234)
MODULE(235)
attribute-sections(236)
attribute-section(237)
attribute-target-specifier(238)
attribute-target(239)
FIELD(240)
EVENT(241)
METHOD(242)
PARAM(243)
PROPERTY(244)
TYPE(245)
attribute(246)
attribute-name(247)
attribute-arguments(248)
positional-argument-list(249)
named-argument-list(250)
positional-argument(251)
attribute-argument-expression(252)
named-argument(253)
formal-parameter-list(254)
fixed-parameters(255)
parameter-array(256)
fixed-parameter(257)
parameter-modifier(258)
parameter-modifieropt(259)
params(260)
return-type(261)
DELEGATE(262)
enum-modifiers(263)
delegate-modifiers(264)
delegate-modifier(265)
PUBLIC(266)
PROTECTED(267)
INTERNAL(268)
PRIVATE(269)
ENUM(270)
enum-body(271)
enum-base(272)
enum-member-declarations(273)
enum-modifier(274)
enum-member-declaration(275)

Item sets
------

item set 0 
$accept -> .compilationUnit $end #lookaheads= $end
compilationUnit -> .es EOF
es -> .es e
es -> .e
e -> .attributes
e -> .enum-declaration
e -> .delegate-declaration
e -> .block
e -> .
attributes -> .attribute-sections
enum-declaration -> .ENUM IDENTIFIER enum-body
enum-declaration -> .attributes ENUM IDENTIFIER enum-body
enum-declaration -> .enum-modifiers ENUM IDENTIFIER enum-body
enum-declaration -> .ENUM IDENTIFIER enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER enum-body SEMICOLON
enum-declaration -> .attributes enum-modifiers ENUM IDENTIFIER enum-body
enum-declaration -> .attributes ENUM IDENTIFIER enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER enum-body SEMICOLON
enum-declaration -> .enum-modifiers ENUM IDENTIFIER enum-base enum-body
enum-declaration -> .enum-modifiers ENUM IDENTIFIER enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER enum-base enum-body SEMICOLON
enum-declaration -> .enum-modifiers ENUM IDENTIFIER enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER enum-base enum-body SEMICOLON
enum-declaration -> .attributes enum-modifiers ENUM IDENTIFIER enum-body SEMICOLON
enum-declaration -> .attributes enum-modifiers ENUM IDENTIFIER enum-base enum-body
enum-declaration -> .attributes enum-modifiers ENUM IDENTIFIER enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> .attributes DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> .enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> .DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
delegate-declaration -> .enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
delegate-declaration -> .attributes DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
delegate-declaration -> .attributes enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> .attributes enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
enum-modifiers -> .enum-modifier
enum-modifiers -> .enum-modifiers enum-modifier
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
enum-modifier -> .NEW
enum-modifier -> .PUBLIC
enum-modifier -> .PROTECTED
enum-modifier -> .INTERNAL
enum-modifier -> .PRIVATE 
transitions ->  {"compilationUnit":1,"es":2,"e":3,"attributes":4,"enum-declaration":5,"delegate-declaration":6,"block":7,"attribute-sections":8,"ENUM":9,"enum-modifiers":10,"DELEGATE":11,"OPEN_BRACE":12,"attribute-section":13,"enum-modifier":14,"OPEN_BRACKET":15,"NEW":16,"PUBLIC":17,"PROTECTED":18,"INTERNAL":19,"PRIVATE":20}

item set 1 
$accept -> compilationUnit .$end #lookaheads= $end 
transitions ->  {}

item set 2 
compilationUnit -> es .EOF
es -> es .e
e -> .attributes
e -> .enum-declaration
e -> .delegate-declaration
e -> .block
e -> .
attributes -> .attribute-sections
enum-declaration -> .ENUM IDENTIFIER enum-body
enum-declaration -> .attributes ENUM IDENTIFIER enum-body
enum-declaration -> .enum-modifiers ENUM IDENTIFIER enum-body
enum-declaration -> .ENUM IDENTIFIER enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER enum-body SEMICOLON
enum-declaration -> .attributes enum-modifiers ENUM IDENTIFIER enum-body
enum-declaration -> .attributes ENUM IDENTIFIER enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER enum-body SEMICOLON
enum-declaration -> .enum-modifiers ENUM IDENTIFIER enum-base enum-body
enum-declaration -> .enum-modifiers ENUM IDENTIFIER enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER enum-base enum-body SEMICOLON
enum-declaration -> .enum-modifiers ENUM IDENTIFIER enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER enum-base enum-body SEMICOLON
enum-declaration -> .attributes enum-modifiers ENUM IDENTIFIER enum-body SEMICOLON
enum-declaration -> .attributes enum-modifiers ENUM IDENTIFIER enum-base enum-body
enum-declaration -> .attributes enum-modifiers ENUM IDENTIFIER enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> .attributes DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> .enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> .DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
delegate-declaration -> .enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
delegate-declaration -> .attributes DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
delegate-declaration -> .attributes enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> .attributes enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
enum-modifiers -> .enum-modifier
enum-modifiers -> .enum-modifiers enum-modifier
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
enum-modifier -> .NEW
enum-modifier -> .PUBLIC
enum-modifier -> .PROTECTED
enum-modifier -> .INTERNAL
enum-modifier -> .PRIVATE 
transitions ->  {"EOF":21,"e":22,"attributes":4,"enum-declaration":5,"delegate-declaration":6,"block":7,"attribute-sections":8,"ENUM":9,"enum-modifiers":10,"DELEGATE":11,"OPEN_BRACE":12,"attribute-section":13,"enum-modifier":14,"OPEN_BRACKET":15,"NEW":16,"PUBLIC":17,"PROTECTED":18,"INTERNAL":19,"PRIVATE":20}

item set 3 
es -> e . 
transitions ->  {}

item set 4 
e -> attributes .
enum-declaration -> attributes .ENUM IDENTIFIER enum-body
enum-declaration -> attributes .enum-modifiers ENUM IDENTIFIER enum-body
enum-declaration -> attributes .ENUM IDENTIFIER enum-base enum-body
enum-declaration -> attributes .ENUM IDENTIFIER enum-body SEMICOLON
enum-declaration -> attributes .ENUM IDENTIFIER enum-base enum-body SEMICOLON
enum-declaration -> attributes .enum-modifiers ENUM IDENTIFIER enum-body SEMICOLON
enum-declaration -> attributes .enum-modifiers ENUM IDENTIFIER enum-base enum-body
enum-declaration -> attributes .enum-modifiers ENUM IDENTIFIER enum-base enum-body SEMICOLON
delegate-declaration -> attributes .DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes .DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes .enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes .enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
enum-modifiers -> .enum-modifier
enum-modifiers -> .enum-modifiers enum-modifier
enum-modifier -> .NEW
enum-modifier -> .PUBLIC
enum-modifier -> .PROTECTED
enum-modifier -> .INTERNAL
enum-modifier -> .PRIVATE 
transitions ->  {"ENUM":23,"enum-modifiers":24,"DELEGATE":25,"enum-modifier":14,"NEW":16,"PUBLIC":17,"PROTECTED":18,"INTERNAL":19,"PRIVATE":20}

item set 5 
e -> enum-declaration . 
transitions ->  {}

item set 6 
e -> delegate-declaration . 
transitions ->  {}

item set 7 
e -> block . 
transitions ->  {}

item set 8 
attributes -> attribute-sections .
attribute-sections -> attribute-sections .attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attribute-section":26,"OPEN_BRACKET":15}

item set 9 
enum-declaration -> ENUM .IDENTIFIER enum-body
enum-declaration -> ENUM .IDENTIFIER enum-base enum-body
enum-declaration -> ENUM .IDENTIFIER enum-body SEMICOLON
enum-declaration -> ENUM .IDENTIFIER enum-base enum-body SEMICOLON 
transitions ->  {"IDENTIFIER":27}

item set 10 
enum-declaration -> enum-modifiers .ENUM IDENTIFIER enum-body
enum-declaration -> enum-modifiers .ENUM IDENTIFIER enum-base enum-body
enum-declaration -> enum-modifiers .ENUM IDENTIFIER enum-body SEMICOLON
enum-declaration -> enum-modifiers .ENUM IDENTIFIER enum-base enum-body SEMICOLON
delegate-declaration -> enum-modifiers .DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> enum-modifiers .DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
enum-modifiers -> enum-modifiers .enum-modifier
enum-modifier -> .NEW
enum-modifier -> .PUBLIC
enum-modifier -> .PROTECTED
enum-modifier -> .INTERNAL
enum-modifier -> .PRIVATE 
transitions ->  {"ENUM":28,"DELEGATE":29,"enum-modifier":30,"NEW":16,"PUBLIC":17,"PROTECTED":18,"INTERNAL":19,"PRIVATE":20}

item set 11 
delegate-declaration -> DELEGATE .return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> DELEGATE .return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
return-type -> .VOID
return-type -> .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"return-type":31,"VOID":32,"type":33,"value-type":34,"reference-type":35,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"array-type":40,"delegate-type":41,"type-name":42,"simple-type":43,"OBJECT":44,"STRING":45,"non-array-type":46,"namespace-or-type-name":47,"numeric-type":48,"BOOL":49,"IDENTIFIER":50,"integral-type":51,"floating-point-type":52,"DECIMAL":53,"SBYTE":54,"BYTE":55,"SHORT":56,"USHORT":57,"INT":58,"UINT":59,"LONG":60,"ULONG":61,"CHAR":62,"FLOAT":63,"DOUBLE":64}

item set 12 
block -> OPEN_BRACE .CLOSE_BRACE
block -> OPEN_BRACE .statement-list CLOSE_BRACE
statement-list -> .statement
statement-list -> .statement-list statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_BRACE":65,"statement-list":66,"statement":67,"labeled-statement":68,"declaration-statement":69,"embedded-statement":70,"IDENTIFIER":71,"local-variable-declaration":72,"local-constant-declaration":73,"block":74,"empty-statement":75,"expression-statement":76,"selection-statement":77,"iteration-statement":78,"jump-statement":79,"try-statement":80,"checked-statement":81,"unchecked-statement":82,"lock-statement":83,"using-statement":84,"type":85,"CONST":86,"OPEN_BRACE":12,"SEMICOLON":87,"statement-expression":88,"if-statement":89,"switch-statement":90,"while-statement":91,"do-statement":92,"for-statement":93,"foreach-statement":94,"break-statement":95,"continue-statement":96,"goto-statement":97,"return-statement":98,"throw-statement":99,"TRY":100,"CHECKED":101,"UNCHECKED":102,"LOCK":103,"USING":104,"value-type":34,"reference-type":35,"invocation-expression":105,"object-creation-expression":106,"assignment":107,"post-increment-expression":108,"post-decrement-expression":109,"pre-increment-expression":110,"pre-decrement-expression":111,"IF":112,"SWITCH":113,"WHILE":114,"DO":115,"FOR":116,"FOREACH":117,"BREAK":118,"CONTINUE":119,"GOTO":120,"RETURN":121,"THROW":122,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"array-type":40,"delegate-type":41,"primary-expression":123,"NEW":124,"unary-expression":125,"OP_INC":126,"OP_DEC":127,"type-name":42,"simple-type":43,"OBJECT":128,"STRING":129,"non-array-type":46,"primary-no-array-creation-expression":130,"array-creation-expression":131,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"cast-expression":137,"namespace-or-type-name":47,"numeric-type":48,"BOOL":138,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"element-access":143,"this-access":144,"base-access":145,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"OPEN_PARENS":151,"integral-type":51,"floating-point-type":52,"DECIMAL":152,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"SBYTE":163,"BYTE":164,"SHORT":165,"USHORT":166,"INT":167,"UINT":168,"LONG":169,"ULONG":170,"CHAR":171,"FLOAT":172,"DOUBLE":173,"TRUE":174,"FALSE":175}

item set 13 
attribute-sections -> attribute-section . 
transitions ->  {}

item set 14 
enum-modifiers -> enum-modifier . 
transitions ->  {}

item set 15 
attribute-section -> OPEN_BRACKET .attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-list COMMA CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
attribute-list -> .attribute
attribute-list -> .attribute-list COMMA attribute
attribute-target-specifier -> .attribute-target COLON
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-target -> .FIELD
attribute-target -> .EVENT
attribute-target -> .METHOD
attribute-target -> .PARAM
attribute-target -> .PROPERTY
attribute-target -> .RETURN
attribute-target -> .TYPE
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER 
transitions ->  {"attribute-list":176,"attribute-target-specifier":177,"attribute":178,"attribute-target":179,"attribute-name":180,"FIELD":181,"EVENT":182,"METHOD":183,"PARAM":184,"PROPERTY":185,"RETURN":186,"TYPE":187,"type-name":188,"namespace-or-type-name":47,"IDENTIFIER":50}

item set 16 
enum-modifier -> NEW . 
transitions ->  {}

item set 17 
enum-modifier -> PUBLIC . 
transitions ->  {}

item set 18 
enum-modifier -> PROTECTED . 
transitions ->  {}

item set 19 
enum-modifier -> INTERNAL . 
transitions ->  {}

item set 20 
enum-modifier -> PRIVATE . 
transitions ->  {}

item set 21 
compilationUnit -> es EOF . 
transitions ->  {}

item set 22 
es -> es e . 
transitions ->  {}

item set 23 
enum-declaration -> attributes ENUM .IDENTIFIER enum-body
enum-declaration -> attributes ENUM .IDENTIFIER enum-base enum-body
enum-declaration -> attributes ENUM .IDENTIFIER enum-body SEMICOLON
enum-declaration -> attributes ENUM .IDENTIFIER enum-base enum-body SEMICOLON 
transitions ->  {"IDENTIFIER":189}

item set 24 
enum-declaration -> attributes enum-modifiers .ENUM IDENTIFIER enum-body
enum-declaration -> attributes enum-modifiers .ENUM IDENTIFIER enum-body SEMICOLON
enum-declaration -> attributes enum-modifiers .ENUM IDENTIFIER enum-base enum-body
enum-declaration -> attributes enum-modifiers .ENUM IDENTIFIER enum-base enum-body SEMICOLON
delegate-declaration -> attributes enum-modifiers .DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes enum-modifiers .DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
enum-modifiers -> enum-modifiers .enum-modifier
enum-modifier -> .NEW
enum-modifier -> .PUBLIC
enum-modifier -> .PROTECTED
enum-modifier -> .INTERNAL
enum-modifier -> .PRIVATE 
transitions ->  {"ENUM":190,"DELEGATE":191,"enum-modifier":30,"NEW":16,"PUBLIC":17,"PROTECTED":18,"INTERNAL":19,"PRIVATE":20}

item set 25 
delegate-declaration -> attributes DELEGATE .return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes DELEGATE .return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
return-type -> .VOID
return-type -> .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"return-type":192,"VOID":32,"type":33,"value-type":34,"reference-type":35,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"array-type":40,"delegate-type":41,"type-name":42,"simple-type":43,"OBJECT":44,"STRING":45,"non-array-type":46,"namespace-or-type-name":47,"numeric-type":48,"BOOL":49,"IDENTIFIER":50,"integral-type":51,"floating-point-type":52,"DECIMAL":53,"SBYTE":54,"BYTE":55,"SHORT":56,"USHORT":57,"INT":58,"UINT":59,"LONG":60,"ULONG":61,"CHAR":62,"FLOAT":63,"DOUBLE":64}

item set 26 
attribute-sections -> attribute-sections attribute-section . 
transitions ->  {}

item set 27 
enum-declaration -> ENUM IDENTIFIER .enum-body
enum-declaration -> ENUM IDENTIFIER .enum-base enum-body
enum-declaration -> ENUM IDENTIFIER .enum-body SEMICOLON
enum-declaration -> ENUM IDENTIFIER .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON integral-type 
transitions ->  {"enum-body":193,"enum-base":194,"OPEN_BRACE":195,"COLON":196}

item set 28 
enum-declaration -> enum-modifiers ENUM .IDENTIFIER enum-body
enum-declaration -> enum-modifiers ENUM .IDENTIFIER enum-base enum-body
enum-declaration -> enum-modifiers ENUM .IDENTIFIER enum-body SEMICOLON
enum-declaration -> enum-modifiers ENUM .IDENTIFIER enum-base enum-body SEMICOLON 
transitions ->  {"IDENTIFIER":197}

item set 29 
delegate-declaration -> enum-modifiers DELEGATE .return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> enum-modifiers DELEGATE .return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
return-type -> .VOID
return-type -> .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"return-type":198,"VOID":32,"type":33,"value-type":34,"reference-type":35,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"array-type":40,"delegate-type":41,"type-name":42,"simple-type":43,"OBJECT":44,"STRING":45,"non-array-type":46,"namespace-or-type-name":47,"numeric-type":48,"BOOL":49,"IDENTIFIER":50,"integral-type":51,"floating-point-type":52,"DECIMAL":53,"SBYTE":54,"BYTE":55,"SHORT":56,"USHORT":57,"INT":58,"UINT":59,"LONG":60,"ULONG":61,"CHAR":62,"FLOAT":63,"DOUBLE":64}

item set 30 
enum-modifiers -> enum-modifiers enum-modifier . 
transitions ->  {}

item set 31 
delegate-declaration -> DELEGATE return-type .IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> DELEGATE return-type .IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"IDENTIFIER":199}

item set 32 
return-type -> VOID . 
transitions ->  {}

item set 33 
return-type -> type .
non-array-type -> type . 
transitions ->  {}

item set 34 
type -> value-type . 
transitions ->  {}

item set 35 
type -> reference-type . 
transitions ->  {}

item set 36 
value-type -> struct-type . 
transitions ->  {}

item set 37 
value-type -> enum-type . 
transitions ->  {}

item set 38 
reference-type -> class-type . 
transitions ->  {}

item set 39 
reference-type -> interface-type . 
transitions ->  {}

item set 40 
reference-type -> array-type . 
transitions ->  {}

item set 41 
reference-type -> delegate-type . 
transitions ->  {}

item set 42 
struct-type -> type-name .
enum-type -> type-name .
class-type -> type-name .
interface-type -> type-name .
delegate-type -> type-name . 
transitions ->  {}

item set 43 
struct-type -> simple-type . 
transitions ->  {}

item set 44 
class-type -> OBJECT . 
transitions ->  {}

item set 45 
class-type -> STRING . 
transitions ->  {}

item set 46 
array-type -> non-array-type .rank-specifiers
rank-specifiers -> .rank-specifier
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET 
transitions ->  {"rank-specifiers":200,"rank-specifier":201,"OPEN_BRACKET":202}

item set 47 
type-name -> namespace-or-type-name .
namespace-or-type-name -> namespace-or-type-name .DOT IDENTIFIER 
transitions ->  {"DOT":203}

item set 48 
simple-type -> numeric-type . 
transitions ->  {}

item set 49 
simple-type -> BOOL . 
transitions ->  {}

item set 50 
namespace-or-type-name -> IDENTIFIER . 
transitions ->  {}

item set 51 
numeric-type -> integral-type . 
transitions ->  {}

item set 52 
numeric-type -> floating-point-type . 
transitions ->  {}

item set 53 
numeric-type -> DECIMAL . 
transitions ->  {}

item set 54 
integral-type -> SBYTE . 
transitions ->  {}

item set 55 
integral-type -> BYTE . 
transitions ->  {}

item set 56 
integral-type -> SHORT . 
transitions ->  {}

item set 57 
integral-type -> USHORT . 
transitions ->  {}

item set 58 
integral-type -> INT . 
transitions ->  {}

item set 59 
integral-type -> UINT . 
transitions ->  {}

item set 60 
integral-type -> LONG . 
transitions ->  {}

item set 61 
integral-type -> ULONG . 
transitions ->  {}

item set 62 
integral-type -> CHAR . 
transitions ->  {}

item set 63 
floating-point-type -> FLOAT . 
transitions ->  {}

item set 64 
floating-point-type -> DOUBLE . 
transitions ->  {}

item set 65 
block -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 66 
block -> OPEN_BRACE statement-list .CLOSE_BRACE
statement-list -> statement-list .statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_BRACE":204,"statement":205,"labeled-statement":68,"declaration-statement":69,"embedded-statement":70,"IDENTIFIER":71,"local-variable-declaration":72,"local-constant-declaration":73,"block":74,"empty-statement":75,"expression-statement":76,"selection-statement":77,"iteration-statement":78,"jump-statement":79,"try-statement":80,"checked-statement":81,"unchecked-statement":82,"lock-statement":83,"using-statement":84,"type":85,"CONST":86,"OPEN_BRACE":12,"SEMICOLON":87,"statement-expression":88,"if-statement":89,"switch-statement":90,"while-statement":91,"do-statement":92,"for-statement":93,"foreach-statement":94,"break-statement":95,"continue-statement":96,"goto-statement":97,"return-statement":98,"throw-statement":99,"TRY":100,"CHECKED":101,"UNCHECKED":102,"LOCK":103,"USING":104,"value-type":34,"reference-type":35,"invocation-expression":105,"object-creation-expression":106,"assignment":107,"post-increment-expression":108,"post-decrement-expression":109,"pre-increment-expression":110,"pre-decrement-expression":111,"IF":112,"SWITCH":113,"WHILE":114,"DO":115,"FOR":116,"FOREACH":117,"BREAK":118,"CONTINUE":119,"GOTO":120,"RETURN":121,"THROW":122,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"array-type":40,"delegate-type":41,"primary-expression":123,"NEW":124,"unary-expression":125,"OP_INC":126,"OP_DEC":127,"type-name":42,"simple-type":43,"OBJECT":128,"STRING":129,"non-array-type":46,"primary-no-array-creation-expression":130,"array-creation-expression":131,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"cast-expression":137,"namespace-or-type-name":47,"numeric-type":48,"BOOL":138,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"element-access":143,"this-access":144,"base-access":145,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"OPEN_PARENS":151,"integral-type":51,"floating-point-type":52,"DECIMAL":152,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"SBYTE":163,"BYTE":164,"SHORT":165,"USHORT":166,"INT":167,"UINT":168,"LONG":169,"ULONG":170,"CHAR":171,"FLOAT":172,"DOUBLE":173,"TRUE":174,"FALSE":175}

item set 67 
statement-list -> statement . 
transitions ->  {}

item set 68 
statement -> labeled-statement . 
transitions ->  {}

item set 69 
statement -> declaration-statement . 
transitions ->  {}

item set 70 
statement -> embedded-statement . 
transitions ->  {}

item set 71 
labeled-statement -> IDENTIFIER .COLON statement
namespace-or-type-name -> IDENTIFIER .
simple-name -> IDENTIFIER . 
transitions ->  {"COLON":206}

item set 72 
declaration-statement -> local-variable-declaration .SEMICOLON 
transitions ->  {"SEMICOLON":207}

item set 73 
declaration-statement -> local-constant-declaration .SEMICOLON 
transitions ->  {"SEMICOLON":208}

item set 74 
embedded-statement -> block . 
transitions ->  {}

item set 75 
embedded-statement -> empty-statement . 
transitions ->  {}

item set 76 
embedded-statement -> expression-statement . 
transitions ->  {}

item set 77 
embedded-statement -> selection-statement . 
transitions ->  {}

item set 78 
embedded-statement -> iteration-statement . 
transitions ->  {}

item set 79 
embedded-statement -> jump-statement . 
transitions ->  {}

item set 80 
embedded-statement -> try-statement . 
transitions ->  {}

item set 81 
embedded-statement -> checked-statement . 
transitions ->  {}

item set 82 
embedded-statement -> unchecked-statement . 
transitions ->  {}

item set 83 
embedded-statement -> lock-statement . 
transitions ->  {}

item set 84 
embedded-statement -> using-statement . 
transitions ->  {}

item set 85 
local-variable-declaration -> type .local-variable-declarators
non-array-type -> type .
local-variable-declarators -> .local-variable-declarator
local-variable-declarators -> .local-variable-declarators COMMA local-variable-declarator
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
local-variable -> .
local-variable -> .IDENTIFIER 
transitions ->  {"local-variable-declarators":209,"local-variable-declarator":210,"local-variable":211,"IDENTIFIER":212}

item set 86 
local-constant-declaration -> CONST .type constant-declarators
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":213,"value-type":34,"reference-type":35,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"array-type":40,"delegate-type":41,"type-name":42,"simple-type":43,"OBJECT":44,"STRING":45,"non-array-type":46,"namespace-or-type-name":47,"numeric-type":48,"BOOL":49,"IDENTIFIER":50,"integral-type":51,"floating-point-type":52,"DECIMAL":53,"SBYTE":54,"BYTE":55,"SHORT":56,"USHORT":57,"INT":58,"UINT":59,"LONG":60,"ULONG":61,"CHAR":62,"FLOAT":63,"DOUBLE":64}

item set 87 
empty-statement -> SEMICOLON . 
transitions ->  {}

item set 88 
expression-statement -> statement-expression .SEMICOLON 
transitions ->  {"SEMICOLON":214}

item set 89 
selection-statement -> if-statement . 
transitions ->  {}

item set 90 
selection-statement -> switch-statement . 
transitions ->  {}

item set 91 
iteration-statement -> while-statement . 
transitions ->  {}

item set 92 
iteration-statement -> do-statement . 
transitions ->  {}

item set 93 
iteration-statement -> for-statement . 
transitions ->  {}

item set 94 
iteration-statement -> foreach-statement . 
transitions ->  {}

item set 95 
jump-statement -> break-statement . 
transitions ->  {}

item set 96 
jump-statement -> continue-statement . 
transitions ->  {}

item set 97 
jump-statement -> goto-statement . 
transitions ->  {}

item set 98 
jump-statement -> return-statement . 
transitions ->  {}

item set 99 
jump-statement -> throw-statement . 
transitions ->  {}

item set 100 
try-statement -> TRY .block catch-clauses
try-statement -> TRY .block finally-clause
try-statement -> TRY .block catch-clauses finally-clause
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":215,"OPEN_BRACE":12}

item set 101 
checked-statement -> CHECKED .block
checked-expression -> CHECKED .OPEN_PARENS expression CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":216,"OPEN_PARENS":217,"OPEN_BRACE":12}

item set 102 
unchecked-statement -> UNCHECKED .block
unchecked-expression -> UNCHECKED .OPEN_PARENS expression CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":218,"OPEN_PARENS":219,"OPEN_BRACE":12}

item set 103 
lock-statement -> LOCK .OPEN_PARENS expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":220}

item set 104 
using-statement -> USING .OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":221}

item set 105 
statement-expression -> invocation-expression .
primary-no-array-creation-expression -> invocation-expression . 
transitions ->  {}

item set 106 
statement-expression -> object-creation-expression .
primary-no-array-creation-expression -> object-creation-expression . 
transitions ->  {}

item set 107 
statement-expression -> assignment . 
transitions ->  {}

item set 108 
statement-expression -> post-increment-expression .
primary-no-array-creation-expression -> post-increment-expression . 
transitions ->  {}

item set 109 
statement-expression -> post-decrement-expression .
primary-no-array-creation-expression -> post-decrement-expression . 
transitions ->  {}

item set 110 
statement-expression -> pre-increment-expression .
unary-expression -> pre-increment-expression . 
transitions ->  {}

item set 111 
statement-expression -> pre-decrement-expression .
unary-expression -> pre-decrement-expression . 
transitions ->  {}

item set 112 
if-statement -> IF .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> IF .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement 
transitions ->  {"OPEN_PARENS":222}

item set 113 
switch-statement -> SWITCH .OPEN_PARENS expression CLOSE_PARENS switch-block 
transitions ->  {"OPEN_PARENS":223}

item set 114 
while-statement -> WHILE .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":224}

item set 115 
do-statement -> DO .embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":225,"block":74,"empty-statement":75,"expression-statement":76,"selection-statement":77,"iteration-statement":78,"jump-statement":79,"try-statement":80,"checked-statement":81,"unchecked-statement":82,"lock-statement":83,"using-statement":84,"OPEN_BRACE":12,"SEMICOLON":87,"statement-expression":88,"if-statement":89,"switch-statement":90,"while-statement":91,"do-statement":92,"for-statement":93,"foreach-statement":94,"break-statement":95,"continue-statement":96,"goto-statement":97,"return-statement":98,"throw-statement":99,"TRY":100,"CHECKED":101,"UNCHECKED":102,"LOCK":103,"USING":104,"invocation-expression":105,"object-creation-expression":106,"assignment":107,"post-increment-expression":108,"post-decrement-expression":109,"pre-increment-expression":110,"pre-decrement-expression":111,"IF":112,"SWITCH":113,"WHILE":114,"DO":115,"FOR":116,"FOREACH":117,"BREAK":118,"CONTINUE":119,"GOTO":120,"RETURN":121,"THROW":122,"primary-expression":123,"NEW":124,"unary-expression":125,"OP_INC":126,"OP_DEC":127,"primary-no-array-creation-expression":130,"array-creation-expression":131,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"cast-expression":137,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"element-access":143,"this-access":144,"base-access":145,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"OPEN_PARENS":151,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 116 
for-statement -> FOR .OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":242}

item set 117 
foreach-statement -> FOREACH .OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":243}

item set 118 
break-statement -> BREAK .SEMICOLON 
transitions ->  {"SEMICOLON":244}

item set 119 
continue-statement -> CONTINUE .SEMICOLON 
transitions ->  {"SEMICOLON":245}

item set 120 
goto-statement -> GOTO .IDENTIFIER SEMICOLON
goto-statement -> GOTO .CASE constant-expression SEMICOLON
goto-statement -> GOTO .DEFAULT SEMICOLON 
transitions ->  {"IDENTIFIER":246,"CASE":247,"DEFAULT":248}

item set 121 
return-statement -> RETURN .SEMICOLON
return-statement -> RETURN .expression SEMICOLON
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":249,"expression":250,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 122 
throw-statement -> THROW .SEMICOLON
throw-statement -> THROW .expression SEMICOLON
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":272,"expression":273,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 123 
invocation-expression -> primary-expression .OPEN_PARENS CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
post-increment-expression -> primary-expression .OP_INC
post-decrement-expression -> primary-expression .OP_DEC
unary-expression -> primary-expression .
member-access -> primary-expression .DOT IDENTIFIER 
transitions ->  {"OPEN_PARENS":274,"OP_INC":275,"OP_DEC":276,"DOT":277}

item set 124 
object-creation-expression -> NEW .type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> NEW .type OPEN_PARENS argument-list CLOSE_PARENS
array-creation-expression -> NEW .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> NEW .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> NEW .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> NEW .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> NEW .array-type array-initializer
delegate-creation-expression -> NEW .delegate-type OPEN_PARENS expression CLOSE_PARENS
type -> .value-type
type -> .reference-type
non-array-type -> .type
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
type-name -> .namespace-or-type-name
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
simple-type -> .numeric-type
simple-type -> .BOOL
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":278,"non-array-type":279,"array-type":280,"delegate-type":281,"value-type":34,"reference-type":35,"type-name":42,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"namespace-or-type-name":47,"simple-type":43,"OBJECT":44,"STRING":45,"IDENTIFIER":50,"numeric-type":48,"BOOL":49,"integral-type":51,"floating-point-type":52,"DECIMAL":53,"SBYTE":54,"BYTE":55,"SHORT":56,"USHORT":57,"INT":58,"UINT":59,"LONG":60,"ULONG":61,"CHAR":62,"FLOAT":63,"DOUBLE":64}

item set 125 
assignment -> unary-expression .assignment-operator expression
assignment-operator -> .ASSIGN
assignment-operator -> .OP_ADD_ASSIGNMENT
assignment-operator -> .OP_SUB_ASSIGNMENT
assignment-operator -> .OP_MULT_ASSIGNMENT
assignment-operator -> .OP_DIV_ASSIGNMENT
assignment-operator -> .OP_MOD_ASSIGNMENT
assignment-operator -> .OP_AND_ASSIGNMENT
assignment-operator -> .OP_OR_ASSIGNMENT
assignment-operator -> .OP_XOR_ASSIGNMENT
assignment-operator -> .OP_LEFT_SHIFT_ASSIGNMENT
assignment-operator -> .RIGHT_SHIFT_ASSIGNMENT 
transitions ->  {"assignment-operator":282,"ASSIGN":283,"OP_ADD_ASSIGNMENT":284,"OP_SUB_ASSIGNMENT":285,"OP_MULT_ASSIGNMENT":286,"OP_DIV_ASSIGNMENT":287,"OP_MOD_ASSIGNMENT":288,"OP_AND_ASSIGNMENT":289,"OP_OR_ASSIGNMENT":290,"OP_XOR_ASSIGNMENT":291,"OP_LEFT_SHIFT_ASSIGNMENT":292,"RIGHT_SHIFT_ASSIGNMENT":293}

item set 126 
pre-increment-expression -> OP_INC .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":294,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 127 
pre-decrement-expression -> OP_DEC .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":295,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 128 
class-type -> OBJECT .
predefined-type -> OBJECT . 
transitions ->  {}

item set 129 
class-type -> STRING .
predefined-type -> STRING . 
transitions ->  {}

item set 130 
primary-expression -> primary-no-array-creation-expression .
element-access -> primary-no-array-creation-expression .OPEN_BRACKET expression-list CLOSE_BRACKET 
transitions ->  {"OPEN_BRACKET":296}

item set 131 
primary-expression -> array-creation-expression . 
transitions ->  {}

item set 132 
unary-expression -> PLUS .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":297,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 133 
unary-expression -> MINUS .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":298,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 134 
unary-expression -> BANG .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":299,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 135 
unary-expression -> TILDE .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":300,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 136 
unary-expression -> STAR .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":301,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 137 
unary-expression -> cast-expression . 
transitions ->  {}

item set 138 
simple-type -> BOOL .
predefined-type -> BOOL . 
transitions ->  {}

item set 139 
primary-no-array-creation-expression -> literal . 
transitions ->  {}

item set 140 
primary-no-array-creation-expression -> simple-name . 
transitions ->  {}

item set 141 
primary-no-array-creation-expression -> parenthesized-expression . 
transitions ->  {}

item set 142 
primary-no-array-creation-expression -> member-access . 
transitions ->  {}

item set 143 
primary-no-array-creation-expression -> element-access . 
transitions ->  {}

item set 144 
primary-no-array-creation-expression -> this-access . 
transitions ->  {}

item set 145 
primary-no-array-creation-expression -> base-access . 
transitions ->  {}

item set 146 
primary-no-array-creation-expression -> delegate-creation-expression . 
transitions ->  {}

item set 147 
primary-no-array-creation-expression -> typeof-expression . 
transitions ->  {}

item set 148 
primary-no-array-creation-expression -> sizeof-expression . 
transitions ->  {}

item set 149 
primary-no-array-creation-expression -> checked-expression . 
transitions ->  {}

item set 150 
primary-no-array-creation-expression -> unchecked-expression . 
transitions ->  {}

item set 151 
cast-expression -> OPEN_PARENS .type CLOSE_PARENS unary-expression
parenthesized-expression -> OPEN_PARENS .expression CLOSE_PARENS
type -> .value-type
type -> .reference-type
expression -> .conditional-expression
expression -> .assignment
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"type":302,"expression":303,"value-type":34,"reference-type":35,"conditional-expression":251,"assignment":252,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"array-type":40,"delegate-type":41,"conditional-or-expression":253,"unary-expression":254,"type-name":42,"simple-type":43,"OBJECT":128,"STRING":129,"non-array-type":46,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"namespace-or-type-name":47,"numeric-type":48,"BOOL":138,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"IDENTIFIER":304,"integral-type":51,"floating-point-type":52,"DECIMAL":152,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"SBYTE":163,"BYTE":164,"SHORT":165,"USHORT":166,"INT":167,"UINT":168,"LONG":169,"ULONG":170,"CHAR":171,"FLOAT":172,"DOUBLE":173,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 152 
numeric-type -> DECIMAL .
predefined-type -> DECIMAL . 
transitions ->  {}

item set 153 
literal -> BOOLEAN_LITERAL . 
transitions ->  {}

item set 154 
literal -> REAL_LITERAL . 
transitions ->  {}

item set 155 
literal -> INTEGER_LITERAL . 
transitions ->  {}

item set 156 
literal -> STRING_LITERAL . 
transitions ->  {}

item set 157 
literal -> CHARACTER_LITERAL . 
transitions ->  {}

item set 158 
literal -> NULL . 
transitions ->  {}

item set 159 
member-access -> predefined-type .DOT IDENTIFIER 
transitions ->  {"DOT":305}

item set 160 
this-access -> THIS . 
transitions ->  {}

item set 161 
base-access -> base .DOT IDENTIFIER
base-access -> base .OPEN_BRACKET expression-list CLOSE_BRACKET 
transitions ->  {"DOT":306,"OPEN_BRACKET":307}

item set 162 
typeof-expression -> TYPEOF .OPEN_PARENS type CLOSE_PARENS
typeof-expression -> TYPEOF .OPEN_PARENS VOID CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":308}

item set 163 
integral-type -> SBYTE .
predefined-type -> SBYTE . 
transitions ->  {}

item set 164 
integral-type -> BYTE .
predefined-type -> BYTE . 
transitions ->  {}

item set 165 
integral-type -> SHORT .
predefined-type -> SHORT . 
transitions ->  {}

item set 166 
integral-type -> USHORT .
predefined-type -> USHORT . 
transitions ->  {}

item set 167 
integral-type -> INT .
predefined-type -> INT . 
transitions ->  {}

item set 168 
integral-type -> UINT .
predefined-type -> UINT . 
transitions ->  {}

item set 169 
integral-type -> LONG .
predefined-type -> LONG . 
transitions ->  {}

item set 170 
integral-type -> ULONG .
predefined-type -> ULONG . 
transitions ->  {}

item set 171 
integral-type -> CHAR .
predefined-type -> CHAR . 
transitions ->  {}

item set 172 
floating-point-type -> FLOAT .
predefined-type -> FLOAT . 
transitions ->  {}

item set 173 
floating-point-type -> DOUBLE .
predefined-type -> DOUBLE . 
transitions ->  {}

item set 174 
BOOLEAN_LITERAL -> TRUE . 
transitions ->  {}

item set 175 
BOOLEAN_LITERAL -> FALSE . 
transitions ->  {}

item set 176 
attribute-section -> OPEN_BRACKET attribute-list .CLOSE_BRACKET
attribute-section -> OPEN_BRACKET attribute-list .COMMA CLOSE_BRACKET
attribute-list -> attribute-list .COMMA attribute 
transitions ->  {"CLOSE_BRACKET":309,"COMMA":310}

item set 177 
attribute-section -> OPEN_BRACKET attribute-target-specifier .attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET attribute-target-specifier .attribute-list COMMA CLOSE_BRACKET
attribute-list -> .attribute
attribute-list -> .attribute-list COMMA attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER 
transitions ->  {"attribute-list":311,"attribute":178,"attribute-name":180,"type-name":188,"namespace-or-type-name":47,"IDENTIFIER":50}

item set 178 
attribute-list -> attribute . 
transitions ->  {}

item set 179 
attribute-target-specifier -> attribute-target .COLON 
transitions ->  {"COLON":312}

item set 180 
attribute -> attribute-name .
attribute -> attribute-name .attribute-arguments
attribute-arguments -> .OPEN_PARENS CLOSE_PARENS
attribute-arguments -> .OPEN_PARENS positional-argument-list CLOSE_PARENS
attribute-arguments -> .OPEN_PARENS positional-argument-list COMMA named-argument-list CLOSE_PARENS
attribute-arguments -> .OPEN_PARENS named-argument-list CLOSE_PARENS 
transitions ->  {"attribute-arguments":313,"OPEN_PARENS":314}

item set 181 
attribute-target -> FIELD . 
transitions ->  {}

item set 182 
attribute-target -> EVENT . 
transitions ->  {}

item set 183 
attribute-target -> METHOD . 
transitions ->  {}

item set 184 
attribute-target -> PARAM . 
transitions ->  {}

item set 185 
attribute-target -> PROPERTY . 
transitions ->  {}

item set 186 
attribute-target -> RETURN . 
transitions ->  {}

item set 187 
attribute-target -> TYPE . 
transitions ->  {}

item set 188 
attribute-name -> type-name . 
transitions ->  {}

item set 189 
enum-declaration -> attributes ENUM IDENTIFIER .enum-body
enum-declaration -> attributes ENUM IDENTIFIER .enum-base enum-body
enum-declaration -> attributes ENUM IDENTIFIER .enum-body SEMICOLON
enum-declaration -> attributes ENUM IDENTIFIER .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON integral-type 
transitions ->  {"enum-body":315,"enum-base":316,"OPEN_BRACE":195,"COLON":196}

item set 190 
enum-declaration -> attributes enum-modifiers ENUM .IDENTIFIER enum-body
enum-declaration -> attributes enum-modifiers ENUM .IDENTIFIER enum-body SEMICOLON
enum-declaration -> attributes enum-modifiers ENUM .IDENTIFIER enum-base enum-body
enum-declaration -> attributes enum-modifiers ENUM .IDENTIFIER enum-base enum-body SEMICOLON 
transitions ->  {"IDENTIFIER":317}

item set 191 
delegate-declaration -> attributes enum-modifiers DELEGATE .return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes enum-modifiers DELEGATE .return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
return-type -> .VOID
return-type -> .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"return-type":318,"VOID":32,"type":33,"value-type":34,"reference-type":35,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"array-type":40,"delegate-type":41,"type-name":42,"simple-type":43,"OBJECT":44,"STRING":45,"non-array-type":46,"namespace-or-type-name":47,"numeric-type":48,"BOOL":49,"IDENTIFIER":50,"integral-type":51,"floating-point-type":52,"DECIMAL":53,"SBYTE":54,"BYTE":55,"SHORT":56,"USHORT":57,"INT":58,"UINT":59,"LONG":60,"ULONG":61,"CHAR":62,"FLOAT":63,"DOUBLE":64}

item set 192 
delegate-declaration -> attributes DELEGATE return-type .IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes DELEGATE return-type .IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"IDENTIFIER":319}

item set 193 
enum-declaration -> ENUM IDENTIFIER enum-body .
enum-declaration -> ENUM IDENTIFIER enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":320}

item set 194 
enum-declaration -> ENUM IDENTIFIER enum-base .enum-body
enum-declaration -> ENUM IDENTIFIER enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":321,"OPEN_BRACE":195}

item set 195 
enum-body -> OPEN_BRACE .CLOSE_BRACE
enum-body -> OPEN_BRACE .enum-member-declarations CLOSE_BRACE
enum-body -> OPEN_BRACE .enum-member-declarations COMMA CLOSE_BRACE
enum-member-declarations -> .enum-member-declaration
enum-member-declarations -> .enum-member-declarations COMMA enum-member-declaration
enum-member-declaration -> .IDENTIFIER
enum-member-declaration -> .attributes IDENTIFIER
enum-member-declaration -> .IDENTIFIER ASSIGN constant-expression
enum-member-declaration -> .attributes IDENTIFIER ASSIGN constant-expression
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACE":322,"enum-member-declarations":323,"enum-member-declaration":324,"IDENTIFIER":325,"attributes":326,"attribute-sections":8,"attribute-section":13,"OPEN_BRACKET":15}

item set 196 
enum-base -> COLON .integral-type
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR 
transitions ->  {"integral-type":327,"SBYTE":54,"BYTE":55,"SHORT":56,"USHORT":57,"INT":58,"UINT":59,"LONG":60,"ULONG":61,"CHAR":62}

item set 197 
enum-declaration -> enum-modifiers ENUM IDENTIFIER .enum-body
enum-declaration -> enum-modifiers ENUM IDENTIFIER .enum-base enum-body
enum-declaration -> enum-modifiers ENUM IDENTIFIER .enum-body SEMICOLON
enum-declaration -> enum-modifiers ENUM IDENTIFIER .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON integral-type 
transitions ->  {"enum-body":328,"enum-base":329,"OPEN_BRACE":195,"COLON":196}

item set 198 
delegate-declaration -> enum-modifiers DELEGATE return-type .IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> enum-modifiers DELEGATE return-type .IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"IDENTIFIER":330}

item set 199 
delegate-declaration -> DELEGATE return-type IDENTIFIER .OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> DELEGATE return-type IDENTIFIER .OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"OPEN_PARENS":331}

item set 200 
array-type -> non-array-type rank-specifiers .
rank-specifiers -> rank-specifiers .rank-specifier
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET 
transitions ->  {"rank-specifier":332,"OPEN_BRACKET":202}

item set 201 
rank-specifiers -> rank-specifier . 
transitions ->  {}

item set 202 
rank-specifier -> OPEN_BRACKET .CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .dim-separators CLOSE_BRACKET
dim-separators -> .COMMA
dim-separators -> .dim-separators COMMA 
transitions ->  {"CLOSE_BRACKET":333,"dim-separators":334,"COMMA":335}

item set 203 
namespace-or-type-name -> namespace-or-type-name DOT .IDENTIFIER 
transitions ->  {"IDENTIFIER":336}

item set 204 
block -> OPEN_BRACE statement-list CLOSE_BRACE . 
transitions ->  {}

item set 205 
statement-list -> statement-list statement . 
transitions ->  {}

item set 206 
labeled-statement -> IDENTIFIER COLON .statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"statement":337,"labeled-statement":68,"declaration-statement":69,"embedded-statement":70,"IDENTIFIER":71,"local-variable-declaration":72,"local-constant-declaration":73,"block":74,"empty-statement":75,"expression-statement":76,"selection-statement":77,"iteration-statement":78,"jump-statement":79,"try-statement":80,"checked-statement":81,"unchecked-statement":82,"lock-statement":83,"using-statement":84,"type":85,"CONST":86,"OPEN_BRACE":12,"SEMICOLON":87,"statement-expression":88,"if-statement":89,"switch-statement":90,"while-statement":91,"do-statement":92,"for-statement":93,"foreach-statement":94,"break-statement":95,"continue-statement":96,"goto-statement":97,"return-statement":98,"throw-statement":99,"TRY":100,"CHECKED":101,"UNCHECKED":102,"LOCK":103,"USING":104,"value-type":34,"reference-type":35,"invocation-expression":105,"object-creation-expression":106,"assignment":107,"post-increment-expression":108,"post-decrement-expression":109,"pre-increment-expression":110,"pre-decrement-expression":111,"IF":112,"SWITCH":113,"WHILE":114,"DO":115,"FOR":116,"FOREACH":117,"BREAK":118,"CONTINUE":119,"GOTO":120,"RETURN":121,"THROW":122,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"array-type":40,"delegate-type":41,"primary-expression":123,"NEW":124,"unary-expression":125,"OP_INC":126,"OP_DEC":127,"type-name":42,"simple-type":43,"OBJECT":128,"STRING":129,"non-array-type":46,"primary-no-array-creation-expression":130,"array-creation-expression":131,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"cast-expression":137,"namespace-or-type-name":47,"numeric-type":48,"BOOL":138,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"element-access":143,"this-access":144,"base-access":145,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"OPEN_PARENS":151,"integral-type":51,"floating-point-type":52,"DECIMAL":152,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"SBYTE":163,"BYTE":164,"SHORT":165,"USHORT":166,"INT":167,"UINT":168,"LONG":169,"ULONG":170,"CHAR":171,"FLOAT":172,"DOUBLE":173,"TRUE":174,"FALSE":175}

item set 207 
declaration-statement -> local-variable-declaration SEMICOLON . 
transitions ->  {}

item set 208 
declaration-statement -> local-constant-declaration SEMICOLON . 
transitions ->  {}

item set 209 
local-variable-declaration -> type local-variable-declarators .
local-variable-declarators -> local-variable-declarators .COMMA local-variable-declarator 
transitions ->  {"COMMA":338}

item set 210 
local-variable-declarators -> local-variable-declarator . 
transitions ->  {}

item set 211 
local-variable-declarator -> local-variable .
local-variable-declarator -> local-variable .ASSIGN local-variable-initializer 
transitions ->  {"ASSIGN":339}

item set 212 
local-variable -> IDENTIFIER . 
transitions ->  {}

item set 213 
local-constant-declaration -> CONST type .constant-declarators
non-array-type -> type .
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarator -> .IDENTIFIER ASSIGN constant-expression 
transitions ->  {"constant-declarators":340,"constant-declarator":341,"IDENTIFIER":342}

item set 214 
expression-statement -> statement-expression SEMICOLON . 
transitions ->  {}

item set 215 
try-statement -> TRY block .catch-clauses
try-statement -> TRY block .finally-clause
try-statement -> TRY block .catch-clauses finally-clause
catch-clauses -> .specific-catch-clauses
catch-clauses -> .general-catch-clause
catch-clauses -> .specific-catch-clauses general-catch-clause
finally-clause -> .FINALLY block
specific-catch-clauses -> .specific-catch-clause
specific-catch-clauses -> .specific-catch-clauses specific-catch-clause
general-catch-clause -> .CATCH block
specific-catch-clause -> .CATCH OPEN_PARENS class-type CLOSE_PARENS block
specific-catch-clause -> .CATCH OPEN_PARENS class-type IDENTIFIER CLOSE_PARENS block 
transitions ->  {"catch-clauses":343,"finally-clause":344,"specific-catch-clauses":345,"general-catch-clause":346,"FINALLY":347,"specific-catch-clause":348,"CATCH":349}

item set 216 
checked-statement -> CHECKED block . 
transitions ->  {}

item set 217 
checked-expression -> CHECKED OPEN_PARENS .expression CLOSE_PARENS
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":350,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 218 
unchecked-statement -> UNCHECKED block . 
transitions ->  {}

item set 219 
unchecked-expression -> UNCHECKED OPEN_PARENS .expression CLOSE_PARENS
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":351,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 220 
lock-statement -> LOCK OPEN_PARENS .expression CLOSE_PARENS embedded-statement
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":352,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 221 
using-statement -> USING OPEN_PARENS .resource-acquisition CLOSE_PARENS embedded-statement
resource-acquisition -> .local-variable-declaration
resource-acquisition -> .expression
local-variable-declaration -> .type local-variable-declarators
expression -> .conditional-expression
expression -> .assignment
type -> .value-type
type -> .reference-type
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"resource-acquisition":353,"local-variable-declaration":354,"expression":355,"type":85,"conditional-expression":251,"assignment":252,"value-type":34,"reference-type":35,"conditional-or-expression":253,"unary-expression":254,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"array-type":40,"delegate-type":41,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"type-name":42,"simple-type":43,"OBJECT":128,"STRING":129,"non-array-type":46,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"namespace-or-type-name":47,"numeric-type":48,"BOOL":138,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"IDENTIFIER":304,"integral-type":51,"floating-point-type":52,"DECIMAL":152,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"SBYTE":163,"BYTE":164,"SHORT":165,"USHORT":166,"INT":167,"UINT":168,"LONG":169,"ULONG":170,"CHAR":171,"FLOAT":172,"DOUBLE":173,"equality-expression":267,"TRUE":174,"FALSE":175,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 222 
if-statement -> IF OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement
if-statement -> IF OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":356,"expression":357,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 223 
switch-statement -> SWITCH OPEN_PARENS .expression CLOSE_PARENS switch-block
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":358,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 224 
while-statement -> WHILE OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":359,"expression":357,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 225 
do-statement -> DO embedded-statement .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON 
transitions ->  {"WHILE":360}

item set 226 
simple-name -> IDENTIFIER . 
transitions ->  {}

item set 227 
predefined-type -> BOOL . 
transitions ->  {}

item set 228 
predefined-type -> BYTE . 
transitions ->  {}

item set 229 
predefined-type -> CHAR . 
transitions ->  {}

item set 230 
predefined-type -> DECIMAL . 
transitions ->  {}

item set 231 
predefined-type -> DOUBLE . 
transitions ->  {}

item set 232 
predefined-type -> FLOAT . 
transitions ->  {}

item set 233 
predefined-type -> INT . 
transitions ->  {}

item set 234 
predefined-type -> LONG . 
transitions ->  {}

item set 235 
predefined-type -> OBJECT . 
transitions ->  {}

item set 236 
predefined-type -> SBYTE . 
transitions ->  {}

item set 237 
predefined-type -> SHORT . 
transitions ->  {}

item set 238 
predefined-type -> STRING . 
transitions ->  {}

item set 239 
predefined-type -> UINT . 
transitions ->  {}

item set 240 
predefined-type -> ULONG . 
transitions ->  {}

item set 241 
predefined-type -> USHORT . 
transitions ->  {}

item set 242 
for-statement -> FOR OPEN_PARENS .SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-initializer -> .local-variable-declaration
for-initializer -> .statement-expression-list
local-variable-declaration -> .type local-variable-declarators
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"SEMICOLON":361,"for-initializer":362,"local-variable-declaration":363,"statement-expression-list":364,"type":85,"statement-expression":365,"value-type":34,"reference-type":35,"invocation-expression":105,"object-creation-expression":106,"assignment":107,"post-increment-expression":108,"post-decrement-expression":109,"pre-increment-expression":110,"pre-decrement-expression":111,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"array-type":40,"delegate-type":41,"primary-expression":123,"NEW":124,"unary-expression":125,"OP_INC":126,"OP_DEC":127,"type-name":42,"simple-type":43,"OBJECT":128,"STRING":129,"non-array-type":46,"primary-no-array-creation-expression":130,"array-creation-expression":131,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"cast-expression":137,"namespace-or-type-name":47,"numeric-type":48,"BOOL":138,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"element-access":143,"this-access":144,"base-access":145,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"OPEN_PARENS":151,"IDENTIFIER":304,"integral-type":51,"floating-point-type":52,"DECIMAL":152,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"SBYTE":163,"BYTE":164,"SHORT":165,"USHORT":166,"INT":167,"UINT":168,"LONG":169,"ULONG":170,"CHAR":171,"FLOAT":172,"DOUBLE":173,"TRUE":174,"FALSE":175}

item set 243 
foreach-statement -> FOREACH OPEN_PARENS .type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":366,"value-type":34,"reference-type":35,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"array-type":40,"delegate-type":41,"type-name":42,"simple-type":43,"OBJECT":44,"STRING":45,"non-array-type":46,"namespace-or-type-name":47,"numeric-type":48,"BOOL":49,"IDENTIFIER":50,"integral-type":51,"floating-point-type":52,"DECIMAL":53,"SBYTE":54,"BYTE":55,"SHORT":56,"USHORT":57,"INT":58,"UINT":59,"LONG":60,"ULONG":61,"CHAR":62,"FLOAT":63,"DOUBLE":64}

item set 244 
break-statement -> BREAK SEMICOLON . 
transitions ->  {}

item set 245 
continue-statement -> CONTINUE SEMICOLON . 
transitions ->  {}

item set 246 
goto-statement -> GOTO IDENTIFIER .SEMICOLON 
transitions ->  {"SEMICOLON":367}

item set 247 
goto-statement -> GOTO CASE .constant-expression SEMICOLON
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":368,"expression":369,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 248 
goto-statement -> GOTO DEFAULT .SEMICOLON 
transitions ->  {"SEMICOLON":370}

item set 249 
return-statement -> RETURN SEMICOLON . 
transitions ->  {}

item set 250 
return-statement -> RETURN expression .SEMICOLON 
transitions ->  {"SEMICOLON":371}

item set 251 
expression -> conditional-expression . 
transitions ->  {}

item set 252 
expression -> assignment . 
transitions ->  {}

item set 253 
conditional-expression -> conditional-or-expression .
conditional-expression -> conditional-or-expression .INTERR expression COLON expression
conditional-or-expression -> conditional-or-expression .OP_OR conditional-and-expression 
transitions ->  {"INTERR":372,"OP_OR":373}

item set 254 
assignment -> unary-expression .assignment-operator expression
multiplicative-expression -> unary-expression .
assignment-operator -> .ASSIGN
assignment-operator -> .OP_ADD_ASSIGNMENT
assignment-operator -> .OP_SUB_ASSIGNMENT
assignment-operator -> .OP_MULT_ASSIGNMENT
assignment-operator -> .OP_DIV_ASSIGNMENT
assignment-operator -> .OP_MOD_ASSIGNMENT
assignment-operator -> .OP_AND_ASSIGNMENT
assignment-operator -> .OP_OR_ASSIGNMENT
assignment-operator -> .OP_XOR_ASSIGNMENT
assignment-operator -> .OP_LEFT_SHIFT_ASSIGNMENT
assignment-operator -> .RIGHT_SHIFT_ASSIGNMENT 
transitions ->  {"assignment-operator":282,"ASSIGN":283,"OP_ADD_ASSIGNMENT":284,"OP_SUB_ASSIGNMENT":285,"OP_MULT_ASSIGNMENT":286,"OP_DIV_ASSIGNMENT":287,"OP_MOD_ASSIGNMENT":288,"OP_AND_ASSIGNMENT":289,"OP_OR_ASSIGNMENT":290,"OP_XOR_ASSIGNMENT":291,"OP_LEFT_SHIFT_ASSIGNMENT":292,"RIGHT_SHIFT_ASSIGNMENT":293}

item set 255 
conditional-or-expression -> conditional-and-expression .
conditional-and-expression -> conditional-and-expression .OP_AND inclusive-or-expression 
transitions ->  {"OP_AND":374}

item set 256 
unary-expression -> pre-increment-expression . 
transitions ->  {}

item set 257 
unary-expression -> pre-decrement-expression . 
transitions ->  {}

item set 258 
conditional-and-expression -> inclusive-or-expression .
inclusive-or-expression -> inclusive-or-expression .BITWISE_OR exclusive-or-expression 
transitions ->  {"BITWISE_OR":375}

item set 259 
inclusive-or-expression -> exclusive-or-expression .
exclusive-or-expression -> exclusive-or-expression .CARET and-expression 
transitions ->  {"CARET":376}

item set 260 
primary-no-array-creation-expression -> invocation-expression . 
transitions ->  {}

item set 261 
primary-no-array-creation-expression -> post-increment-expression . 
transitions ->  {}

item set 262 
primary-no-array-creation-expression -> post-decrement-expression . 
transitions ->  {}

item set 263 
primary-no-array-creation-expression -> object-creation-expression . 
transitions ->  {}

item set 264 
exclusive-or-expression -> and-expression .
and-expression -> and-expression .AMP equality-expression 
transitions ->  {"AMP":377}

item set 265 
checked-expression -> CHECKED .OPEN_PARENS expression CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":217}

item set 266 
unchecked-expression -> UNCHECKED .OPEN_PARENS expression CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":219}

item set 267 
and-expression -> equality-expression .
equality-expression -> equality-expression .OP_EQ relational-expression
equality-expression -> equality-expression .OP_NE relational-expression 
transitions ->  {"OP_EQ":378,"OP_NE":379}

item set 268 
equality-expression -> relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":380,"GT":381,"OP_LE":382,"OP_GE":383,"IS":384,"AS":385}

item set 269 
relational-expression -> shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":386,"RIGHT_SHIFT":387}

item set 270 
shift-expression -> additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":388,"MINUS":389}

item set 271 
additive-expression -> multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":390,"DIV":391,"PERCENT":392}

item set 272 
throw-statement -> THROW SEMICOLON . 
transitions ->  {}

item set 273 
throw-statement -> THROW expression .SEMICOLON 
transitions ->  {"SEMICOLON":393}

item set 274 
invocation-expression -> primary-expression OPEN_PARENS .CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .argument-list CLOSE_PARENS
argument-list -> .argument
argument-list -> .argument-list COMMA argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":394,"argument-list":395,"argument":396,"expression":397,"REF":398,"OUT":399,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 275 
post-increment-expression -> primary-expression OP_INC . 
transitions ->  {}

item set 276 
post-decrement-expression -> primary-expression OP_DEC . 
transitions ->  {}

item set 277 
member-access -> primary-expression DOT .IDENTIFIER 
transitions ->  {"IDENTIFIER":400}

item set 278 
object-creation-expression -> NEW type .OPEN_PARENS CLOSE_PARENS
object-creation-expression -> NEW type .OPEN_PARENS argument-list CLOSE_PARENS
non-array-type -> type . 
transitions ->  {"OPEN_PARENS":401}

item set 279 
array-creation-expression -> NEW non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> NEW non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> NEW non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> NEW non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-type -> non-array-type .rank-specifiers
rank-specifiers -> .rank-specifier
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET 
transitions ->  {"OPEN_BRACKET":402,"rank-specifiers":200,"rank-specifier":201}

item set 280 
array-creation-expression -> NEW array-type .array-initializer
reference-type -> array-type .
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE 
transitions ->  {"array-initializer":403,"OPEN_BRACE":404}

item set 281 
delegate-creation-expression -> NEW delegate-type .OPEN_PARENS expression CLOSE_PARENS
reference-type -> delegate-type . 
transitions ->  {"OPEN_PARENS":405}

item set 282 
assignment -> unary-expression assignment-operator .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":406,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 283 
assignment-operator -> ASSIGN . 
transitions ->  {}

item set 284 
assignment-operator -> OP_ADD_ASSIGNMENT . 
transitions ->  {}

item set 285 
assignment-operator -> OP_SUB_ASSIGNMENT . 
transitions ->  {}

item set 286 
assignment-operator -> OP_MULT_ASSIGNMENT . 
transitions ->  {}

item set 287 
assignment-operator -> OP_DIV_ASSIGNMENT . 
transitions ->  {}

item set 288 
assignment-operator -> OP_MOD_ASSIGNMENT . 
transitions ->  {}

item set 289 
assignment-operator -> OP_AND_ASSIGNMENT . 
transitions ->  {}

item set 290 
assignment-operator -> OP_OR_ASSIGNMENT . 
transitions ->  {}

item set 291 
assignment-operator -> OP_XOR_ASSIGNMENT . 
transitions ->  {}

item set 292 
assignment-operator -> OP_LEFT_SHIFT_ASSIGNMENT . 
transitions ->  {}

item set 293 
assignment-operator -> RIGHT_SHIFT_ASSIGNMENT . 
transitions ->  {}

item set 294 
pre-increment-expression -> OP_INC unary-expression . 
transitions ->  {}

item set 295 
pre-decrement-expression -> OP_DEC unary-expression . 
transitions ->  {}

item set 296 
element-access -> primary-no-array-creation-expression OPEN_BRACKET .expression-list CLOSE_BRACKET
expression-list -> .expression
expression-list -> .expression-list COMMA expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression-list":407,"expression":408,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 297 
unary-expression -> PLUS unary-expression . 
transitions ->  {}

item set 298 
unary-expression -> MINUS unary-expression . 
transitions ->  {}

item set 299 
unary-expression -> BANG unary-expression . 
transitions ->  {}

item set 300 
unary-expression -> TILDE unary-expression . 
transitions ->  {}

item set 301 
unary-expression -> STAR unary-expression . 
transitions ->  {}

item set 302 
cast-expression -> OPEN_PARENS type .CLOSE_PARENS unary-expression
non-array-type -> type . 
transitions ->  {"CLOSE_PARENS":409}

item set 303 
parenthesized-expression -> OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":410}

item set 304 
namespace-or-type-name -> IDENTIFIER .
simple-name -> IDENTIFIER . 
transitions ->  {}

item set 305 
member-access -> predefined-type DOT .IDENTIFIER 
transitions ->  {"IDENTIFIER":411}

item set 306 
base-access -> base DOT .IDENTIFIER 
transitions ->  {"IDENTIFIER":412}

item set 307 
base-access -> base OPEN_BRACKET .expression-list CLOSE_BRACKET
expression-list -> .expression
expression-list -> .expression-list COMMA expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression-list":413,"expression":408,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 308 
typeof-expression -> TYPEOF OPEN_PARENS .type CLOSE_PARENS
typeof-expression -> TYPEOF OPEN_PARENS .VOID CLOSE_PARENS
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":414,"VOID":415,"value-type":34,"reference-type":35,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"array-type":40,"delegate-type":41,"type-name":42,"simple-type":43,"OBJECT":44,"STRING":45,"non-array-type":46,"namespace-or-type-name":47,"numeric-type":48,"BOOL":49,"IDENTIFIER":50,"integral-type":51,"floating-point-type":52,"DECIMAL":53,"SBYTE":54,"BYTE":55,"SHORT":56,"USHORT":57,"INT":58,"UINT":59,"LONG":60,"ULONG":61,"CHAR":62,"FLOAT":63,"DOUBLE":64}

item set 309 
attribute-section -> OPEN_BRACKET attribute-list CLOSE_BRACKET . 
transitions ->  {}

item set 310 
attribute-section -> OPEN_BRACKET attribute-list COMMA .CLOSE_BRACKET
attribute-list -> attribute-list COMMA .attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER 
transitions ->  {"CLOSE_BRACKET":416,"attribute":417,"attribute-name":180,"type-name":188,"namespace-or-type-name":47,"IDENTIFIER":50}

item set 311 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list .CLOSE_BRACKET
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list .COMMA CLOSE_BRACKET
attribute-list -> attribute-list .COMMA attribute 
transitions ->  {"CLOSE_BRACKET":418,"COMMA":419}

item set 312 
attribute-target-specifier -> attribute-target COLON . 
transitions ->  {}

item set 313 
attribute -> attribute-name attribute-arguments . 
transitions ->  {}

item set 314 
attribute-arguments -> OPEN_PARENS .CLOSE_PARENS
attribute-arguments -> OPEN_PARENS .positional-argument-list CLOSE_PARENS
attribute-arguments -> OPEN_PARENS .positional-argument-list COMMA named-argument-list CLOSE_PARENS
attribute-arguments -> OPEN_PARENS .named-argument-list CLOSE_PARENS
positional-argument-list -> .positional-argument
positional-argument-list -> .positional-argument-list COMMA positional-argument
named-argument-list -> .named-argument
named-argument-list -> .named-argument-list COMMA named-argument
positional-argument -> .attribute-argument-expression
named-argument -> .IDENTIFIER ASSIGN attribute-argument-expression
attribute-argument-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":420,"positional-argument-list":421,"named-argument-list":422,"positional-argument":423,"named-argument":424,"attribute-argument-expression":425,"IDENTIFIER":426,"expression":427,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 315 
enum-declaration -> attributes ENUM IDENTIFIER enum-body .
enum-declaration -> attributes ENUM IDENTIFIER enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":428}

item set 316 
enum-declaration -> attributes ENUM IDENTIFIER enum-base .enum-body
enum-declaration -> attributes ENUM IDENTIFIER enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":429,"OPEN_BRACE":195}

item set 317 
enum-declaration -> attributes enum-modifiers ENUM IDENTIFIER .enum-body
enum-declaration -> attributes enum-modifiers ENUM IDENTIFIER .enum-body SEMICOLON
enum-declaration -> attributes enum-modifiers ENUM IDENTIFIER .enum-base enum-body
enum-declaration -> attributes enum-modifiers ENUM IDENTIFIER .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON integral-type 
transitions ->  {"enum-body":430,"enum-base":431,"OPEN_BRACE":195,"COLON":196}

item set 318 
delegate-declaration -> attributes enum-modifiers DELEGATE return-type .IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes enum-modifiers DELEGATE return-type .IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"IDENTIFIER":432}

item set 319 
delegate-declaration -> attributes DELEGATE return-type IDENTIFIER .OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes DELEGATE return-type IDENTIFIER .OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"OPEN_PARENS":433}

item set 320 
enum-declaration -> ENUM IDENTIFIER enum-body SEMICOLON . 
transitions ->  {}

item set 321 
enum-declaration -> ENUM IDENTIFIER enum-base enum-body .
enum-declaration -> ENUM IDENTIFIER enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":434}

item set 322 
enum-body -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 323 
enum-body -> OPEN_BRACE enum-member-declarations .CLOSE_BRACE
enum-body -> OPEN_BRACE enum-member-declarations .COMMA CLOSE_BRACE
enum-member-declarations -> enum-member-declarations .COMMA enum-member-declaration 
transitions ->  {"CLOSE_BRACE":435,"COMMA":436}

item set 324 
enum-member-declarations -> enum-member-declaration . 
transitions ->  {}

item set 325 
enum-member-declaration -> IDENTIFIER .
enum-member-declaration -> IDENTIFIER .ASSIGN constant-expression 
transitions ->  {"ASSIGN":437}

item set 326 
enum-member-declaration -> attributes .IDENTIFIER
enum-member-declaration -> attributes .IDENTIFIER ASSIGN constant-expression 
transitions ->  {"IDENTIFIER":438}

item set 327 
enum-base -> COLON integral-type . 
transitions ->  {}

item set 328 
enum-declaration -> enum-modifiers ENUM IDENTIFIER enum-body .
enum-declaration -> enum-modifiers ENUM IDENTIFIER enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":439}

item set 329 
enum-declaration -> enum-modifiers ENUM IDENTIFIER enum-base .enum-body
enum-declaration -> enum-modifiers ENUM IDENTIFIER enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":440,"OPEN_BRACE":195}

item set 330 
delegate-declaration -> enum-modifiers DELEGATE return-type IDENTIFIER .OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> enum-modifiers DELEGATE return-type IDENTIFIER .OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"OPEN_PARENS":441}

item set 331 
delegate-declaration -> DELEGATE return-type IDENTIFIER OPEN_PARENS .CLOSE_PARENS SEMICOLON
delegate-declaration -> DELEGATE return-type IDENTIFIER OPEN_PARENS .formal-parameter-list CLOSE_PARENS SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .params array-type IDENTIFIER
parameter-array -> .attributes params array-type IDENTIFIER
fixed-parameter -> .type IDENTIFIER
fixed-parameter -> .parameter-modifier type IDENTIFIER
fixed-parameter -> .attributes type IDENTIFIER
fixed-parameter -> .attributes parameter-modifieropt type IDENTIFIER
attributes -> .attribute-sections
type -> .value-type
type -> .reference-type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"CLOSE_PARENS":442,"formal-parameter-list":443,"fixed-parameters":444,"parameter-array":445,"fixed-parameter":446,"params":447,"attributes":448,"type":449,"parameter-modifier":450,"attribute-sections":8,"value-type":34,"reference-type":35,"REF":451,"OUT":452,"attribute-section":13,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"array-type":40,"delegate-type":41,"OPEN_BRACKET":15,"type-name":42,"simple-type":43,"OBJECT":44,"STRING":45,"non-array-type":46,"namespace-or-type-name":47,"numeric-type":48,"BOOL":49,"IDENTIFIER":50,"integral-type":51,"floating-point-type":52,"DECIMAL":53,"SBYTE":54,"BYTE":55,"SHORT":56,"USHORT":57,"INT":58,"UINT":59,"LONG":60,"ULONG":61,"CHAR":62,"FLOAT":63,"DOUBLE":64}

item set 332 
rank-specifiers -> rank-specifiers rank-specifier . 
transitions ->  {}

item set 333 
rank-specifier -> OPEN_BRACKET CLOSE_BRACKET . 
transitions ->  {}

item set 334 
rank-specifier -> OPEN_BRACKET dim-separators .CLOSE_BRACKET
dim-separators -> dim-separators .COMMA 
transitions ->  {"CLOSE_BRACKET":453,"COMMA":454}

item set 335 
dim-separators -> COMMA . 
transitions ->  {}

item set 336 
namespace-or-type-name -> namespace-or-type-name DOT IDENTIFIER . 
transitions ->  {}

item set 337 
labeled-statement -> IDENTIFIER COLON statement . 
transitions ->  {}

item set 338 
local-variable-declarators -> local-variable-declarators COMMA .local-variable-declarator
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
local-variable -> .
local-variable -> .IDENTIFIER 
transitions ->  {"local-variable-declarator":455,"local-variable":211,"IDENTIFIER":212}

item set 339 
local-variable-declarator -> local-variable ASSIGN .local-variable-initializer
local-variable-initializer -> .expression
local-variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"local-variable-initializer":456,"expression":457,"array-initializer":458,"conditional-expression":251,"assignment":252,"OPEN_BRACE":404,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 340 
local-constant-declaration -> CONST type constant-declarators .
constant-declarators -> constant-declarators .COMMA constant-declarator 
transitions ->  {"COMMA":459}

item set 341 
constant-declarators -> constant-declarator . 
transitions ->  {}

item set 342 
constant-declarator -> IDENTIFIER .ASSIGN constant-expression 
transitions ->  {"ASSIGN":460}

item set 343 
try-statement -> TRY block catch-clauses .
try-statement -> TRY block catch-clauses .finally-clause
finally-clause -> .FINALLY block 
transitions ->  {"finally-clause":461,"FINALLY":347}

item set 344 
try-statement -> TRY block finally-clause . 
transitions ->  {}

item set 345 
catch-clauses -> specific-catch-clauses .
catch-clauses -> specific-catch-clauses .general-catch-clause
specific-catch-clauses -> specific-catch-clauses .specific-catch-clause
general-catch-clause -> .CATCH block
specific-catch-clause -> .CATCH OPEN_PARENS class-type CLOSE_PARENS block
specific-catch-clause -> .CATCH OPEN_PARENS class-type IDENTIFIER CLOSE_PARENS block 
transitions ->  {"general-catch-clause":462,"specific-catch-clause":463,"CATCH":349}

item set 346 
catch-clauses -> general-catch-clause . 
transitions ->  {}

item set 347 
finally-clause -> FINALLY .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":464,"OPEN_BRACE":12}

item set 348 
specific-catch-clauses -> specific-catch-clause . 
transitions ->  {}

item set 349 
general-catch-clause -> CATCH .block
specific-catch-clause -> CATCH .OPEN_PARENS class-type CLOSE_PARENS block
specific-catch-clause -> CATCH .OPEN_PARENS class-type IDENTIFIER CLOSE_PARENS block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":465,"OPEN_PARENS":466,"OPEN_BRACE":12}

item set 350 
checked-expression -> CHECKED OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":467}

item set 351 
unchecked-expression -> UNCHECKED OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":468}

item set 352 
lock-statement -> LOCK OPEN_PARENS expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":469}

item set 353 
using-statement -> USING OPEN_PARENS resource-acquisition .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":470}

item set 354 
resource-acquisition -> local-variable-declaration . 
transitions ->  {}

item set 355 
resource-acquisition -> expression . 
transitions ->  {}

item set 356 
if-statement -> IF OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement
if-statement -> IF OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement ELSE embedded-statement 
transitions ->  {"CLOSE_PARENS":471}

item set 357 
boolean-expression -> expression .
boolean-expression -> expression . 
transitions ->  {}

item set 358 
switch-statement -> SWITCH OPEN_PARENS expression .CLOSE_PARENS switch-block 
transitions ->  {"CLOSE_PARENS":472}

item set 359 
while-statement -> WHILE OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":473}

item set 360 
do-statement -> DO embedded-statement WHILE .OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON 
transitions ->  {"OPEN_PARENS":474}

item set 361 
for-statement -> FOR OPEN_PARENS SEMICOLON .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-condition -> .boolean-expression
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":475,"for-condition":476,"boolean-expression":477,"expression":357,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 362 
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":478}

item set 363 
for-initializer -> local-variable-declaration . 
transitions ->  {}

item set 364 
for-initializer -> statement-expression-list .
statement-expression-list -> statement-expression-list .COMMA statement-expression 
transitions ->  {"COMMA":479}

item set 365 
statement-expression-list -> statement-expression . 
transitions ->  {}

item set 366 
foreach-statement -> FOREACH OPEN_PARENS type .IDENTIFIER IN expression CLOSE_PARENS embedded-statement
non-array-type -> type . 
transitions ->  {"IDENTIFIER":480}

item set 367 
goto-statement -> GOTO IDENTIFIER SEMICOLON . 
transitions ->  {}

item set 368 
goto-statement -> GOTO CASE constant-expression .SEMICOLON 
transitions ->  {"SEMICOLON":481}

item set 369 
constant-expression -> expression . 
transitions ->  {}

item set 370 
goto-statement -> GOTO DEFAULT SEMICOLON . 
transitions ->  {}

item set 371 
return-statement -> RETURN expression SEMICOLON . 
transitions ->  {}

item set 372 
conditional-expression -> conditional-or-expression INTERR .expression COLON expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":482,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 373 
conditional-or-expression -> conditional-or-expression OP_OR .conditional-and-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"conditional-and-expression":483,"inclusive-or-expression":258,"exclusive-or-expression":259,"and-expression":264,"equality-expression":267,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271,"unary-expression":484,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 374 
conditional-and-expression -> conditional-and-expression OP_AND .inclusive-or-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"inclusive-or-expression":485,"exclusive-or-expression":259,"and-expression":264,"equality-expression":267,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271,"unary-expression":484,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 375 
inclusive-or-expression -> inclusive-or-expression BITWISE_OR .exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"exclusive-or-expression":486,"and-expression":264,"equality-expression":267,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271,"unary-expression":484,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 376 
exclusive-or-expression -> exclusive-or-expression CARET .and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"and-expression":487,"equality-expression":267,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271,"unary-expression":484,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 377 
and-expression -> and-expression AMP .equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"equality-expression":488,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271,"unary-expression":484,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 378 
equality-expression -> equality-expression OP_EQ .relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"relational-expression":489,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271,"unary-expression":484,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 379 
equality-expression -> equality-expression OP_NE .relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"relational-expression":490,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271,"unary-expression":484,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 380 
relational-expression -> relational-expression LT .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"shift-expression":491,"additive-expression":270,"multiplicative-expression":271,"unary-expression":484,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 381 
relational-expression -> relational-expression GT .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"shift-expression":492,"additive-expression":270,"multiplicative-expression":271,"unary-expression":484,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 382 
relational-expression -> relational-expression OP_LE .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"shift-expression":493,"additive-expression":270,"multiplicative-expression":271,"unary-expression":484,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 383 
relational-expression -> relational-expression OP_GE .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"shift-expression":494,"additive-expression":270,"multiplicative-expression":271,"unary-expression":484,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 384 
relational-expression -> relational-expression IS .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":495,"value-type":34,"reference-type":35,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"array-type":40,"delegate-type":41,"type-name":42,"simple-type":43,"OBJECT":44,"STRING":45,"non-array-type":46,"namespace-or-type-name":47,"numeric-type":48,"BOOL":49,"IDENTIFIER":50,"integral-type":51,"floating-point-type":52,"DECIMAL":53,"SBYTE":54,"BYTE":55,"SHORT":56,"USHORT":57,"INT":58,"UINT":59,"LONG":60,"ULONG":61,"CHAR":62,"FLOAT":63,"DOUBLE":64}

item set 385 
relational-expression -> relational-expression AS .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":496,"value-type":34,"reference-type":35,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"array-type":40,"delegate-type":41,"type-name":42,"simple-type":43,"OBJECT":44,"STRING":45,"non-array-type":46,"namespace-or-type-name":47,"numeric-type":48,"BOOL":49,"IDENTIFIER":50,"integral-type":51,"floating-point-type":52,"DECIMAL":53,"SBYTE":54,"BYTE":55,"SHORT":56,"USHORT":57,"INT":58,"UINT":59,"LONG":60,"ULONG":61,"CHAR":62,"FLOAT":63,"DOUBLE":64}

item set 386 
shift-expression -> shift-expression OP_LEFT_SHIFT .additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"additive-expression":497,"multiplicative-expression":271,"unary-expression":484,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 387 
shift-expression -> shift-expression RIGHT_SHIFT .additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"additive-expression":498,"multiplicative-expression":271,"unary-expression":484,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 388 
additive-expression -> additive-expression PLUS .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"multiplicative-expression":499,"unary-expression":484,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 389 
additive-expression -> additive-expression MINUS .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"multiplicative-expression":500,"unary-expression":484,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 390 
multiplicative-expression -> multiplicative-expression STAR .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":501,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 391 
multiplicative-expression -> multiplicative-expression DIV .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":502,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 392 
multiplicative-expression -> multiplicative-expression PERCENT .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":503,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 393 
throw-statement -> THROW expression SEMICOLON . 
transitions ->  {}

item set 394 
invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 395 
invocation-expression -> primary-expression OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":504,"COMMA":505}

item set 396 
argument-list -> argument . 
transitions ->  {}

item set 397 
argument -> expression . 
transitions ->  {}

item set 398 
argument -> REF .variable-reference
variable-reference -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"variable-reference":506,"expression":507,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 399 
argument -> OUT .variable-reference
variable-reference -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"variable-reference":508,"expression":507,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 400 
member-access -> primary-expression DOT IDENTIFIER . 
transitions ->  {}

item set 401 
object-creation-expression -> NEW type OPEN_PARENS .CLOSE_PARENS
object-creation-expression -> NEW type OPEN_PARENS .argument-list CLOSE_PARENS
argument-list -> .argument
argument-list -> .argument-list COMMA argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":509,"argument-list":510,"argument":396,"expression":397,"REF":398,"OUT":399,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 402 
array-creation-expression -> NEW non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET
array-creation-expression -> NEW non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> NEW non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> NEW non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET rank-specifiers array-initializer
rank-specifier -> OPEN_BRACKET .CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .dim-separators CLOSE_BRACKET
expression-list -> .expression
expression-list -> .expression-list COMMA expression
dim-separators -> .COMMA
dim-separators -> .dim-separators COMMA
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression-list":511,"CLOSE_BRACKET":333,"dim-separators":334,"expression":408,"COMMA":335,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 403 
array-creation-expression -> NEW array-type array-initializer . 
transitions ->  {}

item set 404 
array-initializer -> OPEN_BRACE .CLOSE_BRACE
array-initializer -> OPEN_BRACE .variable-initializer-list CLOSE_BRACE
array-initializer -> OPEN_BRACE .variable-initializer-list COMMA CLOSE_BRACE
variable-initializer-list -> .variable-initializer
variable-initializer-list -> .variable-initializer-list COMMA variable-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACE":512,"variable-initializer-list":513,"variable-initializer":514,"expression":515,"array-initializer":516,"conditional-expression":251,"assignment":252,"OPEN_BRACE":404,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 405 
delegate-creation-expression -> NEW delegate-type OPEN_PARENS .expression CLOSE_PARENS
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":517,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 406 
assignment -> unary-expression assignment-operator expression . 
transitions ->  {}

item set 407 
element-access -> primary-no-array-creation-expression OPEN_BRACKET expression-list .CLOSE_BRACKET
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":518,"COMMA":519}

item set 408 
expression-list -> expression . 
transitions ->  {}

item set 409 
cast-expression -> OPEN_PARENS type CLOSE_PARENS .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":520,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 410 
parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 411 
member-access -> predefined-type DOT IDENTIFIER . 
transitions ->  {}

item set 412 
base-access -> base DOT IDENTIFIER . 
transitions ->  {}

item set 413 
base-access -> base OPEN_BRACKET expression-list .CLOSE_BRACKET
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":521,"COMMA":519}

item set 414 
typeof-expression -> TYPEOF OPEN_PARENS type .CLOSE_PARENS
non-array-type -> type . 
transitions ->  {"CLOSE_PARENS":522}

item set 415 
typeof-expression -> TYPEOF OPEN_PARENS VOID .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":523}

item set 416 
attribute-section -> OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET . 
transitions ->  {}

item set 417 
attribute-list -> attribute-list COMMA attribute . 
transitions ->  {}

item set 418 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET . 
transitions ->  {}

item set 419 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list COMMA .CLOSE_BRACKET
attribute-list -> attribute-list COMMA .attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER 
transitions ->  {"CLOSE_BRACKET":524,"attribute":417,"attribute-name":180,"type-name":188,"namespace-or-type-name":47,"IDENTIFIER":50}

item set 420 
attribute-arguments -> OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 421 
attribute-arguments -> OPEN_PARENS positional-argument-list .CLOSE_PARENS
attribute-arguments -> OPEN_PARENS positional-argument-list .COMMA named-argument-list CLOSE_PARENS
positional-argument-list -> positional-argument-list .COMMA positional-argument 
transitions ->  {"CLOSE_PARENS":525,"COMMA":526}

item set 422 
attribute-arguments -> OPEN_PARENS named-argument-list .CLOSE_PARENS
named-argument-list -> named-argument-list .COMMA named-argument 
transitions ->  {"CLOSE_PARENS":527,"COMMA":528}

item set 423 
positional-argument-list -> positional-argument . 
transitions ->  {}

item set 424 
named-argument-list -> named-argument . 
transitions ->  {}

item set 425 
positional-argument -> attribute-argument-expression . 
transitions ->  {}

item set 426 
named-argument -> IDENTIFIER .ASSIGN attribute-argument-expression
simple-name -> IDENTIFIER . 
transitions ->  {"ASSIGN":529}

item set 427 
attribute-argument-expression -> expression . 
transitions ->  {}

item set 428 
enum-declaration -> attributes ENUM IDENTIFIER enum-body SEMICOLON . 
transitions ->  {}

item set 429 
enum-declaration -> attributes ENUM IDENTIFIER enum-base enum-body .
enum-declaration -> attributes ENUM IDENTIFIER enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":530}

item set 430 
enum-declaration -> attributes enum-modifiers ENUM IDENTIFIER enum-body .
enum-declaration -> attributes enum-modifiers ENUM IDENTIFIER enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":531}

item set 431 
enum-declaration -> attributes enum-modifiers ENUM IDENTIFIER enum-base .enum-body
enum-declaration -> attributes enum-modifiers ENUM IDENTIFIER enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":532,"OPEN_BRACE":195}

item set 432 
delegate-declaration -> attributes enum-modifiers DELEGATE return-type IDENTIFIER .OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes enum-modifiers DELEGATE return-type IDENTIFIER .OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"OPEN_PARENS":533}

item set 433 
delegate-declaration -> attributes DELEGATE return-type IDENTIFIER OPEN_PARENS .CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes DELEGATE return-type IDENTIFIER OPEN_PARENS .formal-parameter-list CLOSE_PARENS SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .params array-type IDENTIFIER
parameter-array -> .attributes params array-type IDENTIFIER
fixed-parameter -> .type IDENTIFIER
fixed-parameter -> .parameter-modifier type IDENTIFIER
fixed-parameter -> .attributes type IDENTIFIER
fixed-parameter -> .attributes parameter-modifieropt type IDENTIFIER
attributes -> .attribute-sections
type -> .value-type
type -> .reference-type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"CLOSE_PARENS":534,"formal-parameter-list":535,"fixed-parameters":444,"parameter-array":445,"fixed-parameter":446,"params":447,"attributes":448,"type":449,"parameter-modifier":450,"attribute-sections":8,"value-type":34,"reference-type":35,"REF":451,"OUT":452,"attribute-section":13,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"array-type":40,"delegate-type":41,"OPEN_BRACKET":15,"type-name":42,"simple-type":43,"OBJECT":44,"STRING":45,"non-array-type":46,"namespace-or-type-name":47,"numeric-type":48,"BOOL":49,"IDENTIFIER":50,"integral-type":51,"floating-point-type":52,"DECIMAL":53,"SBYTE":54,"BYTE":55,"SHORT":56,"USHORT":57,"INT":58,"UINT":59,"LONG":60,"ULONG":61,"CHAR":62,"FLOAT":63,"DOUBLE":64}

item set 434 
enum-declaration -> ENUM IDENTIFIER enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 435 
enum-body -> OPEN_BRACE enum-member-declarations CLOSE_BRACE . 
transitions ->  {}

item set 436 
enum-body -> OPEN_BRACE enum-member-declarations COMMA .CLOSE_BRACE
enum-member-declarations -> enum-member-declarations COMMA .enum-member-declaration
enum-member-declaration -> .IDENTIFIER
enum-member-declaration -> .attributes IDENTIFIER
enum-member-declaration -> .IDENTIFIER ASSIGN constant-expression
enum-member-declaration -> .attributes IDENTIFIER ASSIGN constant-expression
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACE":536,"enum-member-declaration":537,"IDENTIFIER":325,"attributes":326,"attribute-sections":8,"attribute-section":13,"OPEN_BRACKET":15}

item set 437 
enum-member-declaration -> IDENTIFIER ASSIGN .constant-expression
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":538,"expression":369,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 438 
enum-member-declaration -> attributes IDENTIFIER .
enum-member-declaration -> attributes IDENTIFIER .ASSIGN constant-expression 
transitions ->  {"ASSIGN":539}

item set 439 
enum-declaration -> enum-modifiers ENUM IDENTIFIER enum-body SEMICOLON . 
transitions ->  {}

item set 440 
enum-declaration -> enum-modifiers ENUM IDENTIFIER enum-base enum-body .
enum-declaration -> enum-modifiers ENUM IDENTIFIER enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":540}

item set 441 
delegate-declaration -> enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS .CLOSE_PARENS SEMICOLON
delegate-declaration -> enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS .formal-parameter-list CLOSE_PARENS SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .params array-type IDENTIFIER
parameter-array -> .attributes params array-type IDENTIFIER
fixed-parameter -> .type IDENTIFIER
fixed-parameter -> .parameter-modifier type IDENTIFIER
fixed-parameter -> .attributes type IDENTIFIER
fixed-parameter -> .attributes parameter-modifieropt type IDENTIFIER
attributes -> .attribute-sections
type -> .value-type
type -> .reference-type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"CLOSE_PARENS":541,"formal-parameter-list":542,"fixed-parameters":444,"parameter-array":445,"fixed-parameter":446,"params":447,"attributes":448,"type":449,"parameter-modifier":450,"attribute-sections":8,"value-type":34,"reference-type":35,"REF":451,"OUT":452,"attribute-section":13,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"array-type":40,"delegate-type":41,"OPEN_BRACKET":15,"type-name":42,"simple-type":43,"OBJECT":44,"STRING":45,"non-array-type":46,"namespace-or-type-name":47,"numeric-type":48,"BOOL":49,"IDENTIFIER":50,"integral-type":51,"floating-point-type":52,"DECIMAL":53,"SBYTE":54,"BYTE":55,"SHORT":56,"USHORT":57,"INT":58,"UINT":59,"LONG":60,"ULONG":61,"CHAR":62,"FLOAT":63,"DOUBLE":64}

item set 442 
delegate-declaration -> DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":543}

item set 443 
delegate-declaration -> DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list .CLOSE_PARENS SEMICOLON 
transitions ->  {"CLOSE_PARENS":544}

item set 444 
formal-parameter-list -> fixed-parameters .
formal-parameter-list -> fixed-parameters .COMMA parameter-array
fixed-parameters -> fixed-parameters .COMMA fixed-parameter 
transitions ->  {"COMMA":545}

item set 445 
formal-parameter-list -> parameter-array . 
transitions ->  {}

item set 446 
fixed-parameters -> fixed-parameter . 
transitions ->  {}

item set 447 
parameter-array -> params .array-type IDENTIFIER
array-type -> .non-array-type rank-specifiers
non-array-type -> .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"array-type":546,"non-array-type":46,"type":547,"value-type":34,"reference-type":35,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"delegate-type":41,"type-name":42,"simple-type":43,"OBJECT":44,"STRING":45,"namespace-or-type-name":47,"numeric-type":48,"BOOL":49,"IDENTIFIER":50,"integral-type":51,"floating-point-type":52,"DECIMAL":53,"SBYTE":54,"BYTE":55,"SHORT":56,"USHORT":57,"INT":58,"UINT":59,"LONG":60,"ULONG":61,"CHAR":62,"FLOAT":63,"DOUBLE":64}

item set 448 
parameter-array -> attributes .params array-type IDENTIFIER
fixed-parameter -> attributes .type IDENTIFIER
fixed-parameter -> attributes .parameter-modifieropt type IDENTIFIER
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"params":548,"type":549,"parameter-modifieropt":550,"value-type":34,"reference-type":35,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"array-type":40,"delegate-type":41,"type-name":42,"simple-type":43,"OBJECT":44,"STRING":45,"non-array-type":46,"namespace-or-type-name":47,"numeric-type":48,"BOOL":49,"IDENTIFIER":50,"integral-type":51,"floating-point-type":52,"DECIMAL":53,"SBYTE":54,"BYTE":55,"SHORT":56,"USHORT":57,"INT":58,"UINT":59,"LONG":60,"ULONG":61,"CHAR":62,"FLOAT":63,"DOUBLE":64}

item set 449 
fixed-parameter -> type .IDENTIFIER
non-array-type -> type . 
transitions ->  {"IDENTIFIER":551}

item set 450 
fixed-parameter -> parameter-modifier .type IDENTIFIER
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":552,"value-type":34,"reference-type":35,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"array-type":40,"delegate-type":41,"type-name":42,"simple-type":43,"OBJECT":44,"STRING":45,"non-array-type":46,"namespace-or-type-name":47,"numeric-type":48,"BOOL":49,"IDENTIFIER":50,"integral-type":51,"floating-point-type":52,"DECIMAL":53,"SBYTE":54,"BYTE":55,"SHORT":56,"USHORT":57,"INT":58,"UINT":59,"LONG":60,"ULONG":61,"CHAR":62,"FLOAT":63,"DOUBLE":64}

item set 451 
parameter-modifier -> REF . 
transitions ->  {}

item set 452 
parameter-modifier -> OUT . 
transitions ->  {}

item set 453 
rank-specifier -> OPEN_BRACKET dim-separators CLOSE_BRACKET . 
transitions ->  {}

item set 454 
dim-separators -> dim-separators COMMA . 
transitions ->  {}

item set 455 
local-variable-declarators -> local-variable-declarators COMMA local-variable-declarator . 
transitions ->  {}

item set 456 
local-variable-declarator -> local-variable ASSIGN local-variable-initializer . 
transitions ->  {}

item set 457 
local-variable-initializer -> expression . 
transitions ->  {}

item set 458 
local-variable-initializer -> array-initializer . 
transitions ->  {}

item set 459 
constant-declarators -> constant-declarators COMMA .constant-declarator
constant-declarator -> .IDENTIFIER ASSIGN constant-expression 
transitions ->  {"constant-declarator":553,"IDENTIFIER":342}

item set 460 
constant-declarator -> IDENTIFIER ASSIGN .constant-expression
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":554,"expression":369,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 461 
try-statement -> TRY block catch-clauses finally-clause . 
transitions ->  {}

item set 462 
catch-clauses -> specific-catch-clauses general-catch-clause . 
transitions ->  {}

item set 463 
specific-catch-clauses -> specific-catch-clauses specific-catch-clause . 
transitions ->  {}

item set 464 
finally-clause -> FINALLY block . 
transitions ->  {}

item set 465 
general-catch-clause -> CATCH block . 
transitions ->  {}

item set 466 
specific-catch-clause -> CATCH OPEN_PARENS .class-type CLOSE_PARENS block
specific-catch-clause -> CATCH OPEN_PARENS .class-type IDENTIFIER CLOSE_PARENS block
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
type-name -> .namespace-or-type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER 
transitions ->  {"class-type":555,"type-name":556,"OBJECT":44,"STRING":45,"namespace-or-type-name":47,"IDENTIFIER":50}

item set 467 
checked-expression -> CHECKED OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 468 
unchecked-expression -> UNCHECKED OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 469 
lock-statement -> LOCK OPEN_PARENS expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":557,"block":74,"empty-statement":75,"expression-statement":76,"selection-statement":77,"iteration-statement":78,"jump-statement":79,"try-statement":80,"checked-statement":81,"unchecked-statement":82,"lock-statement":83,"using-statement":84,"OPEN_BRACE":12,"SEMICOLON":87,"statement-expression":88,"if-statement":89,"switch-statement":90,"while-statement":91,"do-statement":92,"for-statement":93,"foreach-statement":94,"break-statement":95,"continue-statement":96,"goto-statement":97,"return-statement":98,"throw-statement":99,"TRY":100,"CHECKED":101,"UNCHECKED":102,"LOCK":103,"USING":104,"invocation-expression":105,"object-creation-expression":106,"assignment":107,"post-increment-expression":108,"post-decrement-expression":109,"pre-increment-expression":110,"pre-decrement-expression":111,"IF":112,"SWITCH":113,"WHILE":114,"DO":115,"FOR":116,"FOREACH":117,"BREAK":118,"CONTINUE":119,"GOTO":120,"RETURN":121,"THROW":122,"primary-expression":123,"NEW":124,"unary-expression":125,"OP_INC":126,"OP_DEC":127,"primary-no-array-creation-expression":130,"array-creation-expression":131,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"cast-expression":137,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"element-access":143,"this-access":144,"base-access":145,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"OPEN_PARENS":151,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 470 
using-statement -> USING OPEN_PARENS resource-acquisition CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":558,"block":74,"empty-statement":75,"expression-statement":76,"selection-statement":77,"iteration-statement":78,"jump-statement":79,"try-statement":80,"checked-statement":81,"unchecked-statement":82,"lock-statement":83,"using-statement":84,"OPEN_BRACE":12,"SEMICOLON":87,"statement-expression":88,"if-statement":89,"switch-statement":90,"while-statement":91,"do-statement":92,"for-statement":93,"foreach-statement":94,"break-statement":95,"continue-statement":96,"goto-statement":97,"return-statement":98,"throw-statement":99,"TRY":100,"CHECKED":101,"UNCHECKED":102,"LOCK":103,"USING":104,"invocation-expression":105,"object-creation-expression":106,"assignment":107,"post-increment-expression":108,"post-decrement-expression":109,"pre-increment-expression":110,"pre-decrement-expression":111,"IF":112,"SWITCH":113,"WHILE":114,"DO":115,"FOR":116,"FOREACH":117,"BREAK":118,"CONTINUE":119,"GOTO":120,"RETURN":121,"THROW":122,"primary-expression":123,"NEW":124,"unary-expression":125,"OP_INC":126,"OP_DEC":127,"primary-no-array-creation-expression":130,"array-creation-expression":131,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"cast-expression":137,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"element-access":143,"this-access":144,"base-access":145,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"OPEN_PARENS":151,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 471 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement ELSE embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":559,"block":74,"empty-statement":75,"expression-statement":76,"selection-statement":77,"iteration-statement":78,"jump-statement":79,"try-statement":80,"checked-statement":81,"unchecked-statement":82,"lock-statement":83,"using-statement":84,"OPEN_BRACE":12,"SEMICOLON":87,"statement-expression":88,"if-statement":89,"switch-statement":90,"while-statement":91,"do-statement":92,"for-statement":93,"foreach-statement":94,"break-statement":95,"continue-statement":96,"goto-statement":97,"return-statement":98,"throw-statement":99,"TRY":100,"CHECKED":101,"UNCHECKED":102,"LOCK":103,"USING":104,"invocation-expression":105,"object-creation-expression":106,"assignment":107,"post-increment-expression":108,"post-decrement-expression":109,"pre-increment-expression":110,"pre-decrement-expression":111,"IF":112,"SWITCH":113,"WHILE":114,"DO":115,"FOR":116,"FOREACH":117,"BREAK":118,"CONTINUE":119,"GOTO":120,"RETURN":121,"THROW":122,"primary-expression":123,"NEW":124,"unary-expression":125,"OP_INC":126,"OP_DEC":127,"primary-no-array-creation-expression":130,"array-creation-expression":131,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"cast-expression":137,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"element-access":143,"this-access":144,"base-access":145,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"OPEN_PARENS":151,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 472 
switch-statement -> SWITCH OPEN_PARENS expression CLOSE_PARENS .switch-block
switch-block -> .OPEN_BRACE CLOSE_BRACE
switch-block -> .OPEN_BRACE switch-sections CLOSE_BRACE 
transitions ->  {"switch-block":560,"OPEN_BRACE":561}

item set 473 
while-statement -> WHILE OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":562,"block":74,"empty-statement":75,"expression-statement":76,"selection-statement":77,"iteration-statement":78,"jump-statement":79,"try-statement":80,"checked-statement":81,"unchecked-statement":82,"lock-statement":83,"using-statement":84,"OPEN_BRACE":12,"SEMICOLON":87,"statement-expression":88,"if-statement":89,"switch-statement":90,"while-statement":91,"do-statement":92,"for-statement":93,"foreach-statement":94,"break-statement":95,"continue-statement":96,"goto-statement":97,"return-statement":98,"throw-statement":99,"TRY":100,"CHECKED":101,"UNCHECKED":102,"LOCK":103,"USING":104,"invocation-expression":105,"object-creation-expression":106,"assignment":107,"post-increment-expression":108,"post-decrement-expression":109,"pre-increment-expression":110,"pre-decrement-expression":111,"IF":112,"SWITCH":113,"WHILE":114,"DO":115,"FOR":116,"FOREACH":117,"BREAK":118,"CONTINUE":119,"GOTO":120,"RETURN":121,"THROW":122,"primary-expression":123,"NEW":124,"unary-expression":125,"OP_INC":126,"OP_DEC":127,"primary-no-array-creation-expression":130,"array-creation-expression":131,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"cast-expression":137,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"element-access":143,"this-access":144,"base-access":145,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"OPEN_PARENS":151,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 474 
do-statement -> DO embedded-statement WHILE OPEN_PARENS .boolean-expression CLOSE_PARENS SEMICOLON
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":563,"expression":357,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 475 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_PARENS":564,"for-iterator":565,"statement-expression-list":566,"statement-expression":365,"invocation-expression":105,"object-creation-expression":106,"assignment":107,"post-increment-expression":108,"post-decrement-expression":109,"pre-increment-expression":110,"pre-decrement-expression":111,"primary-expression":123,"NEW":124,"unary-expression":125,"OP_INC":126,"OP_DEC":127,"primary-no-array-creation-expression":130,"array-creation-expression":131,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"cast-expression":137,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"element-access":143,"this-access":144,"base-access":145,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"OPEN_PARENS":151,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 476 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition .SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":567}

item set 477 
for-condition -> boolean-expression . 
transitions ->  {}

item set 478 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-condition -> .boolean-expression
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":568,"for-condition":569,"boolean-expression":477,"expression":357,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 479 
statement-expression-list -> statement-expression-list COMMA .statement-expression
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"statement-expression":570,"invocation-expression":105,"object-creation-expression":106,"assignment":107,"post-increment-expression":108,"post-decrement-expression":109,"pre-increment-expression":110,"pre-decrement-expression":111,"primary-expression":123,"NEW":124,"unary-expression":125,"OP_INC":126,"OP_DEC":127,"primary-no-array-creation-expression":130,"array-creation-expression":131,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"cast-expression":137,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"element-access":143,"this-access":144,"base-access":145,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"OPEN_PARENS":151,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 480 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER .IN expression CLOSE_PARENS embedded-statement 
transitions ->  {"IN":571}

item set 481 
goto-statement -> GOTO CASE constant-expression SEMICOLON . 
transitions ->  {}

item set 482 
conditional-expression -> conditional-or-expression INTERR expression .COLON expression 
transitions ->  {"COLON":572}

item set 483 
conditional-or-expression -> conditional-or-expression OP_OR conditional-and-expression .
conditional-and-expression -> conditional-and-expression .OP_AND inclusive-or-expression 
transitions ->  {"OP_AND":374}

item set 484 
multiplicative-expression -> unary-expression . 
transitions ->  {}

item set 485 
conditional-and-expression -> conditional-and-expression OP_AND inclusive-or-expression .
inclusive-or-expression -> inclusive-or-expression .BITWISE_OR exclusive-or-expression 
transitions ->  {"BITWISE_OR":375}

item set 486 
inclusive-or-expression -> inclusive-or-expression BITWISE_OR exclusive-or-expression .
exclusive-or-expression -> exclusive-or-expression .CARET and-expression 
transitions ->  {"CARET":376}

item set 487 
exclusive-or-expression -> exclusive-or-expression CARET and-expression .
and-expression -> and-expression .AMP equality-expression 
transitions ->  {"AMP":377}

item set 488 
and-expression -> and-expression AMP equality-expression .
equality-expression -> equality-expression .OP_EQ relational-expression
equality-expression -> equality-expression .OP_NE relational-expression 
transitions ->  {"OP_EQ":378,"OP_NE":379}

item set 489 
equality-expression -> equality-expression OP_EQ relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":380,"GT":381,"OP_LE":382,"OP_GE":383,"IS":384,"AS":385}

item set 490 
equality-expression -> equality-expression OP_NE relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":380,"GT":381,"OP_LE":382,"OP_GE":383,"IS":384,"AS":385}

item set 491 
relational-expression -> relational-expression LT shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":386,"RIGHT_SHIFT":387}

item set 492 
relational-expression -> relational-expression GT shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":386,"RIGHT_SHIFT":387}

item set 493 
relational-expression -> relational-expression OP_LE shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":386,"RIGHT_SHIFT":387}

item set 494 
relational-expression -> relational-expression OP_GE shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":386,"RIGHT_SHIFT":387}

item set 495 
relational-expression -> relational-expression IS type .
non-array-type -> type . 
transitions ->  {}

item set 496 
relational-expression -> relational-expression AS type .
non-array-type -> type . 
transitions ->  {}

item set 497 
shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":388,"MINUS":389}

item set 498 
shift-expression -> shift-expression RIGHT_SHIFT additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":388,"MINUS":389}

item set 499 
additive-expression -> additive-expression PLUS multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":390,"DIV":391,"PERCENT":392}

item set 500 
additive-expression -> additive-expression MINUS multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":390,"DIV":391,"PERCENT":392}

item set 501 
multiplicative-expression -> multiplicative-expression STAR unary-expression . 
transitions ->  {}

item set 502 
multiplicative-expression -> multiplicative-expression DIV unary-expression . 
transitions ->  {}

item set 503 
multiplicative-expression -> multiplicative-expression PERCENT unary-expression . 
transitions ->  {}

item set 504 
invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 505 
argument-list -> argument-list COMMA .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument":573,"expression":397,"REF":398,"OUT":399,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 506 
argument -> REF variable-reference . 
transitions ->  {}

item set 507 
variable-reference -> expression . 
transitions ->  {}

item set 508 
argument -> OUT variable-reference . 
transitions ->  {}

item set 509 
object-creation-expression -> NEW type OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 510 
object-creation-expression -> NEW type OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":574,"COMMA":505}

item set 511 
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET rank-specifiers
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET array-initializer
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET rank-specifiers array-initializer
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":575,"COMMA":519}

item set 512 
array-initializer -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 513 
array-initializer -> OPEN_BRACE variable-initializer-list .CLOSE_BRACE
array-initializer -> OPEN_BRACE variable-initializer-list .COMMA CLOSE_BRACE
variable-initializer-list -> variable-initializer-list .COMMA variable-initializer 
transitions ->  {"CLOSE_BRACE":576,"COMMA":577}

item set 514 
variable-initializer-list -> variable-initializer . 
transitions ->  {}

item set 515 
variable-initializer -> expression . 
transitions ->  {}

item set 516 
variable-initializer -> array-initializer . 
transitions ->  {}

item set 517 
delegate-creation-expression -> NEW delegate-type OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":578}

item set 518 
element-access -> primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET . 
transitions ->  {}

item set 519 
expression-list -> expression-list COMMA .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":579,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 520 
cast-expression -> OPEN_PARENS type CLOSE_PARENS unary-expression . 
transitions ->  {}

item set 521 
base-access -> base OPEN_BRACKET expression-list CLOSE_BRACKET . 
transitions ->  {}

item set 522 
typeof-expression -> TYPEOF OPEN_PARENS type CLOSE_PARENS . 
transitions ->  {}

item set 523 
typeof-expression -> TYPEOF OPEN_PARENS VOID CLOSE_PARENS . 
transitions ->  {}

item set 524 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET . 
transitions ->  {}

item set 525 
attribute-arguments -> OPEN_PARENS positional-argument-list CLOSE_PARENS . 
transitions ->  {}

item set 526 
attribute-arguments -> OPEN_PARENS positional-argument-list COMMA .named-argument-list CLOSE_PARENS
positional-argument-list -> positional-argument-list COMMA .positional-argument
named-argument-list -> .named-argument
named-argument-list -> .named-argument-list COMMA named-argument
positional-argument -> .attribute-argument-expression
named-argument -> .IDENTIFIER ASSIGN attribute-argument-expression
attribute-argument-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"named-argument-list":580,"positional-argument":581,"named-argument":424,"attribute-argument-expression":425,"IDENTIFIER":426,"expression":427,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 527 
attribute-arguments -> OPEN_PARENS named-argument-list CLOSE_PARENS . 
transitions ->  {}

item set 528 
named-argument-list -> named-argument-list COMMA .named-argument
named-argument -> .IDENTIFIER ASSIGN attribute-argument-expression 
transitions ->  {"named-argument":582,"IDENTIFIER":583}

item set 529 
named-argument -> IDENTIFIER ASSIGN .attribute-argument-expression
attribute-argument-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"attribute-argument-expression":584,"expression":427,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 530 
enum-declaration -> attributes ENUM IDENTIFIER enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 531 
enum-declaration -> attributes enum-modifiers ENUM IDENTIFIER enum-body SEMICOLON . 
transitions ->  {}

item set 532 
enum-declaration -> attributes enum-modifiers ENUM IDENTIFIER enum-base enum-body .
enum-declaration -> attributes enum-modifiers ENUM IDENTIFIER enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":585}

item set 533 
delegate-declaration -> attributes enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS .CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS .formal-parameter-list CLOSE_PARENS SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .params array-type IDENTIFIER
parameter-array -> .attributes params array-type IDENTIFIER
fixed-parameter -> .type IDENTIFIER
fixed-parameter -> .parameter-modifier type IDENTIFIER
fixed-parameter -> .attributes type IDENTIFIER
fixed-parameter -> .attributes parameter-modifieropt type IDENTIFIER
attributes -> .attribute-sections
type -> .value-type
type -> .reference-type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"CLOSE_PARENS":586,"formal-parameter-list":587,"fixed-parameters":444,"parameter-array":445,"fixed-parameter":446,"params":447,"attributes":448,"type":449,"parameter-modifier":450,"attribute-sections":8,"value-type":34,"reference-type":35,"REF":451,"OUT":452,"attribute-section":13,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"array-type":40,"delegate-type":41,"OPEN_BRACKET":15,"type-name":42,"simple-type":43,"OBJECT":44,"STRING":45,"non-array-type":46,"namespace-or-type-name":47,"numeric-type":48,"BOOL":49,"IDENTIFIER":50,"integral-type":51,"floating-point-type":52,"DECIMAL":53,"SBYTE":54,"BYTE":55,"SHORT":56,"USHORT":57,"INT":58,"UINT":59,"LONG":60,"ULONG":61,"CHAR":62,"FLOAT":63,"DOUBLE":64}

item set 534 
delegate-declaration -> attributes DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":588}

item set 535 
delegate-declaration -> attributes DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list .CLOSE_PARENS SEMICOLON 
transitions ->  {"CLOSE_PARENS":589}

item set 536 
enum-body -> OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE . 
transitions ->  {}

item set 537 
enum-member-declarations -> enum-member-declarations COMMA enum-member-declaration . 
transitions ->  {}

item set 538 
enum-member-declaration -> IDENTIFIER ASSIGN constant-expression . 
transitions ->  {}

item set 539 
enum-member-declaration -> attributes IDENTIFIER ASSIGN .constant-expression
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":590,"expression":369,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 540 
enum-declaration -> enum-modifiers ENUM IDENTIFIER enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 541 
delegate-declaration -> enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":591}

item set 542 
delegate-declaration -> enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list .CLOSE_PARENS SEMICOLON 
transitions ->  {"CLOSE_PARENS":592}

item set 543 
delegate-declaration -> DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 544 
delegate-declaration -> DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":593}

item set 545 
formal-parameter-list -> fixed-parameters COMMA .parameter-array
fixed-parameters -> fixed-parameters COMMA .fixed-parameter
parameter-array -> .params array-type IDENTIFIER
parameter-array -> .attributes params array-type IDENTIFIER
fixed-parameter -> .type IDENTIFIER
fixed-parameter -> .parameter-modifier type IDENTIFIER
fixed-parameter -> .attributes type IDENTIFIER
fixed-parameter -> .attributes parameter-modifieropt type IDENTIFIER
attributes -> .attribute-sections
type -> .value-type
type -> .reference-type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"parameter-array":594,"fixed-parameter":595,"params":447,"attributes":448,"type":449,"parameter-modifier":450,"attribute-sections":8,"value-type":34,"reference-type":35,"REF":451,"OUT":452,"attribute-section":13,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"array-type":40,"delegate-type":41,"OPEN_BRACKET":15,"type-name":42,"simple-type":43,"OBJECT":44,"STRING":45,"non-array-type":46,"namespace-or-type-name":47,"numeric-type":48,"BOOL":49,"IDENTIFIER":50,"integral-type":51,"floating-point-type":52,"DECIMAL":53,"SBYTE":54,"BYTE":55,"SHORT":56,"USHORT":57,"INT":58,"UINT":59,"LONG":60,"ULONG":61,"CHAR":62,"FLOAT":63,"DOUBLE":64}

item set 546 
parameter-array -> params array-type .IDENTIFIER
reference-type -> array-type . 
transitions ->  {"IDENTIFIER":596}

item set 547 
non-array-type -> type . 
transitions ->  {}

item set 548 
parameter-array -> attributes params .array-type IDENTIFIER
array-type -> .non-array-type rank-specifiers
non-array-type -> .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"array-type":597,"non-array-type":46,"type":547,"value-type":34,"reference-type":35,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"delegate-type":41,"type-name":42,"simple-type":43,"OBJECT":44,"STRING":45,"namespace-or-type-name":47,"numeric-type":48,"BOOL":49,"IDENTIFIER":50,"integral-type":51,"floating-point-type":52,"DECIMAL":53,"SBYTE":54,"BYTE":55,"SHORT":56,"USHORT":57,"INT":58,"UINT":59,"LONG":60,"ULONG":61,"CHAR":62,"FLOAT":63,"DOUBLE":64}

item set 549 
fixed-parameter -> attributes type .IDENTIFIER
non-array-type -> type . 
transitions ->  {"IDENTIFIER":598}

item set 550 
fixed-parameter -> attributes parameter-modifieropt .type IDENTIFIER
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":599,"value-type":34,"reference-type":35,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"array-type":40,"delegate-type":41,"type-name":42,"simple-type":43,"OBJECT":44,"STRING":45,"non-array-type":46,"namespace-or-type-name":47,"numeric-type":48,"BOOL":49,"IDENTIFIER":50,"integral-type":51,"floating-point-type":52,"DECIMAL":53,"SBYTE":54,"BYTE":55,"SHORT":56,"USHORT":57,"INT":58,"UINT":59,"LONG":60,"ULONG":61,"CHAR":62,"FLOAT":63,"DOUBLE":64}

item set 551 
fixed-parameter -> type IDENTIFIER . 
transitions ->  {}

item set 552 
fixed-parameter -> parameter-modifier type .IDENTIFIER
non-array-type -> type . 
transitions ->  {"IDENTIFIER":600}

item set 553 
constant-declarators -> constant-declarators COMMA constant-declarator . 
transitions ->  {}

item set 554 
constant-declarator -> IDENTIFIER ASSIGN constant-expression . 
transitions ->  {}

item set 555 
specific-catch-clause -> CATCH OPEN_PARENS class-type .CLOSE_PARENS block
specific-catch-clause -> CATCH OPEN_PARENS class-type .IDENTIFIER CLOSE_PARENS block 
transitions ->  {"CLOSE_PARENS":601,"IDENTIFIER":602}

item set 556 
class-type -> type-name . 
transitions ->  {}

item set 557 
lock-statement -> LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 558 
using-statement -> USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 559 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement .
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement .ELSE embedded-statement 
transitions ->  {"ELSE":603}

item set 560 
switch-statement -> SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block . 
transitions ->  {}

item set 561 
switch-block -> OPEN_BRACE .CLOSE_BRACE
switch-block -> OPEN_BRACE .switch-sections CLOSE_BRACE
switch-sections -> .switch-section
switch-sections -> .switch-sections switch-section
switch-section -> .switch-labels statement-list
switch-labels -> .switch-label
switch-labels -> .switch-labels switch-label
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON 
transitions ->  {"CLOSE_BRACE":604,"switch-sections":605,"switch-section":606,"switch-labels":607,"switch-label":608,"CASE":609,"DEFAULT":610}

item set 562 
while-statement -> WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 563 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression .CLOSE_PARENS SEMICOLON 
transitions ->  {"CLOSE_PARENS":611}

item set 564 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":612,"block":74,"empty-statement":75,"expression-statement":76,"selection-statement":77,"iteration-statement":78,"jump-statement":79,"try-statement":80,"checked-statement":81,"unchecked-statement":82,"lock-statement":83,"using-statement":84,"OPEN_BRACE":12,"SEMICOLON":87,"statement-expression":88,"if-statement":89,"switch-statement":90,"while-statement":91,"do-statement":92,"for-statement":93,"foreach-statement":94,"break-statement":95,"continue-statement":96,"goto-statement":97,"return-statement":98,"throw-statement":99,"TRY":100,"CHECKED":101,"UNCHECKED":102,"LOCK":103,"USING":104,"invocation-expression":105,"object-creation-expression":106,"assignment":107,"post-increment-expression":108,"post-decrement-expression":109,"pre-increment-expression":110,"pre-decrement-expression":111,"IF":112,"SWITCH":113,"WHILE":114,"DO":115,"FOR":116,"FOREACH":117,"BREAK":118,"CONTINUE":119,"GOTO":120,"RETURN":121,"THROW":122,"primary-expression":123,"NEW":124,"unary-expression":125,"OP_INC":126,"OP_DEC":127,"primary-no-array-creation-expression":130,"array-creation-expression":131,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"cast-expression":137,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"element-access":143,"this-access":144,"base-access":145,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"OPEN_PARENS":151,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 565 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":613}

item set 566 
for-iterator -> statement-expression-list .
statement-expression-list -> statement-expression-list .COMMA statement-expression 
transitions ->  {"COMMA":479}

item set 567 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_PARENS":614,"for-iterator":615,"statement-expression-list":566,"statement-expression":365,"invocation-expression":105,"object-creation-expression":106,"assignment":107,"post-increment-expression":108,"post-decrement-expression":109,"pre-increment-expression":110,"pre-decrement-expression":111,"primary-expression":123,"NEW":124,"unary-expression":125,"OP_INC":126,"OP_DEC":127,"primary-no-array-creation-expression":130,"array-creation-expression":131,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"cast-expression":137,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"element-access":143,"this-access":144,"base-access":145,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"OPEN_PARENS":151,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 568 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_PARENS":616,"for-iterator":617,"statement-expression-list":566,"statement-expression":365,"invocation-expression":105,"object-creation-expression":106,"assignment":107,"post-increment-expression":108,"post-decrement-expression":109,"pre-increment-expression":110,"pre-decrement-expression":111,"primary-expression":123,"NEW":124,"unary-expression":125,"OP_INC":126,"OP_DEC":127,"primary-no-array-creation-expression":130,"array-creation-expression":131,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"cast-expression":137,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"element-access":143,"this-access":144,"base-access":145,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"OPEN_PARENS":151,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 569 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition .SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":618}

item set 570 
statement-expression-list -> statement-expression-list COMMA statement-expression . 
transitions ->  {}

item set 571 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER IN .expression CLOSE_PARENS embedded-statement
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":619,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 572 
conditional-expression -> conditional-or-expression INTERR expression COLON .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":620,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 573 
argument-list -> argument-list COMMA argument . 
transitions ->  {}

item set 574 
object-creation-expression -> NEW type OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 575 
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .rank-specifiers
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .array-initializer
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .rank-specifiers array-initializer
rank-specifiers -> .rank-specifier
rank-specifiers -> .rank-specifiers rank-specifier
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET 
transitions ->  {"rank-specifiers":621,"array-initializer":622,"rank-specifier":201,"OPEN_BRACE":404,"OPEN_BRACKET":202}

item set 576 
array-initializer -> OPEN_BRACE variable-initializer-list CLOSE_BRACE . 
transitions ->  {}

item set 577 
array-initializer -> OPEN_BRACE variable-initializer-list COMMA .CLOSE_BRACE
variable-initializer-list -> variable-initializer-list COMMA .variable-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACE":623,"variable-initializer":624,"expression":515,"array-initializer":516,"conditional-expression":251,"assignment":252,"OPEN_BRACE":404,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 578 
delegate-creation-expression -> NEW delegate-type OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 579 
expression-list -> expression-list COMMA expression . 
transitions ->  {}

item set 580 
attribute-arguments -> OPEN_PARENS positional-argument-list COMMA named-argument-list .CLOSE_PARENS
named-argument-list -> named-argument-list .COMMA named-argument 
transitions ->  {"CLOSE_PARENS":625,"COMMA":528}

item set 581 
positional-argument-list -> positional-argument-list COMMA positional-argument . 
transitions ->  {}

item set 582 
named-argument-list -> named-argument-list COMMA named-argument . 
transitions ->  {}

item set 583 
named-argument -> IDENTIFIER .ASSIGN attribute-argument-expression 
transitions ->  {"ASSIGN":529}

item set 584 
named-argument -> IDENTIFIER ASSIGN attribute-argument-expression . 
transitions ->  {}

item set 585 
enum-declaration -> attributes enum-modifiers ENUM IDENTIFIER enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 586 
delegate-declaration -> attributes enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":626}

item set 587 
delegate-declaration -> attributes enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list .CLOSE_PARENS SEMICOLON 
transitions ->  {"CLOSE_PARENS":627}

item set 588 
delegate-declaration -> attributes DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 589 
delegate-declaration -> attributes DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":628}

item set 590 
enum-member-declaration -> attributes IDENTIFIER ASSIGN constant-expression . 
transitions ->  {}

item set 591 
delegate-declaration -> enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 592 
delegate-declaration -> enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":629}

item set 593 
delegate-declaration -> DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 594 
formal-parameter-list -> fixed-parameters COMMA parameter-array . 
transitions ->  {}

item set 595 
fixed-parameters -> fixed-parameters COMMA fixed-parameter . 
transitions ->  {}

item set 596 
parameter-array -> params array-type IDENTIFIER . 
transitions ->  {}

item set 597 
parameter-array -> attributes params array-type .IDENTIFIER
reference-type -> array-type . 
transitions ->  {"IDENTIFIER":630}

item set 598 
fixed-parameter -> attributes type IDENTIFIER . 
transitions ->  {}

item set 599 
fixed-parameter -> attributes parameter-modifieropt type .IDENTIFIER
non-array-type -> type . 
transitions ->  {"IDENTIFIER":631}

item set 600 
fixed-parameter -> parameter-modifier type IDENTIFIER . 
transitions ->  {}

item set 601 
specific-catch-clause -> CATCH OPEN_PARENS class-type CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":632,"OPEN_BRACE":12}

item set 602 
specific-catch-clause -> CATCH OPEN_PARENS class-type IDENTIFIER .CLOSE_PARENS block 
transitions ->  {"CLOSE_PARENS":633}

item set 603 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":634,"block":74,"empty-statement":75,"expression-statement":76,"selection-statement":77,"iteration-statement":78,"jump-statement":79,"try-statement":80,"checked-statement":81,"unchecked-statement":82,"lock-statement":83,"using-statement":84,"OPEN_BRACE":12,"SEMICOLON":87,"statement-expression":88,"if-statement":89,"switch-statement":90,"while-statement":91,"do-statement":92,"for-statement":93,"foreach-statement":94,"break-statement":95,"continue-statement":96,"goto-statement":97,"return-statement":98,"throw-statement":99,"TRY":100,"CHECKED":101,"UNCHECKED":102,"LOCK":103,"USING":104,"invocation-expression":105,"object-creation-expression":106,"assignment":107,"post-increment-expression":108,"post-decrement-expression":109,"pre-increment-expression":110,"pre-decrement-expression":111,"IF":112,"SWITCH":113,"WHILE":114,"DO":115,"FOR":116,"FOREACH":117,"BREAK":118,"CONTINUE":119,"GOTO":120,"RETURN":121,"THROW":122,"primary-expression":123,"NEW":124,"unary-expression":125,"OP_INC":126,"OP_DEC":127,"primary-no-array-creation-expression":130,"array-creation-expression":131,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"cast-expression":137,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"element-access":143,"this-access":144,"base-access":145,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"OPEN_PARENS":151,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 604 
switch-block -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 605 
switch-block -> OPEN_BRACE switch-sections .CLOSE_BRACE
switch-sections -> switch-sections .switch-section
switch-section -> .switch-labels statement-list
switch-labels -> .switch-label
switch-labels -> .switch-labels switch-label
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON 
transitions ->  {"CLOSE_BRACE":635,"switch-section":636,"switch-labels":607,"switch-label":608,"CASE":609,"DEFAULT":610}

item set 606 
switch-sections -> switch-section . 
transitions ->  {}

item set 607 
switch-section -> switch-labels .statement-list
switch-labels -> switch-labels .switch-label
statement-list -> .statement
statement-list -> .statement-list statement
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"statement-list":637,"switch-label":638,"statement":67,"CASE":609,"DEFAULT":610,"labeled-statement":68,"declaration-statement":69,"embedded-statement":70,"IDENTIFIER":71,"local-variable-declaration":72,"local-constant-declaration":73,"block":74,"empty-statement":75,"expression-statement":76,"selection-statement":77,"iteration-statement":78,"jump-statement":79,"try-statement":80,"checked-statement":81,"unchecked-statement":82,"lock-statement":83,"using-statement":84,"type":85,"CONST":86,"OPEN_BRACE":12,"SEMICOLON":87,"statement-expression":88,"if-statement":89,"switch-statement":90,"while-statement":91,"do-statement":92,"for-statement":93,"foreach-statement":94,"break-statement":95,"continue-statement":96,"goto-statement":97,"return-statement":98,"throw-statement":99,"TRY":100,"CHECKED":101,"UNCHECKED":102,"LOCK":103,"USING":104,"value-type":34,"reference-type":35,"invocation-expression":105,"object-creation-expression":106,"assignment":107,"post-increment-expression":108,"post-decrement-expression":109,"pre-increment-expression":110,"pre-decrement-expression":111,"IF":112,"SWITCH":113,"WHILE":114,"DO":115,"FOR":116,"FOREACH":117,"BREAK":118,"CONTINUE":119,"GOTO":120,"RETURN":121,"THROW":122,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"array-type":40,"delegate-type":41,"primary-expression":123,"NEW":124,"unary-expression":125,"OP_INC":126,"OP_DEC":127,"type-name":42,"simple-type":43,"OBJECT":128,"STRING":129,"non-array-type":46,"primary-no-array-creation-expression":130,"array-creation-expression":131,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"cast-expression":137,"namespace-or-type-name":47,"numeric-type":48,"BOOL":138,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"element-access":143,"this-access":144,"base-access":145,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"OPEN_PARENS":151,"integral-type":51,"floating-point-type":52,"DECIMAL":152,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"SBYTE":163,"BYTE":164,"SHORT":165,"USHORT":166,"INT":167,"UINT":168,"LONG":169,"ULONG":170,"CHAR":171,"FLOAT":172,"DOUBLE":173,"TRUE":174,"FALSE":175}

item set 608 
switch-labels -> switch-label . 
transitions ->  {}

item set 609 
switch-label -> CASE .constant-expression COLON
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":639,"expression":369,"conditional-expression":251,"assignment":252,"conditional-or-expression":253,"unary-expression":254,"conditional-and-expression":255,"primary-expression":123,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"pre-increment-expression":256,"pre-decrement-expression":257,"cast-expression":137,"inclusive-or-expression":258,"primary-no-array-creation-expression":130,"array-creation-expression":131,"OP_INC":126,"OP_DEC":127,"OPEN_PARENS":151,"exclusive-or-expression":259,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"invocation-expression":260,"element-access":143,"this-access":144,"base-access":145,"post-increment-expression":261,"post-decrement-expression":262,"object-creation-expression":263,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"NEW":124,"and-expression":264,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"equality-expression":267,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241,"relational-expression":268,"shift-expression":269,"additive-expression":270,"multiplicative-expression":271}

item set 610 
switch-label -> DEFAULT .COLON 
transitions ->  {"COLON":640}

item set 611 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":641}

item set 612 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 613 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":642,"block":74,"empty-statement":75,"expression-statement":76,"selection-statement":77,"iteration-statement":78,"jump-statement":79,"try-statement":80,"checked-statement":81,"unchecked-statement":82,"lock-statement":83,"using-statement":84,"OPEN_BRACE":12,"SEMICOLON":87,"statement-expression":88,"if-statement":89,"switch-statement":90,"while-statement":91,"do-statement":92,"for-statement":93,"foreach-statement":94,"break-statement":95,"continue-statement":96,"goto-statement":97,"return-statement":98,"throw-statement":99,"TRY":100,"CHECKED":101,"UNCHECKED":102,"LOCK":103,"USING":104,"invocation-expression":105,"object-creation-expression":106,"assignment":107,"post-increment-expression":108,"post-decrement-expression":109,"pre-increment-expression":110,"pre-decrement-expression":111,"IF":112,"SWITCH":113,"WHILE":114,"DO":115,"FOR":116,"FOREACH":117,"BREAK":118,"CONTINUE":119,"GOTO":120,"RETURN":121,"THROW":122,"primary-expression":123,"NEW":124,"unary-expression":125,"OP_INC":126,"OP_DEC":127,"primary-no-array-creation-expression":130,"array-creation-expression":131,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"cast-expression":137,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"element-access":143,"this-access":144,"base-access":145,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"OPEN_PARENS":151,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 614 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":643,"block":74,"empty-statement":75,"expression-statement":76,"selection-statement":77,"iteration-statement":78,"jump-statement":79,"try-statement":80,"checked-statement":81,"unchecked-statement":82,"lock-statement":83,"using-statement":84,"OPEN_BRACE":12,"SEMICOLON":87,"statement-expression":88,"if-statement":89,"switch-statement":90,"while-statement":91,"do-statement":92,"for-statement":93,"foreach-statement":94,"break-statement":95,"continue-statement":96,"goto-statement":97,"return-statement":98,"throw-statement":99,"TRY":100,"CHECKED":101,"UNCHECKED":102,"LOCK":103,"USING":104,"invocation-expression":105,"object-creation-expression":106,"assignment":107,"post-increment-expression":108,"post-decrement-expression":109,"pre-increment-expression":110,"pre-decrement-expression":111,"IF":112,"SWITCH":113,"WHILE":114,"DO":115,"FOR":116,"FOREACH":117,"BREAK":118,"CONTINUE":119,"GOTO":120,"RETURN":121,"THROW":122,"primary-expression":123,"NEW":124,"unary-expression":125,"OP_INC":126,"OP_DEC":127,"primary-no-array-creation-expression":130,"array-creation-expression":131,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"cast-expression":137,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"element-access":143,"this-access":144,"base-access":145,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"OPEN_PARENS":151,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 615 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":644}

item set 616 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":645,"block":74,"empty-statement":75,"expression-statement":76,"selection-statement":77,"iteration-statement":78,"jump-statement":79,"try-statement":80,"checked-statement":81,"unchecked-statement":82,"lock-statement":83,"using-statement":84,"OPEN_BRACE":12,"SEMICOLON":87,"statement-expression":88,"if-statement":89,"switch-statement":90,"while-statement":91,"do-statement":92,"for-statement":93,"foreach-statement":94,"break-statement":95,"continue-statement":96,"goto-statement":97,"return-statement":98,"throw-statement":99,"TRY":100,"CHECKED":101,"UNCHECKED":102,"LOCK":103,"USING":104,"invocation-expression":105,"object-creation-expression":106,"assignment":107,"post-increment-expression":108,"post-decrement-expression":109,"pre-increment-expression":110,"pre-decrement-expression":111,"IF":112,"SWITCH":113,"WHILE":114,"DO":115,"FOR":116,"FOREACH":117,"BREAK":118,"CONTINUE":119,"GOTO":120,"RETURN":121,"THROW":122,"primary-expression":123,"NEW":124,"unary-expression":125,"OP_INC":126,"OP_DEC":127,"primary-no-array-creation-expression":130,"array-creation-expression":131,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"cast-expression":137,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"element-access":143,"this-access":144,"base-access":145,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"OPEN_PARENS":151,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 617 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":646}

item set 618 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_PARENS":647,"for-iterator":648,"statement-expression-list":566,"statement-expression":365,"invocation-expression":105,"object-creation-expression":106,"assignment":107,"post-increment-expression":108,"post-decrement-expression":109,"pre-increment-expression":110,"pre-decrement-expression":111,"primary-expression":123,"NEW":124,"unary-expression":125,"OP_INC":126,"OP_DEC":127,"primary-no-array-creation-expression":130,"array-creation-expression":131,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"cast-expression":137,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"element-access":143,"this-access":144,"base-access":145,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"OPEN_PARENS":151,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"CHECKED":265,"UNCHECKED":266,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 619 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER IN expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":649}

item set 620 
conditional-expression -> conditional-or-expression INTERR expression COLON expression . 
transitions ->  {}

item set 621 
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers .
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers .array-initializer
rank-specifiers -> rank-specifiers .rank-specifier
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET 
transitions ->  {"array-initializer":650,"rank-specifier":332,"OPEN_BRACE":404,"OPEN_BRACKET":202}

item set 622 
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer . 
transitions ->  {}

item set 623 
array-initializer -> OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE . 
transitions ->  {}

item set 624 
variable-initializer-list -> variable-initializer-list COMMA variable-initializer . 
transitions ->  {}

item set 625 
attribute-arguments -> OPEN_PARENS positional-argument-list COMMA named-argument-list CLOSE_PARENS . 
transitions ->  {}

item set 626 
delegate-declaration -> attributes enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 627 
delegate-declaration -> attributes enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":651}

item set 628 
delegate-declaration -> attributes DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 629 
delegate-declaration -> enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 630 
parameter-array -> attributes params array-type IDENTIFIER . 
transitions ->  {}

item set 631 
fixed-parameter -> attributes parameter-modifieropt type IDENTIFIER . 
transitions ->  {}

item set 632 
specific-catch-clause -> CATCH OPEN_PARENS class-type CLOSE_PARENS block . 
transitions ->  {}

item set 633 
specific-catch-clause -> CATCH OPEN_PARENS class-type IDENTIFIER CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":652,"OPEN_BRACE":12}

item set 634 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement . 
transitions ->  {}

item set 635 
switch-block -> OPEN_BRACE switch-sections CLOSE_BRACE . 
transitions ->  {}

item set 636 
switch-sections -> switch-sections switch-section . 
transitions ->  {}

item set 637 
switch-section -> switch-labels statement-list .
statement-list -> statement-list .statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"statement":205,"labeled-statement":68,"declaration-statement":69,"embedded-statement":70,"IDENTIFIER":71,"local-variable-declaration":72,"local-constant-declaration":73,"block":74,"empty-statement":75,"expression-statement":76,"selection-statement":77,"iteration-statement":78,"jump-statement":79,"try-statement":80,"checked-statement":81,"unchecked-statement":82,"lock-statement":83,"using-statement":84,"type":85,"CONST":86,"OPEN_BRACE":12,"SEMICOLON":87,"statement-expression":88,"if-statement":89,"switch-statement":90,"while-statement":91,"do-statement":92,"for-statement":93,"foreach-statement":94,"break-statement":95,"continue-statement":96,"goto-statement":97,"return-statement":98,"throw-statement":99,"TRY":100,"CHECKED":101,"UNCHECKED":102,"LOCK":103,"USING":104,"value-type":34,"reference-type":35,"invocation-expression":105,"object-creation-expression":106,"assignment":107,"post-increment-expression":108,"post-decrement-expression":109,"pre-increment-expression":110,"pre-decrement-expression":111,"IF":112,"SWITCH":113,"WHILE":114,"DO":115,"FOR":116,"FOREACH":117,"BREAK":118,"CONTINUE":119,"GOTO":120,"RETURN":121,"THROW":122,"struct-type":36,"enum-type":37,"class-type":38,"interface-type":39,"array-type":40,"delegate-type":41,"primary-expression":123,"NEW":124,"unary-expression":125,"OP_INC":126,"OP_DEC":127,"type-name":42,"simple-type":43,"OBJECT":128,"STRING":129,"non-array-type":46,"primary-no-array-creation-expression":130,"array-creation-expression":131,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"cast-expression":137,"namespace-or-type-name":47,"numeric-type":48,"BOOL":138,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"element-access":143,"this-access":144,"base-access":145,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"OPEN_PARENS":151,"integral-type":51,"floating-point-type":52,"DECIMAL":152,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"SBYTE":163,"BYTE":164,"SHORT":165,"USHORT":166,"INT":167,"UINT":168,"LONG":169,"ULONG":170,"CHAR":171,"FLOAT":172,"DOUBLE":173,"TRUE":174,"FALSE":175}

item set 638 
switch-labels -> switch-labels switch-label . 
transitions ->  {}

item set 639 
switch-label -> CASE constant-expression .COLON 
transitions ->  {"COLON":653}

item set 640 
switch-label -> DEFAULT COLON . 
transitions ->  {}

item set 641 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 642 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 643 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 644 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":654,"block":74,"empty-statement":75,"expression-statement":76,"selection-statement":77,"iteration-statement":78,"jump-statement":79,"try-statement":80,"checked-statement":81,"unchecked-statement":82,"lock-statement":83,"using-statement":84,"OPEN_BRACE":12,"SEMICOLON":87,"statement-expression":88,"if-statement":89,"switch-statement":90,"while-statement":91,"do-statement":92,"for-statement":93,"foreach-statement":94,"break-statement":95,"continue-statement":96,"goto-statement":97,"return-statement":98,"throw-statement":99,"TRY":100,"CHECKED":101,"UNCHECKED":102,"LOCK":103,"USING":104,"invocation-expression":105,"object-creation-expression":106,"assignment":107,"post-increment-expression":108,"post-decrement-expression":109,"pre-increment-expression":110,"pre-decrement-expression":111,"IF":112,"SWITCH":113,"WHILE":114,"DO":115,"FOR":116,"FOREACH":117,"BREAK":118,"CONTINUE":119,"GOTO":120,"RETURN":121,"THROW":122,"primary-expression":123,"NEW":124,"unary-expression":125,"OP_INC":126,"OP_DEC":127,"primary-no-array-creation-expression":130,"array-creation-expression":131,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"cast-expression":137,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"element-access":143,"this-access":144,"base-access":145,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"OPEN_PARENS":151,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 645 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 646 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":655,"block":74,"empty-statement":75,"expression-statement":76,"selection-statement":77,"iteration-statement":78,"jump-statement":79,"try-statement":80,"checked-statement":81,"unchecked-statement":82,"lock-statement":83,"using-statement":84,"OPEN_BRACE":12,"SEMICOLON":87,"statement-expression":88,"if-statement":89,"switch-statement":90,"while-statement":91,"do-statement":92,"for-statement":93,"foreach-statement":94,"break-statement":95,"continue-statement":96,"goto-statement":97,"return-statement":98,"throw-statement":99,"TRY":100,"CHECKED":101,"UNCHECKED":102,"LOCK":103,"USING":104,"invocation-expression":105,"object-creation-expression":106,"assignment":107,"post-increment-expression":108,"post-decrement-expression":109,"pre-increment-expression":110,"pre-decrement-expression":111,"IF":112,"SWITCH":113,"WHILE":114,"DO":115,"FOR":116,"FOREACH":117,"BREAK":118,"CONTINUE":119,"GOTO":120,"RETURN":121,"THROW":122,"primary-expression":123,"NEW":124,"unary-expression":125,"OP_INC":126,"OP_DEC":127,"primary-no-array-creation-expression":130,"array-creation-expression":131,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"cast-expression":137,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"element-access":143,"this-access":144,"base-access":145,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"OPEN_PARENS":151,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 647 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":656,"block":74,"empty-statement":75,"expression-statement":76,"selection-statement":77,"iteration-statement":78,"jump-statement":79,"try-statement":80,"checked-statement":81,"unchecked-statement":82,"lock-statement":83,"using-statement":84,"OPEN_BRACE":12,"SEMICOLON":87,"statement-expression":88,"if-statement":89,"switch-statement":90,"while-statement":91,"do-statement":92,"for-statement":93,"foreach-statement":94,"break-statement":95,"continue-statement":96,"goto-statement":97,"return-statement":98,"throw-statement":99,"TRY":100,"CHECKED":101,"UNCHECKED":102,"LOCK":103,"USING":104,"invocation-expression":105,"object-creation-expression":106,"assignment":107,"post-increment-expression":108,"post-decrement-expression":109,"pre-increment-expression":110,"pre-decrement-expression":111,"IF":112,"SWITCH":113,"WHILE":114,"DO":115,"FOR":116,"FOREACH":117,"BREAK":118,"CONTINUE":119,"GOTO":120,"RETURN":121,"THROW":122,"primary-expression":123,"NEW":124,"unary-expression":125,"OP_INC":126,"OP_DEC":127,"primary-no-array-creation-expression":130,"array-creation-expression":131,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"cast-expression":137,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"element-access":143,"this-access":144,"base-access":145,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"OPEN_PARENS":151,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 648 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":657}

item set 649 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":658,"block":74,"empty-statement":75,"expression-statement":76,"selection-statement":77,"iteration-statement":78,"jump-statement":79,"try-statement":80,"checked-statement":81,"unchecked-statement":82,"lock-statement":83,"using-statement":84,"OPEN_BRACE":12,"SEMICOLON":87,"statement-expression":88,"if-statement":89,"switch-statement":90,"while-statement":91,"do-statement":92,"for-statement":93,"foreach-statement":94,"break-statement":95,"continue-statement":96,"goto-statement":97,"return-statement":98,"throw-statement":99,"TRY":100,"CHECKED":101,"UNCHECKED":102,"LOCK":103,"USING":104,"invocation-expression":105,"object-creation-expression":106,"assignment":107,"post-increment-expression":108,"post-decrement-expression":109,"pre-increment-expression":110,"pre-decrement-expression":111,"IF":112,"SWITCH":113,"WHILE":114,"DO":115,"FOR":116,"FOREACH":117,"BREAK":118,"CONTINUE":119,"GOTO":120,"RETURN":121,"THROW":122,"primary-expression":123,"NEW":124,"unary-expression":125,"OP_INC":126,"OP_DEC":127,"primary-no-array-creation-expression":130,"array-creation-expression":131,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"cast-expression":137,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"element-access":143,"this-access":144,"base-access":145,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"OPEN_PARENS":151,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 650 
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer . 
transitions ->  {}

item set 651 
delegate-declaration -> attributes enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 652 
specific-catch-clause -> CATCH OPEN_PARENS class-type IDENTIFIER CLOSE_PARENS block . 
transitions ->  {}

item set 653 
switch-label -> CASE constant-expression COLON . 
transitions ->  {}

item set 654 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 655 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 656 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 657 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":659,"block":74,"empty-statement":75,"expression-statement":76,"selection-statement":77,"iteration-statement":78,"jump-statement":79,"try-statement":80,"checked-statement":81,"unchecked-statement":82,"lock-statement":83,"using-statement":84,"OPEN_BRACE":12,"SEMICOLON":87,"statement-expression":88,"if-statement":89,"switch-statement":90,"while-statement":91,"do-statement":92,"for-statement":93,"foreach-statement":94,"break-statement":95,"continue-statement":96,"goto-statement":97,"return-statement":98,"throw-statement":99,"TRY":100,"CHECKED":101,"UNCHECKED":102,"LOCK":103,"USING":104,"invocation-expression":105,"object-creation-expression":106,"assignment":107,"post-increment-expression":108,"post-decrement-expression":109,"pre-increment-expression":110,"pre-decrement-expression":111,"IF":112,"SWITCH":113,"WHILE":114,"DO":115,"FOR":116,"FOREACH":117,"BREAK":118,"CONTINUE":119,"GOTO":120,"RETURN":121,"THROW":122,"primary-expression":123,"NEW":124,"unary-expression":125,"OP_INC":126,"OP_DEC":127,"primary-no-array-creation-expression":130,"array-creation-expression":131,"PLUS":132,"MINUS":133,"BANG":134,"TILDE":135,"STAR":136,"cast-expression":137,"literal":139,"simple-name":140,"parenthesized-expression":141,"member-access":142,"element-access":143,"this-access":144,"base-access":145,"delegate-creation-expression":146,"typeof-expression":147,"sizeof-expression":148,"checked-expression":149,"unchecked-expression":150,"OPEN_PARENS":151,"BOOLEAN_LITERAL":153,"REAL_LITERAL":154,"INTEGER_LITERAL":155,"STRING_LITERAL":156,"CHARACTER_LITERAL":157,"NULL":158,"IDENTIFIER":226,"predefined-type":159,"THIS":160,"base":161,"TYPEOF":162,"TRUE":174,"FALSE":175,"BOOL":227,"BYTE":228,"CHAR":229,"DECIMAL":230,"DOUBLE":231,"FLOAT":232,"INT":233,"LONG":234,"OBJECT":235,"SBYTE":236,"SHORT":237,"STRING":238,"UINT":239,"ULONG":240,"USHORT":241}

item set 658 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 659 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}
660 states.
Building lookahead grammar.
Computing lookaheads.
Building parse table.
Conflict at state: 0, token: OPEN_BRACE
  reduce by rule: e -> 
  shift token (then go to state 12)
Conflict at state: 0, token: DELEGATE
  reduce by rule: e -> 
  shift token (then go to state 11)
Conflict at state: 0, token: PRIVATE
  reduce by rule: e -> 
  shift token (then go to state 20)
Conflict at state: 0, token: INTERNAL
  reduce by rule: e -> 
  shift token (then go to state 19)
Conflict at state: 0, token: PROTECTED
  reduce by rule: e -> 
  shift token (then go to state 18)
Conflict at state: 0, token: PUBLIC
  reduce by rule: e -> 
  shift token (then go to state 17)
Conflict at state: 0, token: NEW
  reduce by rule: e -> 
  shift token (then go to state 16)
Conflict at state: 0, token: ENUM
  reduce by rule: e -> 
  shift token (then go to state 9)
Conflict at state: 0, token: OPEN_BRACKET
  reduce by rule: e -> 
  shift token (then go to state 15)
Conflict at state: 2, token: OPEN_BRACE
  reduce by rule: e -> 
  shift token (then go to state 12)
Conflict at state: 2, token: DELEGATE
  reduce by rule: e -> 
  shift token (then go to state 11)
Conflict at state: 2, token: PRIVATE
  reduce by rule: e -> 
  shift token (then go to state 20)
Conflict at state: 2, token: INTERNAL
  reduce by rule: e -> 
  shift token (then go to state 19)
Conflict at state: 2, token: PROTECTED
  reduce by rule: e -> 
  shift token (then go to state 18)
Conflict at state: 2, token: PUBLIC
  reduce by rule: e -> 
  shift token (then go to state 17)
Conflict at state: 2, token: NEW
  reduce by rule: e -> 
  shift token (then go to state 16)
Conflict at state: 2, token: ENUM
  reduce by rule: e -> 
  shift token (then go to state 9)
Conflict at state: 2, token: OPEN_BRACKET
  reduce by rule: e -> 
  shift token (then go to state 15)
Conflict at state: 2, token: EOF
  reduce by rule: e -> 
  shift token (then go to state 21)
Conflict at state: 4, token: DELEGATE
  reduce by rule: e -> attributes
  shift token (then go to state 25)
Conflict at state: 4, token: PRIVATE
  reduce by rule: e -> attributes
  shift token (then go to state 20)
Conflict at state: 4, token: INTERNAL
  reduce by rule: e -> attributes
  shift token (then go to state 19)
Conflict at state: 4, token: PROTECTED
  reduce by rule: e -> attributes
  shift token (then go to state 18)
Conflict at state: 4, token: PUBLIC
  reduce by rule: e -> attributes
  shift token (then go to state 17)
Conflict at state: 4, token: NEW
  reduce by rule: e -> attributes
  shift token (then go to state 16)
Conflict at state: 4, token: ENUM
  reduce by rule: e -> attributes
  shift token (then go to state 23)
Conflict at state: 8, token: OPEN_BRACKET
  reduce by rule: attributes -> attribute-sections
  shift token (then go to state 15)
Conflict at state: 33, token: IDENTIFIER
  reduce by rule: non-array-type -> type
  reduce by rule: return-type -> type
Conflict at state: 33, token: OPEN_BRACKET
  reduce by rule: non-array-type -> type
  reduce by rule: return-type -> type
Conflict at state: 42, token: IDENTIFIER
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OPEN_BRACKET
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: SEMICOLON
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: ASSIGN
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: COMMA
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OPEN_PARENS
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: CLOSE_PARENS
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: IS
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OP_GE
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OP_LE
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: GT
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: LT
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: INTERR
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: CLOSE_BRACKET
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: COLON
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OP_OR
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OP_AND
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: BITWISE_OR
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: CARET
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: AMP
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OP_EQ
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OP_NE
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: CLOSE_BRACE
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: AS
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: IDENTIFIER
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OPEN_BRACKET
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: SEMICOLON
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: ASSIGN
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: COMMA
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OPEN_PARENS
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: CLOSE_PARENS
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: IS
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OP_GE
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OP_LE
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: GT
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: LT
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: INTERR
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: CLOSE_BRACKET
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: COLON
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OP_OR
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OP_AND
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: BITWISE_OR
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: CARET
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: AMP
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OP_EQ
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OP_NE
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: CLOSE_BRACE
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: AS
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: IDENTIFIER
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OPEN_BRACKET
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: SEMICOLON
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: ASSIGN
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: COMMA
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OPEN_PARENS
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: CLOSE_PARENS
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: IS
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OP_GE
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OP_LE
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: GT
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: LT
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: INTERR
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: CLOSE_BRACKET
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: COLON
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OP_OR
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OP_AND
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: BITWISE_OR
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: CARET
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: AMP
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OP_EQ
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OP_NE
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: CLOSE_BRACE
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: AS
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: IDENTIFIER
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OPEN_BRACKET
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: SEMICOLON
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: ASSIGN
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: COMMA
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OPEN_PARENS
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: CLOSE_PARENS
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: IS
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OP_GE
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OP_LE
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: GT
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: LT
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: INTERR
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: CLOSE_BRACKET
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: COLON
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OP_OR
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OP_AND
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: BITWISE_OR
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: CARET
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: AMP
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OP_EQ
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: OP_NE
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: CLOSE_BRACE
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 42, token: AS
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 71, token: SEMICOLON
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 71, token: IDENTIFIER
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 71, token: ASSIGN
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 71, token: COMMA
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 71, token: DOT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 71, token: OPEN_BRACKET
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 71, token: OPEN_PARENS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 71, token: OP_INC
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 71, token: OP_DEC
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 71, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 71, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 71, token: OP_XOR_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 71, token: OP_OR_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 71, token: OP_AND_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 71, token: OP_MOD_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 71, token: OP_DIV_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 71, token: OP_MULT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 71, token: OP_SUB_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 71, token: OP_ADD_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 105, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 105, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 105, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 105, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 105, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 105, token: DOT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 105, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 105, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 105, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 105, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 105, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 105, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 105, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 105, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 105, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 105, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 105, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 105, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 105, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 106, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 106, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 106, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 106, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 106, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 106, token: DOT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 106, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 106, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 106, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 106, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 106, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 106, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 106, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 106, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 106, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 106, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 106, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 106, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 106, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 108, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 108, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 108, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 108, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 108, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 108, token: DOT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 108, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 108, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 108, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 108, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 108, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 108, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 108, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 108, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 108, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 108, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 108, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 108, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 108, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 109, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 109, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 109, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 109, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 109, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 109, token: DOT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 109, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 109, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 109, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 109, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 109, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 109, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 109, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 109, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 109, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 109, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 109, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 109, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 109, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 110, token: SEMICOLON
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 110, token: ASSIGN
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 110, token: OP_ADD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 110, token: OP_SUB_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 110, token: OP_MULT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 110, token: OP_DIV_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 110, token: OP_MOD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 110, token: OP_AND_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 110, token: OP_OR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 110, token: OP_XOR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 110, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 110, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 110, token: COMMA
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 110, token: CLOSE_PARENS
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 111, token: SEMICOLON
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 111, token: ASSIGN
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 111, token: OP_ADD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 111, token: OP_SUB_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 111, token: OP_MULT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 111, token: OP_DIV_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 111, token: OP_MOD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 111, token: OP_AND_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 111, token: OP_OR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 111, token: OP_XOR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 111, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 111, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 111, token: COMMA
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 111, token: CLOSE_PARENS
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 128, token: SEMICOLON
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 128, token: IDENTIFIER
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 128, token: ASSIGN
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 128, token: COMMA
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 128, token: OPEN_BRACKET
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 128, token: DOT
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 128, token: CLOSE_PARENS
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 129, token: SEMICOLON
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 129, token: IDENTIFIER
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 129, token: ASSIGN
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 129, token: COMMA
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 129, token: OPEN_BRACKET
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 129, token: DOT
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 129, token: CLOSE_PARENS
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 138, token: COMMA
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 138, token: ASSIGN
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 138, token: IDENTIFIER
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 138, token: SEMICOLON
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 138, token: OPEN_BRACKET
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 138, token: DOT
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 138, token: CLOSE_PARENS
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 152, token: SEMICOLON
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 152, token: IDENTIFIER
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 152, token: ASSIGN
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 152, token: COMMA
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 152, token: OPEN_BRACKET
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 152, token: DOT
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 152, token: CLOSE_PARENS
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 163, token: COMMA
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 163, token: ASSIGN
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 163, token: IDENTIFIER
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 163, token: SEMICOLON
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 163, token: OPEN_BRACKET
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 163, token: DOT
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 163, token: CLOSE_PARENS
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 164, token: COMMA
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 164, token: ASSIGN
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 164, token: IDENTIFIER
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 164, token: SEMICOLON
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 164, token: OPEN_BRACKET
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 164, token: DOT
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 164, token: CLOSE_PARENS
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 165, token: COMMA
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 165, token: ASSIGN
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 165, token: IDENTIFIER
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 165, token: SEMICOLON
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 165, token: OPEN_BRACKET
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 165, token: DOT
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 165, token: CLOSE_PARENS
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 166, token: COMMA
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 166, token: ASSIGN
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 166, token: IDENTIFIER
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 166, token: SEMICOLON
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 166, token: OPEN_BRACKET
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 166, token: DOT
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 166, token: CLOSE_PARENS
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 167, token: COMMA
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 167, token: ASSIGN
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 167, token: IDENTIFIER
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 167, token: SEMICOLON
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 167, token: OPEN_BRACKET
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 167, token: DOT
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 167, token: CLOSE_PARENS
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 168, token: COMMA
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 168, token: ASSIGN
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 168, token: IDENTIFIER
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 168, token: SEMICOLON
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 168, token: OPEN_BRACKET
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 168, token: DOT
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 168, token: CLOSE_PARENS
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 169, token: COMMA
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 169, token: ASSIGN
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 169, token: IDENTIFIER
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 169, token: SEMICOLON
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 169, token: OPEN_BRACKET
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 169, token: DOT
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 169, token: CLOSE_PARENS
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 170, token: COMMA
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 170, token: ASSIGN
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 170, token: IDENTIFIER
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 170, token: SEMICOLON
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 170, token: OPEN_BRACKET
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 170, token: DOT
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 170, token: CLOSE_PARENS
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 171, token: COMMA
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 171, token: ASSIGN
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 171, token: IDENTIFIER
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 171, token: SEMICOLON
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 171, token: OPEN_BRACKET
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 171, token: DOT
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 171, token: CLOSE_PARENS
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 172, token: COMMA
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 172, token: ASSIGN
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 172, token: IDENTIFIER
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 172, token: SEMICOLON
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 172, token: OPEN_BRACKET
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 172, token: DOT
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 172, token: CLOSE_PARENS
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 173, token: COMMA
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 173, token: ASSIGN
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 173, token: IDENTIFIER
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 173, token: SEMICOLON
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 173, token: OPEN_BRACKET
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 173, token: DOT
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 173, token: CLOSE_PARENS
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 200, token: OPEN_BRACKET
  reduce by rule: array-type -> non-array-type rank-specifiers
  shift token (then go to state 202)
Conflict at state: 281, token: OPEN_PARENS
  reduce by rule: reference-type -> delegate-type
  shift token (then go to state 405)
Conflict at state: 304, token: CLOSE_PARENS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: DOT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: OPEN_BRACKET
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: OP_XOR_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: OP_OR_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: OP_AND_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: OP_MOD_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: OP_DIV_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: OP_MULT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: OP_SUB_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: OP_ADD_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: ASSIGN
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: OPEN_PARENS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: OP_INC
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: OP_DEC
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: INTERR
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: STAR
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: DIV
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: PERCENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: OP_LEFT_SHIFT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: RIGHT_SHIFT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: OP_EQ
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: OP_NE
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: CARET
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: OP_AND
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: OP_OR
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: BITWISE_OR
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: AMP
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: AS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: IS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: OP_GE
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: OP_LE
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: GT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: LT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: MINUS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: PLUS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: IDENTIFIER
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: COMMA
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 304, token: SEMICOLON
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 357, token: CLOSE_PARENS
  reduce by rule: boolean-expression -> expression
  reduce by rule: boolean-expression -> expression
Conflict at state: 357, token: SEMICOLON
  reduce by rule: boolean-expression -> expression
  reduce by rule: boolean-expression -> expression
Conflict at state: 426, token: ASSIGN
  reduce by rule: simple-name -> IDENTIFIER
  shift token (then go to state 529)
Conflict at state: 559, token: ELSE
  reduce by rule: if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
  shift token (then go to state 603)

400 Conflict(s) found in grammar.
Done.
