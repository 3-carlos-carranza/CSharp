Processing grammar.
$accept(0)
$end(1)
error(2)
compilationUnit(3)
es(4)
EOF(5)
e(6)
attributes(7)
interface-declaration(8)
enum-declaration(9)
delegate-declaration(10)
block(11)
BOOLEAN_LITERAL(12)
TRUE(13)
FALSE(14)
literal(15)
REAL_LITERAL(16)
INTEGER_LITERAL(17)
STRING_LITERAL(18)
CHARACTER_LITERAL(19)
NULL(20)
namespace-name(21)
namespace-or-type-name(22)
type-name(23)
IDENTIFIER(24)
DOT(25)
type(26)
value-type(27)
reference-type(28)
struct-type(29)
enum-type(30)
simple-type(31)
numeric-type(32)
BOOL(33)
integral-type(34)
floating-point-type(35)
DECIMAL(36)
SBYTE(37)
BYTE(38)
SHORT(39)
USHORT(40)
INT(41)
UINT(42)
LONG(43)
ULONG(44)
CHAR(45)
FLOAT(46)
DOUBLE(47)
class-type(48)
interface-type(49)
array-type(50)
delegate-type(51)
OBJECT(52)
STRING(53)
non-array-type(54)
rank-specifiers(55)
rank-specifier(56)
OPEN_BRACKET(57)
CLOSE_BRACKET(58)
dim-separators(59)
COMMA(60)
variable-reference(61)
expression(62)
argument-list(63)
argument(64)
REF(65)
OUT(66)
primary-expression(67)
primary-no-array-creation-expression(68)
array-creation-expression(69)
simple-name(70)
parenthesized-expression(71)
member-access(72)
invocation-expression(73)
element-access(74)
this-access(75)
base-access(76)
post-increment-expression(77)
post-decrement-expression(78)
object-creation-expression(79)
delegate-creation-expression(80)
typeof-expression(81)
sizeof-expression(82)
checked-expression(83)
unchecked-expression(84)
OPEN_PARENS(85)
CLOSE_PARENS(86)
predefined-type(87)
expression-list(88)
THIS(89)
base(90)
OP_INC(91)
OP_DEC(92)
NEW(93)
array-initializer(94)
TYPEOF(95)
VOID(96)
CHECKED(97)
UNCHECKED(98)
unary-expression(99)
PLUS(100)
MINUS(101)
BANG(102)
TILDE(103)
STAR(104)
pre-increment-expression(105)
pre-decrement-expression(106)
cast-expression(107)
multiplicative-expression(108)
DIV(109)
PERCENT(110)
additive-expression(111)
shift-expression(112)
OP_LEFT_SHIFT(113)
RIGHT_SHIFT(114)
relational-expression(115)
LT(116)
GT(117)
OP_LE(118)
OP_GE(119)
IS(120)
AS(121)
equality-expression(122)
OP_EQ(123)
OP_NE(124)
and-expression(125)
AMP(126)
exclusive-or-expression(127)
CARET(128)
inclusive-or-expression(129)
BITWISE_OR(130)
conditional-and-expression(131)
OP_AND(132)
conditional-or-expression(133)
OP_OR(134)
conditional-expression(135)
INTERR(136)
COLON(137)
assignment(138)
assignment-operator(139)
ASSIGN(140)
OP_ADD_ASSIGNMENT(141)
OP_SUB_ASSIGNMENT(142)
OP_MULT_ASSIGNMENT(143)
OP_DIV_ASSIGNMENT(144)
OP_MOD_ASSIGNMENT(145)
OP_AND_ASSIGNMENT(146)
OP_OR_ASSIGNMENT(147)
OP_XOR_ASSIGNMENT(148)
OP_LEFT_SHIFT_ASSIGNMENT(149)
RIGHT_SHIFT_ASSIGNMENT(150)
constant-expression(151)
boolean-expression(152)
statement(153)
labeled-statement(154)
declaration-statement(155)
embedded-statement(156)
empty-statement(157)
expression-statement(158)
selection-statement(159)
iteration-statement(160)
jump-statement(161)
try-statement(162)
checked-statement(163)
unchecked-statement(164)
lock-statement(165)
using-statement(166)
OPEN_BRACE(167)
CLOSE_BRACE(168)
statement-list(169)
SEMICOLON(170)
local-variable-declaration(171)
local-constant-declaration(172)
local-variable-declarators(173)
local-variable-declarator(174)
local-variable(175)
local-variable-initializer(176)
CONST(177)
constant-declarators(178)
constant-declarator(179)
statement-expression(180)
if-statement(181)
switch-statement(182)
IF(183)
ELSE(184)
SWITCH(185)
switch-block(186)
switch-sections(187)
switch-section(188)
switch-labels(189)
switch-label(190)
CASE(191)
DEFAULT(192)
while-statement(193)
do-statement(194)
for-statement(195)
foreach-statement(196)
WHILE(197)
DO(198)
FOR(199)
for-initializer(200)
for-condition(201)
for-iterator(202)
statement-expression-list(203)
FOREACH(204)
IN(205)
break-statement(206)
continue-statement(207)
goto-statement(208)
return-statement(209)
throw-statement(210)
BREAK(211)
CONTINUE(212)
GOTO(213)
RETURN(214)
THROW(215)
TRY(216)
catch-clauses(217)
finally-clause(218)
specific-catch-clauses(219)
general-catch-clause(220)
specific-catch-clause(221)
CATCH(222)
FINALLY(223)
LOCK(224)
USING(225)
resource-acquisition(226)
variable-initializer-list(227)
variable-initializer(228)
global-attributes(229)
global-attribute-sections(230)
global-attribute-section(231)
global-attribute-target-specifier(232)
attribute-list(233)
global-attribute-target(234)
ASSEMBLY(235)
MODULE(236)
attribute-sections(237)
attribute-section(238)
attribute-target-specifier(239)
attribute-target(240)
FIELD(241)
EVENT(242)
METHOD(243)
PARAM(244)
PROPERTY(245)
TYPE(246)
attribute(247)
attribute-name(248)
attribute-arguments(249)
positional-argument-list(250)
named-argument-list(251)
positional-argument(252)
attribute-argument-expression(253)
named-argument(254)
formal-parameter-list(255)
fixed-parameters(256)
parameter-array(257)
fixed-parameter(258)
parameter-modifier(259)
parameter-modifieropt(260)
params(261)
return-type(262)
interface-type-list(263)
DELEGATE(264)
enum-modifiers(265)
ENUM(266)
enum-body(267)
enum-base(268)
enum-member-declarations(269)
enum-modifier(270)
PUBLIC(271)
PROTECTED(272)
INTERNAL(273)
PRIVATE(274)
enum-member-declaration(275)
INTERFACE(276)
interface-body(277)
interface-base(278)
interface-member-declarations(279)
interface-member-declaration(280)
interface-method-declaration(281)
interface-property-declaration(282)
interface-event-declaration(283)
interface-indexer-declaration(284)
interface-accessors(285)
GET(286)
SET(287)

Item sets
------

item set 0 
$accept -> .compilationUnit $end #lookaheads= $end
compilationUnit -> .es EOF
es -> .es e
es -> .e
e -> .attributes
e -> .interface-declaration
e -> .enum-declaration
e -> .delegate-declaration
e -> .block
e -> .
attributes -> .attribute-sections
interface-declaration -> .INTERFACE IDENTIFIER interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER interface-body
interface-declaration -> .enum-modifiers INTERFACE IDENTIFIER interface-body
interface-declaration -> .INTERFACE IDENTIFIER interface-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER interface-body SEMICOLON
interface-declaration -> .attributes enum-modifiers INTERFACE IDENTIFIER interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER interface-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER interface-body SEMICOLON
interface-declaration -> .enum-modifiers INTERFACE IDENTIFIER interface-base interface-body
interface-declaration -> .enum-modifiers INTERFACE IDENTIFIER interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER interface-base interface-body SEMICOLON
interface-declaration -> .enum-modifiers INTERFACE IDENTIFIER interface-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER interface-base interface-body SEMICOLON
interface-declaration -> .attributes enum-modifiers INTERFACE IDENTIFIER interface-body SEMICOLON
interface-declaration -> .attributes enum-modifiers INTERFACE IDENTIFIER interface-base interface-body
interface-declaration -> .attributes enum-modifiers INTERFACE IDENTIFIER interface-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER enum-body
enum-declaration -> .attributes ENUM IDENTIFIER enum-body
enum-declaration -> .enum-modifiers ENUM IDENTIFIER enum-body
enum-declaration -> .ENUM IDENTIFIER enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER enum-body SEMICOLON
enum-declaration -> .attributes enum-modifiers ENUM IDENTIFIER enum-body
enum-declaration -> .attributes ENUM IDENTIFIER enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER enum-body SEMICOLON
enum-declaration -> .enum-modifiers ENUM IDENTIFIER enum-base enum-body
enum-declaration -> .enum-modifiers ENUM IDENTIFIER enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER enum-base enum-body SEMICOLON
enum-declaration -> .enum-modifiers ENUM IDENTIFIER enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER enum-base enum-body SEMICOLON
enum-declaration -> .attributes enum-modifiers ENUM IDENTIFIER enum-body SEMICOLON
enum-declaration -> .attributes enum-modifiers ENUM IDENTIFIER enum-base enum-body
enum-declaration -> .attributes enum-modifiers ENUM IDENTIFIER enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> .attributes DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> .enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> .DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
delegate-declaration -> .enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
delegate-declaration -> .attributes DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
delegate-declaration -> .attributes enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> .attributes enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
enum-modifiers -> .enum-modifier
enum-modifiers -> .enum-modifiers enum-modifier
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
enum-modifier -> .NEW
enum-modifier -> .PUBLIC
enum-modifier -> .PROTECTED
enum-modifier -> .INTERNAL
enum-modifier -> .PRIVATE 
transitions ->  {"compilationUnit":1,"es":2,"e":3,"attributes":4,"interface-declaration":5,"enum-declaration":6,"delegate-declaration":7,"block":8,"attribute-sections":9,"INTERFACE":10,"enum-modifiers":11,"ENUM":12,"DELEGATE":13,"OPEN_BRACE":14,"attribute-section":15,"enum-modifier":16,"OPEN_BRACKET":17,"NEW":18,"PUBLIC":19,"PROTECTED":20,"INTERNAL":21,"PRIVATE":22}

item set 1 
$accept -> compilationUnit .$end #lookaheads= $end 
transitions ->  {}

item set 2 
compilationUnit -> es .EOF
es -> es .e
e -> .attributes
e -> .interface-declaration
e -> .enum-declaration
e -> .delegate-declaration
e -> .block
e -> .
attributes -> .attribute-sections
interface-declaration -> .INTERFACE IDENTIFIER interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER interface-body
interface-declaration -> .enum-modifiers INTERFACE IDENTIFIER interface-body
interface-declaration -> .INTERFACE IDENTIFIER interface-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER interface-body SEMICOLON
interface-declaration -> .attributes enum-modifiers INTERFACE IDENTIFIER interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER interface-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER interface-body SEMICOLON
interface-declaration -> .enum-modifiers INTERFACE IDENTIFIER interface-base interface-body
interface-declaration -> .enum-modifiers INTERFACE IDENTIFIER interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER interface-base interface-body SEMICOLON
interface-declaration -> .enum-modifiers INTERFACE IDENTIFIER interface-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER interface-base interface-body SEMICOLON
interface-declaration -> .attributes enum-modifiers INTERFACE IDENTIFIER interface-body SEMICOLON
interface-declaration -> .attributes enum-modifiers INTERFACE IDENTIFIER interface-base interface-body
interface-declaration -> .attributes enum-modifiers INTERFACE IDENTIFIER interface-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER enum-body
enum-declaration -> .attributes ENUM IDENTIFIER enum-body
enum-declaration -> .enum-modifiers ENUM IDENTIFIER enum-body
enum-declaration -> .ENUM IDENTIFIER enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER enum-body SEMICOLON
enum-declaration -> .attributes enum-modifiers ENUM IDENTIFIER enum-body
enum-declaration -> .attributes ENUM IDENTIFIER enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER enum-body SEMICOLON
enum-declaration -> .enum-modifiers ENUM IDENTIFIER enum-base enum-body
enum-declaration -> .enum-modifiers ENUM IDENTIFIER enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER enum-base enum-body SEMICOLON
enum-declaration -> .enum-modifiers ENUM IDENTIFIER enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER enum-base enum-body SEMICOLON
enum-declaration -> .attributes enum-modifiers ENUM IDENTIFIER enum-body SEMICOLON
enum-declaration -> .attributes enum-modifiers ENUM IDENTIFIER enum-base enum-body
enum-declaration -> .attributes enum-modifiers ENUM IDENTIFIER enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> .attributes DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> .enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> .DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
delegate-declaration -> .enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
delegate-declaration -> .attributes DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
delegate-declaration -> .attributes enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> .attributes enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
enum-modifiers -> .enum-modifier
enum-modifiers -> .enum-modifiers enum-modifier
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
enum-modifier -> .NEW
enum-modifier -> .PUBLIC
enum-modifier -> .PROTECTED
enum-modifier -> .INTERNAL
enum-modifier -> .PRIVATE 
transitions ->  {"EOF":23,"e":24,"attributes":4,"interface-declaration":5,"enum-declaration":6,"delegate-declaration":7,"block":8,"attribute-sections":9,"INTERFACE":10,"enum-modifiers":11,"ENUM":12,"DELEGATE":13,"OPEN_BRACE":14,"attribute-section":15,"enum-modifier":16,"OPEN_BRACKET":17,"NEW":18,"PUBLIC":19,"PROTECTED":20,"INTERNAL":21,"PRIVATE":22}

item set 3 
es -> e . 
transitions ->  {}

item set 4 
e -> attributes .
interface-declaration -> attributes .INTERFACE IDENTIFIER interface-body
interface-declaration -> attributes .enum-modifiers INTERFACE IDENTIFIER interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER interface-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER interface-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER interface-base interface-body SEMICOLON
interface-declaration -> attributes .enum-modifiers INTERFACE IDENTIFIER interface-body SEMICOLON
interface-declaration -> attributes .enum-modifiers INTERFACE IDENTIFIER interface-base interface-body
interface-declaration -> attributes .enum-modifiers INTERFACE IDENTIFIER interface-base interface-body SEMICOLON
enum-declaration -> attributes .ENUM IDENTIFIER enum-body
enum-declaration -> attributes .enum-modifiers ENUM IDENTIFIER enum-body
enum-declaration -> attributes .ENUM IDENTIFIER enum-base enum-body
enum-declaration -> attributes .ENUM IDENTIFIER enum-body SEMICOLON
enum-declaration -> attributes .ENUM IDENTIFIER enum-base enum-body SEMICOLON
enum-declaration -> attributes .enum-modifiers ENUM IDENTIFIER enum-body SEMICOLON
enum-declaration -> attributes .enum-modifiers ENUM IDENTIFIER enum-base enum-body
enum-declaration -> attributes .enum-modifiers ENUM IDENTIFIER enum-base enum-body SEMICOLON
delegate-declaration -> attributes .DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes .DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes .enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes .enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
enum-modifiers -> .enum-modifier
enum-modifiers -> .enum-modifiers enum-modifier
enum-modifier -> .NEW
enum-modifier -> .PUBLIC
enum-modifier -> .PROTECTED
enum-modifier -> .INTERNAL
enum-modifier -> .PRIVATE 
transitions ->  {"INTERFACE":25,"enum-modifiers":26,"ENUM":27,"DELEGATE":28,"enum-modifier":16,"NEW":18,"PUBLIC":19,"PROTECTED":20,"INTERNAL":21,"PRIVATE":22}

item set 5 
e -> interface-declaration . 
transitions ->  {}

item set 6 
e -> enum-declaration . 
transitions ->  {}

item set 7 
e -> delegate-declaration . 
transitions ->  {}

item set 8 
e -> block . 
transitions ->  {}

item set 9 
attributes -> attribute-sections .
attribute-sections -> attribute-sections .attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attribute-section":29,"OPEN_BRACKET":17}

item set 10 
interface-declaration -> INTERFACE .IDENTIFIER interface-body
interface-declaration -> INTERFACE .IDENTIFIER interface-base interface-body
interface-declaration -> INTERFACE .IDENTIFIER interface-body SEMICOLON
interface-declaration -> INTERFACE .IDENTIFIER interface-base interface-body SEMICOLON 
transitions ->  {"IDENTIFIER":30}

item set 11 
interface-declaration -> enum-modifiers .INTERFACE IDENTIFIER interface-body
interface-declaration -> enum-modifiers .INTERFACE IDENTIFIER interface-base interface-body
interface-declaration -> enum-modifiers .INTERFACE IDENTIFIER interface-body SEMICOLON
interface-declaration -> enum-modifiers .INTERFACE IDENTIFIER interface-base interface-body SEMICOLON
enum-declaration -> enum-modifiers .ENUM IDENTIFIER enum-body
enum-declaration -> enum-modifiers .ENUM IDENTIFIER enum-base enum-body
enum-declaration -> enum-modifiers .ENUM IDENTIFIER enum-body SEMICOLON
enum-declaration -> enum-modifiers .ENUM IDENTIFIER enum-base enum-body SEMICOLON
delegate-declaration -> enum-modifiers .DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> enum-modifiers .DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
enum-modifiers -> enum-modifiers .enum-modifier
enum-modifier -> .NEW
enum-modifier -> .PUBLIC
enum-modifier -> .PROTECTED
enum-modifier -> .INTERNAL
enum-modifier -> .PRIVATE 
transitions ->  {"INTERFACE":31,"ENUM":32,"DELEGATE":33,"enum-modifier":34,"NEW":18,"PUBLIC":19,"PROTECTED":20,"INTERNAL":21,"PRIVATE":22}

item set 12 
enum-declaration -> ENUM .IDENTIFIER enum-body
enum-declaration -> ENUM .IDENTIFIER enum-base enum-body
enum-declaration -> ENUM .IDENTIFIER enum-body SEMICOLON
enum-declaration -> ENUM .IDENTIFIER enum-base enum-body SEMICOLON 
transitions ->  {"IDENTIFIER":35}

item set 13 
delegate-declaration -> DELEGATE .return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> DELEGATE .return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
return-type -> .VOID
return-type -> .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"return-type":36,"VOID":37,"type":38,"value-type":39,"reference-type":40,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 14 
block -> OPEN_BRACE .CLOSE_BRACE
block -> OPEN_BRACE .statement-list CLOSE_BRACE
statement-list -> .statement
statement-list -> .statement-list statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_BRACE":70,"statement-list":71,"statement":72,"labeled-statement":73,"declaration-statement":74,"embedded-statement":75,"IDENTIFIER":76,"local-variable-declaration":77,"local-constant-declaration":78,"block":79,"empty-statement":80,"expression-statement":81,"selection-statement":82,"iteration-statement":83,"jump-statement":84,"try-statement":85,"checked-statement":86,"unchecked-statement":87,"lock-statement":88,"using-statement":89,"type":90,"CONST":91,"OPEN_BRACE":14,"SEMICOLON":92,"statement-expression":93,"if-statement":94,"switch-statement":95,"while-statement":96,"do-statement":97,"for-statement":98,"foreach-statement":99,"break-statement":100,"continue-statement":101,"goto-statement":102,"return-statement":103,"throw-statement":104,"TRY":105,"CHECKED":106,"UNCHECKED":107,"LOCK":108,"USING":109,"value-type":39,"reference-type":40,"invocation-expression":110,"object-creation-expression":111,"assignment":112,"post-increment-expression":113,"post-decrement-expression":114,"pre-increment-expression":115,"pre-decrement-expression":116,"IF":117,"SWITCH":118,"WHILE":119,"DO":120,"FOR":121,"FOREACH":122,"BREAK":123,"CONTINUE":124,"GOTO":125,"RETURN":126,"THROW":127,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"primary-expression":128,"NEW":129,"unary-expression":130,"OP_INC":131,"OP_DEC":132,"type-name":47,"simple-type":48,"OBJECT":133,"STRING":134,"non-array-type":51,"primary-no-array-creation-expression":135,"array-creation-expression":136,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"cast-expression":142,"namespace-or-type-name":52,"numeric-type":53,"BOOL":143,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"element-access":148,"this-access":149,"base-access":150,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"OPEN_PARENS":156,"integral-type":56,"floating-point-type":57,"DECIMAL":157,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"SBYTE":168,"BYTE":169,"SHORT":170,"USHORT":171,"INT":172,"UINT":173,"LONG":174,"ULONG":175,"CHAR":176,"FLOAT":177,"DOUBLE":178,"TRUE":179,"FALSE":180}

item set 15 
attribute-sections -> attribute-section . 
transitions ->  {}

item set 16 
enum-modifiers -> enum-modifier . 
transitions ->  {}

item set 17 
attribute-section -> OPEN_BRACKET .attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-list COMMA CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
attribute-list -> .attribute
attribute-list -> .attribute-list COMMA attribute
attribute-target-specifier -> .attribute-target COLON
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-target -> .FIELD
attribute-target -> .EVENT
attribute-target -> .METHOD
attribute-target -> .PARAM
attribute-target -> .PROPERTY
attribute-target -> .RETURN
attribute-target -> .TYPE
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER 
transitions ->  {"attribute-list":181,"attribute-target-specifier":182,"attribute":183,"attribute-target":184,"attribute-name":185,"FIELD":186,"EVENT":187,"METHOD":188,"PARAM":189,"PROPERTY":190,"RETURN":191,"TYPE":192,"type-name":193,"namespace-or-type-name":52,"IDENTIFIER":55}

item set 18 
enum-modifier -> NEW . 
transitions ->  {}

item set 19 
enum-modifier -> PUBLIC . 
transitions ->  {}

item set 20 
enum-modifier -> PROTECTED . 
transitions ->  {}

item set 21 
enum-modifier -> INTERNAL . 
transitions ->  {}

item set 22 
enum-modifier -> PRIVATE . 
transitions ->  {}

item set 23 
compilationUnit -> es EOF . 
transitions ->  {}

item set 24 
es -> es e . 
transitions ->  {}

item set 25 
interface-declaration -> attributes INTERFACE .IDENTIFIER interface-body
interface-declaration -> attributes INTERFACE .IDENTIFIER interface-base interface-body
interface-declaration -> attributes INTERFACE .IDENTIFIER interface-body SEMICOLON
interface-declaration -> attributes INTERFACE .IDENTIFIER interface-base interface-body SEMICOLON 
transitions ->  {"IDENTIFIER":194}

item set 26 
interface-declaration -> attributes enum-modifiers .INTERFACE IDENTIFIER interface-body
interface-declaration -> attributes enum-modifiers .INTERFACE IDENTIFIER interface-body SEMICOLON
interface-declaration -> attributes enum-modifiers .INTERFACE IDENTIFIER interface-base interface-body
interface-declaration -> attributes enum-modifiers .INTERFACE IDENTIFIER interface-base interface-body SEMICOLON
enum-declaration -> attributes enum-modifiers .ENUM IDENTIFIER enum-body
enum-declaration -> attributes enum-modifiers .ENUM IDENTIFIER enum-body SEMICOLON
enum-declaration -> attributes enum-modifiers .ENUM IDENTIFIER enum-base enum-body
enum-declaration -> attributes enum-modifiers .ENUM IDENTIFIER enum-base enum-body SEMICOLON
delegate-declaration -> attributes enum-modifiers .DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes enum-modifiers .DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
enum-modifiers -> enum-modifiers .enum-modifier
enum-modifier -> .NEW
enum-modifier -> .PUBLIC
enum-modifier -> .PROTECTED
enum-modifier -> .INTERNAL
enum-modifier -> .PRIVATE 
transitions ->  {"INTERFACE":195,"ENUM":196,"DELEGATE":197,"enum-modifier":34,"NEW":18,"PUBLIC":19,"PROTECTED":20,"INTERNAL":21,"PRIVATE":22}

item set 27 
enum-declaration -> attributes ENUM .IDENTIFIER enum-body
enum-declaration -> attributes ENUM .IDENTIFIER enum-base enum-body
enum-declaration -> attributes ENUM .IDENTIFIER enum-body SEMICOLON
enum-declaration -> attributes ENUM .IDENTIFIER enum-base enum-body SEMICOLON 
transitions ->  {"IDENTIFIER":198}

item set 28 
delegate-declaration -> attributes DELEGATE .return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes DELEGATE .return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
return-type -> .VOID
return-type -> .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"return-type":199,"VOID":37,"type":38,"value-type":39,"reference-type":40,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 29 
attribute-sections -> attribute-sections attribute-section . 
transitions ->  {}

item set 30 
interface-declaration -> INTERFACE IDENTIFIER .interface-body
interface-declaration -> INTERFACE IDENTIFIER .interface-base interface-body
interface-declaration -> INTERFACE IDENTIFIER .interface-body SEMICOLON
interface-declaration -> INTERFACE IDENTIFIER .interface-base interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE
interface-base -> .interface-type-list
interface-type-list -> .interface-type
interface-type-list -> .interface-type-list COMMA interface-type
interface-type -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER 
transitions ->  {"interface-body":200,"interface-base":201,"OPEN_BRACE":202,"interface-type-list":203,"interface-type":204,"type-name":205,"namespace-or-type-name":52,"IDENTIFIER":55}

item set 31 
interface-declaration -> enum-modifiers INTERFACE .IDENTIFIER interface-body
interface-declaration -> enum-modifiers INTERFACE .IDENTIFIER interface-base interface-body
interface-declaration -> enum-modifiers INTERFACE .IDENTIFIER interface-body SEMICOLON
interface-declaration -> enum-modifiers INTERFACE .IDENTIFIER interface-base interface-body SEMICOLON 
transitions ->  {"IDENTIFIER":206}

item set 32 
enum-declaration -> enum-modifiers ENUM .IDENTIFIER enum-body
enum-declaration -> enum-modifiers ENUM .IDENTIFIER enum-base enum-body
enum-declaration -> enum-modifiers ENUM .IDENTIFIER enum-body SEMICOLON
enum-declaration -> enum-modifiers ENUM .IDENTIFIER enum-base enum-body SEMICOLON 
transitions ->  {"IDENTIFIER":207}

item set 33 
delegate-declaration -> enum-modifiers DELEGATE .return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> enum-modifiers DELEGATE .return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
return-type -> .VOID
return-type -> .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"return-type":208,"VOID":37,"type":38,"value-type":39,"reference-type":40,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 34 
enum-modifiers -> enum-modifiers enum-modifier . 
transitions ->  {}

item set 35 
enum-declaration -> ENUM IDENTIFIER .enum-body
enum-declaration -> ENUM IDENTIFIER .enum-base enum-body
enum-declaration -> ENUM IDENTIFIER .enum-body SEMICOLON
enum-declaration -> ENUM IDENTIFIER .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON integral-type 
transitions ->  {"enum-body":209,"enum-base":210,"OPEN_BRACE":211,"COLON":212}

item set 36 
delegate-declaration -> DELEGATE return-type .IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> DELEGATE return-type .IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"IDENTIFIER":213}

item set 37 
return-type -> VOID . 
transitions ->  {}

item set 38 
return-type -> type .
non-array-type -> type . 
transitions ->  {}

item set 39 
type -> value-type . 
transitions ->  {}

item set 40 
type -> reference-type . 
transitions ->  {}

item set 41 
value-type -> struct-type . 
transitions ->  {}

item set 42 
value-type -> enum-type . 
transitions ->  {}

item set 43 
reference-type -> class-type . 
transitions ->  {}

item set 44 
reference-type -> interface-type . 
transitions ->  {}

item set 45 
reference-type -> array-type . 
transitions ->  {}

item set 46 
reference-type -> delegate-type . 
transitions ->  {}

item set 47 
struct-type -> type-name .
enum-type -> type-name .
class-type -> type-name .
interface-type -> type-name .
delegate-type -> type-name . 
transitions ->  {}

item set 48 
struct-type -> simple-type . 
transitions ->  {}

item set 49 
class-type -> OBJECT . 
transitions ->  {}

item set 50 
class-type -> STRING . 
transitions ->  {}

item set 51 
array-type -> non-array-type .rank-specifiers
rank-specifiers -> .rank-specifier
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET 
transitions ->  {"rank-specifiers":214,"rank-specifier":215,"OPEN_BRACKET":216}

item set 52 
type-name -> namespace-or-type-name .
namespace-or-type-name -> namespace-or-type-name .DOT IDENTIFIER 
transitions ->  {"DOT":217}

item set 53 
simple-type -> numeric-type . 
transitions ->  {}

item set 54 
simple-type -> BOOL . 
transitions ->  {}

item set 55 
namespace-or-type-name -> IDENTIFIER . 
transitions ->  {}

item set 56 
numeric-type -> integral-type . 
transitions ->  {}

item set 57 
numeric-type -> floating-point-type . 
transitions ->  {}

item set 58 
numeric-type -> DECIMAL . 
transitions ->  {}

item set 59 
integral-type -> SBYTE . 
transitions ->  {}

item set 60 
integral-type -> BYTE . 
transitions ->  {}

item set 61 
integral-type -> SHORT . 
transitions ->  {}

item set 62 
integral-type -> USHORT . 
transitions ->  {}

item set 63 
integral-type -> INT . 
transitions ->  {}

item set 64 
integral-type -> UINT . 
transitions ->  {}

item set 65 
integral-type -> LONG . 
transitions ->  {}

item set 66 
integral-type -> ULONG . 
transitions ->  {}

item set 67 
integral-type -> CHAR . 
transitions ->  {}

item set 68 
floating-point-type -> FLOAT . 
transitions ->  {}

item set 69 
floating-point-type -> DOUBLE . 
transitions ->  {}

item set 70 
block -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 71 
block -> OPEN_BRACE statement-list .CLOSE_BRACE
statement-list -> statement-list .statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_BRACE":218,"statement":219,"labeled-statement":73,"declaration-statement":74,"embedded-statement":75,"IDENTIFIER":76,"local-variable-declaration":77,"local-constant-declaration":78,"block":79,"empty-statement":80,"expression-statement":81,"selection-statement":82,"iteration-statement":83,"jump-statement":84,"try-statement":85,"checked-statement":86,"unchecked-statement":87,"lock-statement":88,"using-statement":89,"type":90,"CONST":91,"OPEN_BRACE":14,"SEMICOLON":92,"statement-expression":93,"if-statement":94,"switch-statement":95,"while-statement":96,"do-statement":97,"for-statement":98,"foreach-statement":99,"break-statement":100,"continue-statement":101,"goto-statement":102,"return-statement":103,"throw-statement":104,"TRY":105,"CHECKED":106,"UNCHECKED":107,"LOCK":108,"USING":109,"value-type":39,"reference-type":40,"invocation-expression":110,"object-creation-expression":111,"assignment":112,"post-increment-expression":113,"post-decrement-expression":114,"pre-increment-expression":115,"pre-decrement-expression":116,"IF":117,"SWITCH":118,"WHILE":119,"DO":120,"FOR":121,"FOREACH":122,"BREAK":123,"CONTINUE":124,"GOTO":125,"RETURN":126,"THROW":127,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"primary-expression":128,"NEW":129,"unary-expression":130,"OP_INC":131,"OP_DEC":132,"type-name":47,"simple-type":48,"OBJECT":133,"STRING":134,"non-array-type":51,"primary-no-array-creation-expression":135,"array-creation-expression":136,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"cast-expression":142,"namespace-or-type-name":52,"numeric-type":53,"BOOL":143,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"element-access":148,"this-access":149,"base-access":150,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"OPEN_PARENS":156,"integral-type":56,"floating-point-type":57,"DECIMAL":157,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"SBYTE":168,"BYTE":169,"SHORT":170,"USHORT":171,"INT":172,"UINT":173,"LONG":174,"ULONG":175,"CHAR":176,"FLOAT":177,"DOUBLE":178,"TRUE":179,"FALSE":180}

item set 72 
statement-list -> statement . 
transitions ->  {}

item set 73 
statement -> labeled-statement . 
transitions ->  {}

item set 74 
statement -> declaration-statement . 
transitions ->  {}

item set 75 
statement -> embedded-statement . 
transitions ->  {}

item set 76 
labeled-statement -> IDENTIFIER .COLON statement
namespace-or-type-name -> IDENTIFIER .
simple-name -> IDENTIFIER . 
transitions ->  {"COLON":220}

item set 77 
declaration-statement -> local-variable-declaration .SEMICOLON 
transitions ->  {"SEMICOLON":221}

item set 78 
declaration-statement -> local-constant-declaration .SEMICOLON 
transitions ->  {"SEMICOLON":222}

item set 79 
embedded-statement -> block . 
transitions ->  {}

item set 80 
embedded-statement -> empty-statement . 
transitions ->  {}

item set 81 
embedded-statement -> expression-statement . 
transitions ->  {}

item set 82 
embedded-statement -> selection-statement . 
transitions ->  {}

item set 83 
embedded-statement -> iteration-statement . 
transitions ->  {}

item set 84 
embedded-statement -> jump-statement . 
transitions ->  {}

item set 85 
embedded-statement -> try-statement . 
transitions ->  {}

item set 86 
embedded-statement -> checked-statement . 
transitions ->  {}

item set 87 
embedded-statement -> unchecked-statement . 
transitions ->  {}

item set 88 
embedded-statement -> lock-statement . 
transitions ->  {}

item set 89 
embedded-statement -> using-statement . 
transitions ->  {}

item set 90 
local-variable-declaration -> type .local-variable-declarators
non-array-type -> type .
local-variable-declarators -> .local-variable-declarator
local-variable-declarators -> .local-variable-declarators COMMA local-variable-declarator
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
local-variable -> .
local-variable -> .IDENTIFIER 
transitions ->  {"local-variable-declarators":223,"local-variable-declarator":224,"local-variable":225,"IDENTIFIER":226}

item set 91 
local-constant-declaration -> CONST .type constant-declarators
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":227,"value-type":39,"reference-type":40,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 92 
empty-statement -> SEMICOLON . 
transitions ->  {}

item set 93 
expression-statement -> statement-expression .SEMICOLON 
transitions ->  {"SEMICOLON":228}

item set 94 
selection-statement -> if-statement . 
transitions ->  {}

item set 95 
selection-statement -> switch-statement . 
transitions ->  {}

item set 96 
iteration-statement -> while-statement . 
transitions ->  {}

item set 97 
iteration-statement -> do-statement . 
transitions ->  {}

item set 98 
iteration-statement -> for-statement . 
transitions ->  {}

item set 99 
iteration-statement -> foreach-statement . 
transitions ->  {}

item set 100 
jump-statement -> break-statement . 
transitions ->  {}

item set 101 
jump-statement -> continue-statement . 
transitions ->  {}

item set 102 
jump-statement -> goto-statement . 
transitions ->  {}

item set 103 
jump-statement -> return-statement . 
transitions ->  {}

item set 104 
jump-statement -> throw-statement . 
transitions ->  {}

item set 105 
try-statement -> TRY .block catch-clauses
try-statement -> TRY .block finally-clause
try-statement -> TRY .block catch-clauses finally-clause
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":229,"OPEN_BRACE":14}

item set 106 
checked-statement -> CHECKED .block
checked-expression -> CHECKED .OPEN_PARENS expression CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":230,"OPEN_PARENS":231,"OPEN_BRACE":14}

item set 107 
unchecked-statement -> UNCHECKED .block
unchecked-expression -> UNCHECKED .OPEN_PARENS expression CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":232,"OPEN_PARENS":233,"OPEN_BRACE":14}

item set 108 
lock-statement -> LOCK .OPEN_PARENS expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":234}

item set 109 
using-statement -> USING .OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":235}

item set 110 
statement-expression -> invocation-expression .
primary-no-array-creation-expression -> invocation-expression . 
transitions ->  {}

item set 111 
statement-expression -> object-creation-expression .
primary-no-array-creation-expression -> object-creation-expression . 
transitions ->  {}

item set 112 
statement-expression -> assignment . 
transitions ->  {}

item set 113 
statement-expression -> post-increment-expression .
primary-no-array-creation-expression -> post-increment-expression . 
transitions ->  {}

item set 114 
statement-expression -> post-decrement-expression .
primary-no-array-creation-expression -> post-decrement-expression . 
transitions ->  {}

item set 115 
statement-expression -> pre-increment-expression .
unary-expression -> pre-increment-expression . 
transitions ->  {}

item set 116 
statement-expression -> pre-decrement-expression .
unary-expression -> pre-decrement-expression . 
transitions ->  {}

item set 117 
if-statement -> IF .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> IF .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement 
transitions ->  {"OPEN_PARENS":236}

item set 118 
switch-statement -> SWITCH .OPEN_PARENS expression CLOSE_PARENS switch-block 
transitions ->  {"OPEN_PARENS":237}

item set 119 
while-statement -> WHILE .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":238}

item set 120 
do-statement -> DO .embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":239,"block":79,"empty-statement":80,"expression-statement":81,"selection-statement":82,"iteration-statement":83,"jump-statement":84,"try-statement":85,"checked-statement":86,"unchecked-statement":87,"lock-statement":88,"using-statement":89,"OPEN_BRACE":14,"SEMICOLON":92,"statement-expression":93,"if-statement":94,"switch-statement":95,"while-statement":96,"do-statement":97,"for-statement":98,"foreach-statement":99,"break-statement":100,"continue-statement":101,"goto-statement":102,"return-statement":103,"throw-statement":104,"TRY":105,"CHECKED":106,"UNCHECKED":107,"LOCK":108,"USING":109,"invocation-expression":110,"object-creation-expression":111,"assignment":112,"post-increment-expression":113,"post-decrement-expression":114,"pre-increment-expression":115,"pre-decrement-expression":116,"IF":117,"SWITCH":118,"WHILE":119,"DO":120,"FOR":121,"FOREACH":122,"BREAK":123,"CONTINUE":124,"GOTO":125,"RETURN":126,"THROW":127,"primary-expression":128,"NEW":129,"unary-expression":130,"OP_INC":131,"OP_DEC":132,"primary-no-array-creation-expression":135,"array-creation-expression":136,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"cast-expression":142,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"element-access":148,"this-access":149,"base-access":150,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"OPEN_PARENS":156,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 121 
for-statement -> FOR .OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":256}

item set 122 
foreach-statement -> FOREACH .OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":257}

item set 123 
break-statement -> BREAK .SEMICOLON 
transitions ->  {"SEMICOLON":258}

item set 124 
continue-statement -> CONTINUE .SEMICOLON 
transitions ->  {"SEMICOLON":259}

item set 125 
goto-statement -> GOTO .IDENTIFIER SEMICOLON
goto-statement -> GOTO .CASE constant-expression SEMICOLON
goto-statement -> GOTO .DEFAULT SEMICOLON 
transitions ->  {"IDENTIFIER":260,"CASE":261,"DEFAULT":262}

item set 126 
return-statement -> RETURN .SEMICOLON
return-statement -> RETURN .expression SEMICOLON
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":263,"expression":264,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 127 
throw-statement -> THROW .SEMICOLON
throw-statement -> THROW .expression SEMICOLON
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":286,"expression":287,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 128 
invocation-expression -> primary-expression .OPEN_PARENS CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
post-increment-expression -> primary-expression .OP_INC
post-decrement-expression -> primary-expression .OP_DEC
unary-expression -> primary-expression .
member-access -> primary-expression .DOT IDENTIFIER 
transitions ->  {"OPEN_PARENS":288,"OP_INC":289,"OP_DEC":290,"DOT":291}

item set 129 
object-creation-expression -> NEW .type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> NEW .type OPEN_PARENS argument-list CLOSE_PARENS
array-creation-expression -> NEW .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> NEW .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> NEW .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> NEW .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> NEW .array-type array-initializer
delegate-creation-expression -> NEW .delegate-type OPEN_PARENS expression CLOSE_PARENS
type -> .value-type
type -> .reference-type
non-array-type -> .type
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
type-name -> .namespace-or-type-name
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
simple-type -> .numeric-type
simple-type -> .BOOL
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":292,"non-array-type":293,"array-type":294,"delegate-type":295,"value-type":39,"reference-type":40,"type-name":47,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"namespace-or-type-name":52,"simple-type":48,"OBJECT":49,"STRING":50,"IDENTIFIER":55,"numeric-type":53,"BOOL":54,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 130 
assignment -> unary-expression .assignment-operator expression
assignment-operator -> .ASSIGN
assignment-operator -> .OP_ADD_ASSIGNMENT
assignment-operator -> .OP_SUB_ASSIGNMENT
assignment-operator -> .OP_MULT_ASSIGNMENT
assignment-operator -> .OP_DIV_ASSIGNMENT
assignment-operator -> .OP_MOD_ASSIGNMENT
assignment-operator -> .OP_AND_ASSIGNMENT
assignment-operator -> .OP_OR_ASSIGNMENT
assignment-operator -> .OP_XOR_ASSIGNMENT
assignment-operator -> .OP_LEFT_SHIFT_ASSIGNMENT
assignment-operator -> .RIGHT_SHIFT_ASSIGNMENT 
transitions ->  {"assignment-operator":296,"ASSIGN":297,"OP_ADD_ASSIGNMENT":298,"OP_SUB_ASSIGNMENT":299,"OP_MULT_ASSIGNMENT":300,"OP_DIV_ASSIGNMENT":301,"OP_MOD_ASSIGNMENT":302,"OP_AND_ASSIGNMENT":303,"OP_OR_ASSIGNMENT":304,"OP_XOR_ASSIGNMENT":305,"OP_LEFT_SHIFT_ASSIGNMENT":306,"RIGHT_SHIFT_ASSIGNMENT":307}

item set 131 
pre-increment-expression -> OP_INC .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":308,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 132 
pre-decrement-expression -> OP_DEC .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":309,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 133 
class-type -> OBJECT .
predefined-type -> OBJECT . 
transitions ->  {}

item set 134 
class-type -> STRING .
predefined-type -> STRING . 
transitions ->  {}

item set 135 
primary-expression -> primary-no-array-creation-expression .
element-access -> primary-no-array-creation-expression .OPEN_BRACKET expression-list CLOSE_BRACKET 
transitions ->  {"OPEN_BRACKET":310}

item set 136 
primary-expression -> array-creation-expression . 
transitions ->  {}

item set 137 
unary-expression -> PLUS .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":311,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 138 
unary-expression -> MINUS .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":312,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 139 
unary-expression -> BANG .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":313,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 140 
unary-expression -> TILDE .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":314,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 141 
unary-expression -> STAR .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":315,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 142 
unary-expression -> cast-expression . 
transitions ->  {}

item set 143 
simple-type -> BOOL .
predefined-type -> BOOL . 
transitions ->  {}

item set 144 
primary-no-array-creation-expression -> literal . 
transitions ->  {}

item set 145 
primary-no-array-creation-expression -> simple-name . 
transitions ->  {}

item set 146 
primary-no-array-creation-expression -> parenthesized-expression . 
transitions ->  {}

item set 147 
primary-no-array-creation-expression -> member-access . 
transitions ->  {}

item set 148 
primary-no-array-creation-expression -> element-access . 
transitions ->  {}

item set 149 
primary-no-array-creation-expression -> this-access . 
transitions ->  {}

item set 150 
primary-no-array-creation-expression -> base-access . 
transitions ->  {}

item set 151 
primary-no-array-creation-expression -> delegate-creation-expression . 
transitions ->  {}

item set 152 
primary-no-array-creation-expression -> typeof-expression . 
transitions ->  {}

item set 153 
primary-no-array-creation-expression -> sizeof-expression . 
transitions ->  {}

item set 154 
primary-no-array-creation-expression -> checked-expression . 
transitions ->  {}

item set 155 
primary-no-array-creation-expression -> unchecked-expression . 
transitions ->  {}

item set 156 
cast-expression -> OPEN_PARENS .type CLOSE_PARENS unary-expression
parenthesized-expression -> OPEN_PARENS .expression CLOSE_PARENS
type -> .value-type
type -> .reference-type
expression -> .conditional-expression
expression -> .assignment
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"type":316,"expression":317,"value-type":39,"reference-type":40,"conditional-expression":265,"assignment":266,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"conditional-or-expression":267,"unary-expression":268,"type-name":47,"simple-type":48,"OBJECT":133,"STRING":134,"non-array-type":51,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"namespace-or-type-name":52,"numeric-type":53,"BOOL":143,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"IDENTIFIER":318,"integral-type":56,"floating-point-type":57,"DECIMAL":157,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"SBYTE":168,"BYTE":169,"SHORT":170,"USHORT":171,"INT":172,"UINT":173,"LONG":174,"ULONG":175,"CHAR":176,"FLOAT":177,"DOUBLE":178,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 157 
numeric-type -> DECIMAL .
predefined-type -> DECIMAL . 
transitions ->  {}

item set 158 
literal -> BOOLEAN_LITERAL . 
transitions ->  {}

item set 159 
literal -> REAL_LITERAL . 
transitions ->  {}

item set 160 
literal -> INTEGER_LITERAL . 
transitions ->  {}

item set 161 
literal -> STRING_LITERAL . 
transitions ->  {}

item set 162 
literal -> CHARACTER_LITERAL . 
transitions ->  {}

item set 163 
literal -> NULL . 
transitions ->  {}

item set 164 
member-access -> predefined-type .DOT IDENTIFIER 
transitions ->  {"DOT":319}

item set 165 
this-access -> THIS . 
transitions ->  {}

item set 166 
base-access -> base .DOT IDENTIFIER
base-access -> base .OPEN_BRACKET expression-list CLOSE_BRACKET 
transitions ->  {"DOT":320,"OPEN_BRACKET":321}

item set 167 
typeof-expression -> TYPEOF .OPEN_PARENS type CLOSE_PARENS
typeof-expression -> TYPEOF .OPEN_PARENS VOID CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":322}

item set 168 
integral-type -> SBYTE .
predefined-type -> SBYTE . 
transitions ->  {}

item set 169 
integral-type -> BYTE .
predefined-type -> BYTE . 
transitions ->  {}

item set 170 
integral-type -> SHORT .
predefined-type -> SHORT . 
transitions ->  {}

item set 171 
integral-type -> USHORT .
predefined-type -> USHORT . 
transitions ->  {}

item set 172 
integral-type -> INT .
predefined-type -> INT . 
transitions ->  {}

item set 173 
integral-type -> UINT .
predefined-type -> UINT . 
transitions ->  {}

item set 174 
integral-type -> LONG .
predefined-type -> LONG . 
transitions ->  {}

item set 175 
integral-type -> ULONG .
predefined-type -> ULONG . 
transitions ->  {}

item set 176 
integral-type -> CHAR .
predefined-type -> CHAR . 
transitions ->  {}

item set 177 
floating-point-type -> FLOAT .
predefined-type -> FLOAT . 
transitions ->  {}

item set 178 
floating-point-type -> DOUBLE .
predefined-type -> DOUBLE . 
transitions ->  {}

item set 179 
BOOLEAN_LITERAL -> TRUE . 
transitions ->  {}

item set 180 
BOOLEAN_LITERAL -> FALSE . 
transitions ->  {}

item set 181 
attribute-section -> OPEN_BRACKET attribute-list .CLOSE_BRACKET
attribute-section -> OPEN_BRACKET attribute-list .COMMA CLOSE_BRACKET
attribute-list -> attribute-list .COMMA attribute 
transitions ->  {"CLOSE_BRACKET":323,"COMMA":324}

item set 182 
attribute-section -> OPEN_BRACKET attribute-target-specifier .attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET attribute-target-specifier .attribute-list COMMA CLOSE_BRACKET
attribute-list -> .attribute
attribute-list -> .attribute-list COMMA attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER 
transitions ->  {"attribute-list":325,"attribute":183,"attribute-name":185,"type-name":193,"namespace-or-type-name":52,"IDENTIFIER":55}

item set 183 
attribute-list -> attribute . 
transitions ->  {}

item set 184 
attribute-target-specifier -> attribute-target .COLON 
transitions ->  {"COLON":326}

item set 185 
attribute -> attribute-name .
attribute -> attribute-name .attribute-arguments
attribute-arguments -> .OPEN_PARENS CLOSE_PARENS
attribute-arguments -> .OPEN_PARENS positional-argument-list CLOSE_PARENS
attribute-arguments -> .OPEN_PARENS positional-argument-list COMMA named-argument-list CLOSE_PARENS
attribute-arguments -> .OPEN_PARENS named-argument-list CLOSE_PARENS 
transitions ->  {"attribute-arguments":327,"OPEN_PARENS":328}

item set 186 
attribute-target -> FIELD . 
transitions ->  {}

item set 187 
attribute-target -> EVENT . 
transitions ->  {}

item set 188 
attribute-target -> METHOD . 
transitions ->  {}

item set 189 
attribute-target -> PARAM . 
transitions ->  {}

item set 190 
attribute-target -> PROPERTY . 
transitions ->  {}

item set 191 
attribute-target -> RETURN . 
transitions ->  {}

item set 192 
attribute-target -> TYPE . 
transitions ->  {}

item set 193 
attribute-name -> type-name . 
transitions ->  {}

item set 194 
interface-declaration -> attributes INTERFACE IDENTIFIER .interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER .interface-base interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER .interface-body SEMICOLON
interface-declaration -> attributes INTERFACE IDENTIFIER .interface-base interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE
interface-base -> .interface-type-list
interface-type-list -> .interface-type
interface-type-list -> .interface-type-list COMMA interface-type
interface-type -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER 
transitions ->  {"interface-body":329,"interface-base":330,"OPEN_BRACE":202,"interface-type-list":203,"interface-type":204,"type-name":205,"namespace-or-type-name":52,"IDENTIFIER":55}

item set 195 
interface-declaration -> attributes enum-modifiers INTERFACE .IDENTIFIER interface-body
interface-declaration -> attributes enum-modifiers INTERFACE .IDENTIFIER interface-body SEMICOLON
interface-declaration -> attributes enum-modifiers INTERFACE .IDENTIFIER interface-base interface-body
interface-declaration -> attributes enum-modifiers INTERFACE .IDENTIFIER interface-base interface-body SEMICOLON 
transitions ->  {"IDENTIFIER":331}

item set 196 
enum-declaration -> attributes enum-modifiers ENUM .IDENTIFIER enum-body
enum-declaration -> attributes enum-modifiers ENUM .IDENTIFIER enum-body SEMICOLON
enum-declaration -> attributes enum-modifiers ENUM .IDENTIFIER enum-base enum-body
enum-declaration -> attributes enum-modifiers ENUM .IDENTIFIER enum-base enum-body SEMICOLON 
transitions ->  {"IDENTIFIER":332}

item set 197 
delegate-declaration -> attributes enum-modifiers DELEGATE .return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes enum-modifiers DELEGATE .return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
return-type -> .VOID
return-type -> .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"return-type":333,"VOID":37,"type":38,"value-type":39,"reference-type":40,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 198 
enum-declaration -> attributes ENUM IDENTIFIER .enum-body
enum-declaration -> attributes ENUM IDENTIFIER .enum-base enum-body
enum-declaration -> attributes ENUM IDENTIFIER .enum-body SEMICOLON
enum-declaration -> attributes ENUM IDENTIFIER .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON integral-type 
transitions ->  {"enum-body":334,"enum-base":335,"OPEN_BRACE":211,"COLON":212}

item set 199 
delegate-declaration -> attributes DELEGATE return-type .IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes DELEGATE return-type .IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"IDENTIFIER":336}

item set 200 
interface-declaration -> INTERFACE IDENTIFIER interface-body .
interface-declaration -> INTERFACE IDENTIFIER interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":337}

item set 201 
interface-declaration -> INTERFACE IDENTIFIER interface-base .interface-body
interface-declaration -> INTERFACE IDENTIFIER interface-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":338,"OPEN_BRACE":202}

item set 202 
interface-body -> OPEN_BRACE .CLOSE_BRACE
interface-body -> OPEN_BRACE .interface-member-declarations CLOSE_BRACE
interface-member-declarations -> .interface-member-declaration
interface-member-declarations -> .interface-member-declarations interface-member-declaration
interface-member-declaration -> .interface-method-declaration
interface-member-declaration -> .interface-property-declaration
interface-member-declaration -> .interface-event-declaration
interface-member-declaration -> .interface-indexer-declaration
interface-method-declaration -> .return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
interface-method-declaration -> .attributes return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
interface-method-declaration -> .NEW return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
interface-method-declaration -> .return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
interface-method-declaration -> .NEW return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
interface-method-declaration -> .attributes return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
interface-method-declaration -> .attributes NEW return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
interface-method-declaration -> .attributes NEW return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
interface-property-declaration -> .type IDENTIFIER OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .attributes type IDENTIFIER OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .NEW type IDENTIFIER OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .attributes NEW type IDENTIFIER OPEN_BRACE interface-accessors CLOSE_BRACE
interface-event-declaration -> .EVENT type IDENTIFIER SEMICOLON
interface-event-declaration -> .attributes EVENT type IDENTIFIER SEMICOLON
interface-event-declaration -> .NEW EVENT type IDENTIFIER SEMICOLON
interface-event-declaration -> .attributes NEW EVENT type IDENTIFIER SEMICOLON
interface-indexer-declaration -> .type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .attributes type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .NEW type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .attributes NEW type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
return-type -> .VOID
return-type -> .type
attributes -> .attribute-sections
type -> .value-type
type -> .reference-type
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"CLOSE_BRACE":339,"interface-member-declarations":340,"interface-member-declaration":341,"interface-method-declaration":342,"interface-property-declaration":343,"interface-event-declaration":344,"interface-indexer-declaration":345,"return-type":346,"attributes":347,"NEW":348,"type":349,"EVENT":350,"VOID":37,"attribute-sections":9,"value-type":39,"reference-type":40,"attribute-section":15,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"OPEN_BRACKET":17,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 203 
interface-base -> interface-type-list .
interface-type-list -> interface-type-list .COMMA interface-type 
transitions ->  {"COMMA":351}

item set 204 
interface-type-list -> interface-type . 
transitions ->  {}

item set 205 
interface-type -> type-name . 
transitions ->  {}

item set 206 
interface-declaration -> enum-modifiers INTERFACE IDENTIFIER .interface-body
interface-declaration -> enum-modifiers INTERFACE IDENTIFIER .interface-base interface-body
interface-declaration -> enum-modifiers INTERFACE IDENTIFIER .interface-body SEMICOLON
interface-declaration -> enum-modifiers INTERFACE IDENTIFIER .interface-base interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE
interface-base -> .interface-type-list
interface-type-list -> .interface-type
interface-type-list -> .interface-type-list COMMA interface-type
interface-type -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER 
transitions ->  {"interface-body":352,"interface-base":353,"OPEN_BRACE":202,"interface-type-list":203,"interface-type":204,"type-name":205,"namespace-or-type-name":52,"IDENTIFIER":55}

item set 207 
enum-declaration -> enum-modifiers ENUM IDENTIFIER .enum-body
enum-declaration -> enum-modifiers ENUM IDENTIFIER .enum-base enum-body
enum-declaration -> enum-modifiers ENUM IDENTIFIER .enum-body SEMICOLON
enum-declaration -> enum-modifiers ENUM IDENTIFIER .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON integral-type 
transitions ->  {"enum-body":354,"enum-base":355,"OPEN_BRACE":211,"COLON":212}

item set 208 
delegate-declaration -> enum-modifiers DELEGATE return-type .IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> enum-modifiers DELEGATE return-type .IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"IDENTIFIER":356}

item set 209 
enum-declaration -> ENUM IDENTIFIER enum-body .
enum-declaration -> ENUM IDENTIFIER enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":357}

item set 210 
enum-declaration -> ENUM IDENTIFIER enum-base .enum-body
enum-declaration -> ENUM IDENTIFIER enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":358,"OPEN_BRACE":211}

item set 211 
enum-body -> OPEN_BRACE .CLOSE_BRACE
enum-body -> OPEN_BRACE .enum-member-declarations CLOSE_BRACE
enum-body -> OPEN_BRACE .enum-member-declarations COMMA CLOSE_BRACE
enum-member-declarations -> .enum-member-declaration
enum-member-declarations -> .enum-member-declarations COMMA enum-member-declaration
enum-member-declaration -> .IDENTIFIER
enum-member-declaration -> .attributes IDENTIFIER
enum-member-declaration -> .IDENTIFIER ASSIGN constant-expression
enum-member-declaration -> .attributes IDENTIFIER ASSIGN constant-expression
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACE":359,"enum-member-declarations":360,"enum-member-declaration":361,"IDENTIFIER":362,"attributes":363,"attribute-sections":9,"attribute-section":15,"OPEN_BRACKET":17}

item set 212 
enum-base -> COLON .integral-type
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR 
transitions ->  {"integral-type":364,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67}

item set 213 
delegate-declaration -> DELEGATE return-type IDENTIFIER .OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> DELEGATE return-type IDENTIFIER .OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"OPEN_PARENS":365}

item set 214 
array-type -> non-array-type rank-specifiers .
rank-specifiers -> rank-specifiers .rank-specifier
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET 
transitions ->  {"rank-specifier":366,"OPEN_BRACKET":216}

item set 215 
rank-specifiers -> rank-specifier . 
transitions ->  {}

item set 216 
rank-specifier -> OPEN_BRACKET .CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .dim-separators CLOSE_BRACKET
dim-separators -> .COMMA
dim-separators -> .dim-separators COMMA 
transitions ->  {"CLOSE_BRACKET":367,"dim-separators":368,"COMMA":369}

item set 217 
namespace-or-type-name -> namespace-or-type-name DOT .IDENTIFIER 
transitions ->  {"IDENTIFIER":370}

item set 218 
block -> OPEN_BRACE statement-list CLOSE_BRACE . 
transitions ->  {}

item set 219 
statement-list -> statement-list statement . 
transitions ->  {}

item set 220 
labeled-statement -> IDENTIFIER COLON .statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"statement":371,"labeled-statement":73,"declaration-statement":74,"embedded-statement":75,"IDENTIFIER":76,"local-variable-declaration":77,"local-constant-declaration":78,"block":79,"empty-statement":80,"expression-statement":81,"selection-statement":82,"iteration-statement":83,"jump-statement":84,"try-statement":85,"checked-statement":86,"unchecked-statement":87,"lock-statement":88,"using-statement":89,"type":90,"CONST":91,"OPEN_BRACE":14,"SEMICOLON":92,"statement-expression":93,"if-statement":94,"switch-statement":95,"while-statement":96,"do-statement":97,"for-statement":98,"foreach-statement":99,"break-statement":100,"continue-statement":101,"goto-statement":102,"return-statement":103,"throw-statement":104,"TRY":105,"CHECKED":106,"UNCHECKED":107,"LOCK":108,"USING":109,"value-type":39,"reference-type":40,"invocation-expression":110,"object-creation-expression":111,"assignment":112,"post-increment-expression":113,"post-decrement-expression":114,"pre-increment-expression":115,"pre-decrement-expression":116,"IF":117,"SWITCH":118,"WHILE":119,"DO":120,"FOR":121,"FOREACH":122,"BREAK":123,"CONTINUE":124,"GOTO":125,"RETURN":126,"THROW":127,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"primary-expression":128,"NEW":129,"unary-expression":130,"OP_INC":131,"OP_DEC":132,"type-name":47,"simple-type":48,"OBJECT":133,"STRING":134,"non-array-type":51,"primary-no-array-creation-expression":135,"array-creation-expression":136,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"cast-expression":142,"namespace-or-type-name":52,"numeric-type":53,"BOOL":143,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"element-access":148,"this-access":149,"base-access":150,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"OPEN_PARENS":156,"integral-type":56,"floating-point-type":57,"DECIMAL":157,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"SBYTE":168,"BYTE":169,"SHORT":170,"USHORT":171,"INT":172,"UINT":173,"LONG":174,"ULONG":175,"CHAR":176,"FLOAT":177,"DOUBLE":178,"TRUE":179,"FALSE":180}

item set 221 
declaration-statement -> local-variable-declaration SEMICOLON . 
transitions ->  {}

item set 222 
declaration-statement -> local-constant-declaration SEMICOLON . 
transitions ->  {}

item set 223 
local-variable-declaration -> type local-variable-declarators .
local-variable-declarators -> local-variable-declarators .COMMA local-variable-declarator 
transitions ->  {"COMMA":372}

item set 224 
local-variable-declarators -> local-variable-declarator . 
transitions ->  {}

item set 225 
local-variable-declarator -> local-variable .
local-variable-declarator -> local-variable .ASSIGN local-variable-initializer 
transitions ->  {"ASSIGN":373}

item set 226 
local-variable -> IDENTIFIER . 
transitions ->  {}

item set 227 
local-constant-declaration -> CONST type .constant-declarators
non-array-type -> type .
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarator -> .IDENTIFIER ASSIGN constant-expression 
transitions ->  {"constant-declarators":374,"constant-declarator":375,"IDENTIFIER":376}

item set 228 
expression-statement -> statement-expression SEMICOLON . 
transitions ->  {}

item set 229 
try-statement -> TRY block .catch-clauses
try-statement -> TRY block .finally-clause
try-statement -> TRY block .catch-clauses finally-clause
catch-clauses -> .specific-catch-clauses
catch-clauses -> .general-catch-clause
catch-clauses -> .specific-catch-clauses general-catch-clause
finally-clause -> .FINALLY block
specific-catch-clauses -> .specific-catch-clause
specific-catch-clauses -> .specific-catch-clauses specific-catch-clause
general-catch-clause -> .CATCH block
specific-catch-clause -> .CATCH OPEN_PARENS class-type CLOSE_PARENS block
specific-catch-clause -> .CATCH OPEN_PARENS class-type IDENTIFIER CLOSE_PARENS block 
transitions ->  {"catch-clauses":377,"finally-clause":378,"specific-catch-clauses":379,"general-catch-clause":380,"FINALLY":381,"specific-catch-clause":382,"CATCH":383}

item set 230 
checked-statement -> CHECKED block . 
transitions ->  {}

item set 231 
checked-expression -> CHECKED OPEN_PARENS .expression CLOSE_PARENS
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":384,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 232 
unchecked-statement -> UNCHECKED block . 
transitions ->  {}

item set 233 
unchecked-expression -> UNCHECKED OPEN_PARENS .expression CLOSE_PARENS
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":385,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 234 
lock-statement -> LOCK OPEN_PARENS .expression CLOSE_PARENS embedded-statement
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":386,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 235 
using-statement -> USING OPEN_PARENS .resource-acquisition CLOSE_PARENS embedded-statement
resource-acquisition -> .local-variable-declaration
resource-acquisition -> .expression
local-variable-declaration -> .type local-variable-declarators
expression -> .conditional-expression
expression -> .assignment
type -> .value-type
type -> .reference-type
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"resource-acquisition":387,"local-variable-declaration":388,"expression":389,"type":90,"conditional-expression":265,"assignment":266,"value-type":39,"reference-type":40,"conditional-or-expression":267,"unary-expression":268,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"type-name":47,"simple-type":48,"OBJECT":133,"STRING":134,"non-array-type":51,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"namespace-or-type-name":52,"numeric-type":53,"BOOL":143,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"IDENTIFIER":318,"integral-type":56,"floating-point-type":57,"DECIMAL":157,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"SBYTE":168,"BYTE":169,"SHORT":170,"USHORT":171,"INT":172,"UINT":173,"LONG":174,"ULONG":175,"CHAR":176,"FLOAT":177,"DOUBLE":178,"equality-expression":281,"TRUE":179,"FALSE":180,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 236 
if-statement -> IF OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement
if-statement -> IF OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":390,"expression":391,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 237 
switch-statement -> SWITCH OPEN_PARENS .expression CLOSE_PARENS switch-block
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":392,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 238 
while-statement -> WHILE OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":393,"expression":391,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 239 
do-statement -> DO embedded-statement .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON 
transitions ->  {"WHILE":394}

item set 240 
simple-name -> IDENTIFIER . 
transitions ->  {}

item set 241 
predefined-type -> BOOL . 
transitions ->  {}

item set 242 
predefined-type -> BYTE . 
transitions ->  {}

item set 243 
predefined-type -> CHAR . 
transitions ->  {}

item set 244 
predefined-type -> DECIMAL . 
transitions ->  {}

item set 245 
predefined-type -> DOUBLE . 
transitions ->  {}

item set 246 
predefined-type -> FLOAT . 
transitions ->  {}

item set 247 
predefined-type -> INT . 
transitions ->  {}

item set 248 
predefined-type -> LONG . 
transitions ->  {}

item set 249 
predefined-type -> OBJECT . 
transitions ->  {}

item set 250 
predefined-type -> SBYTE . 
transitions ->  {}

item set 251 
predefined-type -> SHORT . 
transitions ->  {}

item set 252 
predefined-type -> STRING . 
transitions ->  {}

item set 253 
predefined-type -> UINT . 
transitions ->  {}

item set 254 
predefined-type -> ULONG . 
transitions ->  {}

item set 255 
predefined-type -> USHORT . 
transitions ->  {}

item set 256 
for-statement -> FOR OPEN_PARENS .SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-initializer -> .local-variable-declaration
for-initializer -> .statement-expression-list
local-variable-declaration -> .type local-variable-declarators
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"SEMICOLON":395,"for-initializer":396,"local-variable-declaration":397,"statement-expression-list":398,"type":90,"statement-expression":399,"value-type":39,"reference-type":40,"invocation-expression":110,"object-creation-expression":111,"assignment":112,"post-increment-expression":113,"post-decrement-expression":114,"pre-increment-expression":115,"pre-decrement-expression":116,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"primary-expression":128,"NEW":129,"unary-expression":130,"OP_INC":131,"OP_DEC":132,"type-name":47,"simple-type":48,"OBJECT":133,"STRING":134,"non-array-type":51,"primary-no-array-creation-expression":135,"array-creation-expression":136,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"cast-expression":142,"namespace-or-type-name":52,"numeric-type":53,"BOOL":143,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"element-access":148,"this-access":149,"base-access":150,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"OPEN_PARENS":156,"IDENTIFIER":318,"integral-type":56,"floating-point-type":57,"DECIMAL":157,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"SBYTE":168,"BYTE":169,"SHORT":170,"USHORT":171,"INT":172,"UINT":173,"LONG":174,"ULONG":175,"CHAR":176,"FLOAT":177,"DOUBLE":178,"TRUE":179,"FALSE":180}

item set 257 
foreach-statement -> FOREACH OPEN_PARENS .type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":400,"value-type":39,"reference-type":40,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 258 
break-statement -> BREAK SEMICOLON . 
transitions ->  {}

item set 259 
continue-statement -> CONTINUE SEMICOLON . 
transitions ->  {}

item set 260 
goto-statement -> GOTO IDENTIFIER .SEMICOLON 
transitions ->  {"SEMICOLON":401}

item set 261 
goto-statement -> GOTO CASE .constant-expression SEMICOLON
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":402,"expression":403,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 262 
goto-statement -> GOTO DEFAULT .SEMICOLON 
transitions ->  {"SEMICOLON":404}

item set 263 
return-statement -> RETURN SEMICOLON . 
transitions ->  {}

item set 264 
return-statement -> RETURN expression .SEMICOLON 
transitions ->  {"SEMICOLON":405}

item set 265 
expression -> conditional-expression . 
transitions ->  {}

item set 266 
expression -> assignment . 
transitions ->  {}

item set 267 
conditional-expression -> conditional-or-expression .
conditional-expression -> conditional-or-expression .INTERR expression COLON expression
conditional-or-expression -> conditional-or-expression .OP_OR conditional-and-expression 
transitions ->  {"INTERR":406,"OP_OR":407}

item set 268 
assignment -> unary-expression .assignment-operator expression
multiplicative-expression -> unary-expression .
assignment-operator -> .ASSIGN
assignment-operator -> .OP_ADD_ASSIGNMENT
assignment-operator -> .OP_SUB_ASSIGNMENT
assignment-operator -> .OP_MULT_ASSIGNMENT
assignment-operator -> .OP_DIV_ASSIGNMENT
assignment-operator -> .OP_MOD_ASSIGNMENT
assignment-operator -> .OP_AND_ASSIGNMENT
assignment-operator -> .OP_OR_ASSIGNMENT
assignment-operator -> .OP_XOR_ASSIGNMENT
assignment-operator -> .OP_LEFT_SHIFT_ASSIGNMENT
assignment-operator -> .RIGHT_SHIFT_ASSIGNMENT 
transitions ->  {"assignment-operator":296,"ASSIGN":297,"OP_ADD_ASSIGNMENT":298,"OP_SUB_ASSIGNMENT":299,"OP_MULT_ASSIGNMENT":300,"OP_DIV_ASSIGNMENT":301,"OP_MOD_ASSIGNMENT":302,"OP_AND_ASSIGNMENT":303,"OP_OR_ASSIGNMENT":304,"OP_XOR_ASSIGNMENT":305,"OP_LEFT_SHIFT_ASSIGNMENT":306,"RIGHT_SHIFT_ASSIGNMENT":307}

item set 269 
conditional-or-expression -> conditional-and-expression .
conditional-and-expression -> conditional-and-expression .OP_AND inclusive-or-expression 
transitions ->  {"OP_AND":408}

item set 270 
unary-expression -> pre-increment-expression . 
transitions ->  {}

item set 271 
unary-expression -> pre-decrement-expression . 
transitions ->  {}

item set 272 
conditional-and-expression -> inclusive-or-expression .
inclusive-or-expression -> inclusive-or-expression .BITWISE_OR exclusive-or-expression 
transitions ->  {"BITWISE_OR":409}

item set 273 
inclusive-or-expression -> exclusive-or-expression .
exclusive-or-expression -> exclusive-or-expression .CARET and-expression 
transitions ->  {"CARET":410}

item set 274 
primary-no-array-creation-expression -> invocation-expression . 
transitions ->  {}

item set 275 
primary-no-array-creation-expression -> post-increment-expression . 
transitions ->  {}

item set 276 
primary-no-array-creation-expression -> post-decrement-expression . 
transitions ->  {}

item set 277 
primary-no-array-creation-expression -> object-creation-expression . 
transitions ->  {}

item set 278 
exclusive-or-expression -> and-expression .
and-expression -> and-expression .AMP equality-expression 
transitions ->  {"AMP":411}

item set 279 
checked-expression -> CHECKED .OPEN_PARENS expression CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":231}

item set 280 
unchecked-expression -> UNCHECKED .OPEN_PARENS expression CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":233}

item set 281 
and-expression -> equality-expression .
equality-expression -> equality-expression .OP_EQ relational-expression
equality-expression -> equality-expression .OP_NE relational-expression 
transitions ->  {"OP_EQ":412,"OP_NE":413}

item set 282 
equality-expression -> relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":414,"GT":415,"OP_LE":416,"OP_GE":417,"IS":418,"AS":419}

item set 283 
relational-expression -> shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":420,"RIGHT_SHIFT":421}

item set 284 
shift-expression -> additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":422,"MINUS":423}

item set 285 
additive-expression -> multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":424,"DIV":425,"PERCENT":426}

item set 286 
throw-statement -> THROW SEMICOLON . 
transitions ->  {}

item set 287 
throw-statement -> THROW expression .SEMICOLON 
transitions ->  {"SEMICOLON":427}

item set 288 
invocation-expression -> primary-expression OPEN_PARENS .CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .argument-list CLOSE_PARENS
argument-list -> .argument
argument-list -> .argument-list COMMA argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":428,"argument-list":429,"argument":430,"expression":431,"REF":432,"OUT":433,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 289 
post-increment-expression -> primary-expression OP_INC . 
transitions ->  {}

item set 290 
post-decrement-expression -> primary-expression OP_DEC . 
transitions ->  {}

item set 291 
member-access -> primary-expression DOT .IDENTIFIER 
transitions ->  {"IDENTIFIER":434}

item set 292 
object-creation-expression -> NEW type .OPEN_PARENS CLOSE_PARENS
object-creation-expression -> NEW type .OPEN_PARENS argument-list CLOSE_PARENS
non-array-type -> type . 
transitions ->  {"OPEN_PARENS":435}

item set 293 
array-creation-expression -> NEW non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> NEW non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> NEW non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> NEW non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-type -> non-array-type .rank-specifiers
rank-specifiers -> .rank-specifier
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET 
transitions ->  {"OPEN_BRACKET":436,"rank-specifiers":214,"rank-specifier":215}

item set 294 
array-creation-expression -> NEW array-type .array-initializer
reference-type -> array-type .
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE 
transitions ->  {"array-initializer":437,"OPEN_BRACE":438}

item set 295 
delegate-creation-expression -> NEW delegate-type .OPEN_PARENS expression CLOSE_PARENS
reference-type -> delegate-type . 
transitions ->  {"OPEN_PARENS":439}

item set 296 
assignment -> unary-expression assignment-operator .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":440,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 297 
assignment-operator -> ASSIGN . 
transitions ->  {}

item set 298 
assignment-operator -> OP_ADD_ASSIGNMENT . 
transitions ->  {}

item set 299 
assignment-operator -> OP_SUB_ASSIGNMENT . 
transitions ->  {}

item set 300 
assignment-operator -> OP_MULT_ASSIGNMENT . 
transitions ->  {}

item set 301 
assignment-operator -> OP_DIV_ASSIGNMENT . 
transitions ->  {}

item set 302 
assignment-operator -> OP_MOD_ASSIGNMENT . 
transitions ->  {}

item set 303 
assignment-operator -> OP_AND_ASSIGNMENT . 
transitions ->  {}

item set 304 
assignment-operator -> OP_OR_ASSIGNMENT . 
transitions ->  {}

item set 305 
assignment-operator -> OP_XOR_ASSIGNMENT . 
transitions ->  {}

item set 306 
assignment-operator -> OP_LEFT_SHIFT_ASSIGNMENT . 
transitions ->  {}

item set 307 
assignment-operator -> RIGHT_SHIFT_ASSIGNMENT . 
transitions ->  {}

item set 308 
pre-increment-expression -> OP_INC unary-expression . 
transitions ->  {}

item set 309 
pre-decrement-expression -> OP_DEC unary-expression . 
transitions ->  {}

item set 310 
element-access -> primary-no-array-creation-expression OPEN_BRACKET .expression-list CLOSE_BRACKET
expression-list -> .expression
expression-list -> .expression-list COMMA expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression-list":441,"expression":442,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 311 
unary-expression -> PLUS unary-expression . 
transitions ->  {}

item set 312 
unary-expression -> MINUS unary-expression . 
transitions ->  {}

item set 313 
unary-expression -> BANG unary-expression . 
transitions ->  {}

item set 314 
unary-expression -> TILDE unary-expression . 
transitions ->  {}

item set 315 
unary-expression -> STAR unary-expression . 
transitions ->  {}

item set 316 
cast-expression -> OPEN_PARENS type .CLOSE_PARENS unary-expression
non-array-type -> type . 
transitions ->  {"CLOSE_PARENS":443}

item set 317 
parenthesized-expression -> OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":444}

item set 318 
namespace-or-type-name -> IDENTIFIER .
simple-name -> IDENTIFIER . 
transitions ->  {}

item set 319 
member-access -> predefined-type DOT .IDENTIFIER 
transitions ->  {"IDENTIFIER":445}

item set 320 
base-access -> base DOT .IDENTIFIER 
transitions ->  {"IDENTIFIER":446}

item set 321 
base-access -> base OPEN_BRACKET .expression-list CLOSE_BRACKET
expression-list -> .expression
expression-list -> .expression-list COMMA expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression-list":447,"expression":442,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 322 
typeof-expression -> TYPEOF OPEN_PARENS .type CLOSE_PARENS
typeof-expression -> TYPEOF OPEN_PARENS .VOID CLOSE_PARENS
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":448,"VOID":449,"value-type":39,"reference-type":40,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 323 
attribute-section -> OPEN_BRACKET attribute-list CLOSE_BRACKET . 
transitions ->  {}

item set 324 
attribute-section -> OPEN_BRACKET attribute-list COMMA .CLOSE_BRACKET
attribute-list -> attribute-list COMMA .attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER 
transitions ->  {"CLOSE_BRACKET":450,"attribute":451,"attribute-name":185,"type-name":193,"namespace-or-type-name":52,"IDENTIFIER":55}

item set 325 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list .CLOSE_BRACKET
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list .COMMA CLOSE_BRACKET
attribute-list -> attribute-list .COMMA attribute 
transitions ->  {"CLOSE_BRACKET":452,"COMMA":453}

item set 326 
attribute-target-specifier -> attribute-target COLON . 
transitions ->  {}

item set 327 
attribute -> attribute-name attribute-arguments . 
transitions ->  {}

item set 328 
attribute-arguments -> OPEN_PARENS .CLOSE_PARENS
attribute-arguments -> OPEN_PARENS .positional-argument-list CLOSE_PARENS
attribute-arguments -> OPEN_PARENS .positional-argument-list COMMA named-argument-list CLOSE_PARENS
attribute-arguments -> OPEN_PARENS .named-argument-list CLOSE_PARENS
positional-argument-list -> .positional-argument
positional-argument-list -> .positional-argument-list COMMA positional-argument
named-argument-list -> .named-argument
named-argument-list -> .named-argument-list COMMA named-argument
positional-argument -> .attribute-argument-expression
named-argument -> .IDENTIFIER ASSIGN attribute-argument-expression
attribute-argument-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":454,"positional-argument-list":455,"named-argument-list":456,"positional-argument":457,"named-argument":458,"attribute-argument-expression":459,"IDENTIFIER":460,"expression":461,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 329 
interface-declaration -> attributes INTERFACE IDENTIFIER interface-body .
interface-declaration -> attributes INTERFACE IDENTIFIER interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":462}

item set 330 
interface-declaration -> attributes INTERFACE IDENTIFIER interface-base .interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER interface-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":463,"OPEN_BRACE":202}

item set 331 
interface-declaration -> attributes enum-modifiers INTERFACE IDENTIFIER .interface-body
interface-declaration -> attributes enum-modifiers INTERFACE IDENTIFIER .interface-body SEMICOLON
interface-declaration -> attributes enum-modifiers INTERFACE IDENTIFIER .interface-base interface-body
interface-declaration -> attributes enum-modifiers INTERFACE IDENTIFIER .interface-base interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE
interface-base -> .interface-type-list
interface-type-list -> .interface-type
interface-type-list -> .interface-type-list COMMA interface-type
interface-type -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER 
transitions ->  {"interface-body":464,"interface-base":465,"OPEN_BRACE":202,"interface-type-list":203,"interface-type":204,"type-name":205,"namespace-or-type-name":52,"IDENTIFIER":55}

item set 332 
enum-declaration -> attributes enum-modifiers ENUM IDENTIFIER .enum-body
enum-declaration -> attributes enum-modifiers ENUM IDENTIFIER .enum-body SEMICOLON
enum-declaration -> attributes enum-modifiers ENUM IDENTIFIER .enum-base enum-body
enum-declaration -> attributes enum-modifiers ENUM IDENTIFIER .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON integral-type 
transitions ->  {"enum-body":466,"enum-base":467,"OPEN_BRACE":211,"COLON":212}

item set 333 
delegate-declaration -> attributes enum-modifiers DELEGATE return-type .IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes enum-modifiers DELEGATE return-type .IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"IDENTIFIER":468}

item set 334 
enum-declaration -> attributes ENUM IDENTIFIER enum-body .
enum-declaration -> attributes ENUM IDENTIFIER enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":469}

item set 335 
enum-declaration -> attributes ENUM IDENTIFIER enum-base .enum-body
enum-declaration -> attributes ENUM IDENTIFIER enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":470,"OPEN_BRACE":211}

item set 336 
delegate-declaration -> attributes DELEGATE return-type IDENTIFIER .OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes DELEGATE return-type IDENTIFIER .OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"OPEN_PARENS":471}

item set 337 
interface-declaration -> INTERFACE IDENTIFIER interface-body SEMICOLON . 
transitions ->  {}

item set 338 
interface-declaration -> INTERFACE IDENTIFIER interface-base interface-body .
interface-declaration -> INTERFACE IDENTIFIER interface-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":472}

item set 339 
interface-body -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 340 
interface-body -> OPEN_BRACE interface-member-declarations .CLOSE_BRACE
interface-member-declarations -> interface-member-declarations .interface-member-declaration
interface-member-declaration -> .interface-method-declaration
interface-member-declaration -> .interface-property-declaration
interface-member-declaration -> .interface-event-declaration
interface-member-declaration -> .interface-indexer-declaration
interface-method-declaration -> .return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
interface-method-declaration -> .attributes return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
interface-method-declaration -> .NEW return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
interface-method-declaration -> .return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
interface-method-declaration -> .NEW return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
interface-method-declaration -> .attributes return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
interface-method-declaration -> .attributes NEW return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
interface-method-declaration -> .attributes NEW return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
interface-property-declaration -> .type IDENTIFIER OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .attributes type IDENTIFIER OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .NEW type IDENTIFIER OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .attributes NEW type IDENTIFIER OPEN_BRACE interface-accessors CLOSE_BRACE
interface-event-declaration -> .EVENT type IDENTIFIER SEMICOLON
interface-event-declaration -> .attributes EVENT type IDENTIFIER SEMICOLON
interface-event-declaration -> .NEW EVENT type IDENTIFIER SEMICOLON
interface-event-declaration -> .attributes NEW EVENT type IDENTIFIER SEMICOLON
interface-indexer-declaration -> .type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .attributes type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .NEW type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .attributes NEW type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
return-type -> .VOID
return-type -> .type
attributes -> .attribute-sections
type -> .value-type
type -> .reference-type
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"CLOSE_BRACE":473,"interface-member-declaration":474,"interface-method-declaration":342,"interface-property-declaration":343,"interface-event-declaration":344,"interface-indexer-declaration":345,"return-type":346,"attributes":347,"NEW":348,"type":349,"EVENT":350,"VOID":37,"attribute-sections":9,"value-type":39,"reference-type":40,"attribute-section":15,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"OPEN_BRACKET":17,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 341 
interface-member-declarations -> interface-member-declaration . 
transitions ->  {}

item set 342 
interface-member-declaration -> interface-method-declaration . 
transitions ->  {}

item set 343 
interface-member-declaration -> interface-property-declaration . 
transitions ->  {}

item set 344 
interface-member-declaration -> interface-event-declaration . 
transitions ->  {}

item set 345 
interface-member-declaration -> interface-indexer-declaration . 
transitions ->  {}

item set 346 
interface-method-declaration -> return-type .IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
interface-method-declaration -> return-type .IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"IDENTIFIER":475}

item set 347 
interface-method-declaration -> attributes .return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
interface-method-declaration -> attributes .return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
interface-method-declaration -> attributes .NEW return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
interface-method-declaration -> attributes .NEW return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
interface-property-declaration -> attributes .type IDENTIFIER OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> attributes .NEW type IDENTIFIER OPEN_BRACE interface-accessors CLOSE_BRACE
interface-event-declaration -> attributes .EVENT type IDENTIFIER SEMICOLON
interface-event-declaration -> attributes .NEW EVENT type IDENTIFIER SEMICOLON
interface-indexer-declaration -> attributes .type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> attributes .NEW type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
return-type -> .VOID
return-type -> .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"return-type":476,"NEW":477,"type":478,"EVENT":479,"VOID":37,"value-type":39,"reference-type":40,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 348 
interface-method-declaration -> NEW .return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
interface-method-declaration -> NEW .return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
interface-property-declaration -> NEW .type IDENTIFIER OPEN_BRACE interface-accessors CLOSE_BRACE
interface-event-declaration -> NEW .EVENT type IDENTIFIER SEMICOLON
interface-indexer-declaration -> NEW .type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
return-type -> .VOID
return-type -> .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"return-type":480,"type":481,"EVENT":482,"VOID":37,"value-type":39,"reference-type":40,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 349 
interface-property-declaration -> type .IDENTIFIER OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> type .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
return-type -> type .
non-array-type -> type . 
transitions ->  {"IDENTIFIER":483,"THIS":484}

item set 350 
interface-event-declaration -> EVENT .type IDENTIFIER SEMICOLON
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":485,"value-type":39,"reference-type":40,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 351 
interface-type-list -> interface-type-list COMMA .interface-type
interface-type -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER 
transitions ->  {"interface-type":486,"type-name":205,"namespace-or-type-name":52,"IDENTIFIER":55}

item set 352 
interface-declaration -> enum-modifiers INTERFACE IDENTIFIER interface-body .
interface-declaration -> enum-modifiers INTERFACE IDENTIFIER interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":487}

item set 353 
interface-declaration -> enum-modifiers INTERFACE IDENTIFIER interface-base .interface-body
interface-declaration -> enum-modifiers INTERFACE IDENTIFIER interface-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":488,"OPEN_BRACE":202}

item set 354 
enum-declaration -> enum-modifiers ENUM IDENTIFIER enum-body .
enum-declaration -> enum-modifiers ENUM IDENTIFIER enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":489}

item set 355 
enum-declaration -> enum-modifiers ENUM IDENTIFIER enum-base .enum-body
enum-declaration -> enum-modifiers ENUM IDENTIFIER enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":490,"OPEN_BRACE":211}

item set 356 
delegate-declaration -> enum-modifiers DELEGATE return-type IDENTIFIER .OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> enum-modifiers DELEGATE return-type IDENTIFIER .OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"OPEN_PARENS":491}

item set 357 
enum-declaration -> ENUM IDENTIFIER enum-body SEMICOLON . 
transitions ->  {}

item set 358 
enum-declaration -> ENUM IDENTIFIER enum-base enum-body .
enum-declaration -> ENUM IDENTIFIER enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":492}

item set 359 
enum-body -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 360 
enum-body -> OPEN_BRACE enum-member-declarations .CLOSE_BRACE
enum-body -> OPEN_BRACE enum-member-declarations .COMMA CLOSE_BRACE
enum-member-declarations -> enum-member-declarations .COMMA enum-member-declaration 
transitions ->  {"CLOSE_BRACE":493,"COMMA":494}

item set 361 
enum-member-declarations -> enum-member-declaration . 
transitions ->  {}

item set 362 
enum-member-declaration -> IDENTIFIER .
enum-member-declaration -> IDENTIFIER .ASSIGN constant-expression 
transitions ->  {"ASSIGN":495}

item set 363 
enum-member-declaration -> attributes .IDENTIFIER
enum-member-declaration -> attributes .IDENTIFIER ASSIGN constant-expression 
transitions ->  {"IDENTIFIER":496}

item set 364 
enum-base -> COLON integral-type . 
transitions ->  {}

item set 365 
delegate-declaration -> DELEGATE return-type IDENTIFIER OPEN_PARENS .CLOSE_PARENS SEMICOLON
delegate-declaration -> DELEGATE return-type IDENTIFIER OPEN_PARENS .formal-parameter-list CLOSE_PARENS SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .params array-type IDENTIFIER
parameter-array -> .attributes params array-type IDENTIFIER
fixed-parameter -> .type IDENTIFIER
fixed-parameter -> .parameter-modifier type IDENTIFIER
fixed-parameter -> .attributes type IDENTIFIER
fixed-parameter -> .attributes parameter-modifieropt type IDENTIFIER
attributes -> .attribute-sections
type -> .value-type
type -> .reference-type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"CLOSE_PARENS":497,"formal-parameter-list":498,"fixed-parameters":499,"parameter-array":500,"fixed-parameter":501,"params":502,"attributes":503,"type":504,"parameter-modifier":505,"attribute-sections":9,"value-type":39,"reference-type":40,"REF":506,"OUT":507,"attribute-section":15,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"OPEN_BRACKET":17,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 366 
rank-specifiers -> rank-specifiers rank-specifier . 
transitions ->  {}

item set 367 
rank-specifier -> OPEN_BRACKET CLOSE_BRACKET . 
transitions ->  {}

item set 368 
rank-specifier -> OPEN_BRACKET dim-separators .CLOSE_BRACKET
dim-separators -> dim-separators .COMMA 
transitions ->  {"CLOSE_BRACKET":508,"COMMA":509}

item set 369 
dim-separators -> COMMA . 
transitions ->  {}

item set 370 
namespace-or-type-name -> namespace-or-type-name DOT IDENTIFIER . 
transitions ->  {}

item set 371 
labeled-statement -> IDENTIFIER COLON statement . 
transitions ->  {}

item set 372 
local-variable-declarators -> local-variable-declarators COMMA .local-variable-declarator
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
local-variable -> .
local-variable -> .IDENTIFIER 
transitions ->  {"local-variable-declarator":510,"local-variable":225,"IDENTIFIER":226}

item set 373 
local-variable-declarator -> local-variable ASSIGN .local-variable-initializer
local-variable-initializer -> .expression
local-variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"local-variable-initializer":511,"expression":512,"array-initializer":513,"conditional-expression":265,"assignment":266,"OPEN_BRACE":438,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 374 
local-constant-declaration -> CONST type constant-declarators .
constant-declarators -> constant-declarators .COMMA constant-declarator 
transitions ->  {"COMMA":514}

item set 375 
constant-declarators -> constant-declarator . 
transitions ->  {}

item set 376 
constant-declarator -> IDENTIFIER .ASSIGN constant-expression 
transitions ->  {"ASSIGN":515}

item set 377 
try-statement -> TRY block catch-clauses .
try-statement -> TRY block catch-clauses .finally-clause
finally-clause -> .FINALLY block 
transitions ->  {"finally-clause":516,"FINALLY":381}

item set 378 
try-statement -> TRY block finally-clause . 
transitions ->  {}

item set 379 
catch-clauses -> specific-catch-clauses .
catch-clauses -> specific-catch-clauses .general-catch-clause
specific-catch-clauses -> specific-catch-clauses .specific-catch-clause
general-catch-clause -> .CATCH block
specific-catch-clause -> .CATCH OPEN_PARENS class-type CLOSE_PARENS block
specific-catch-clause -> .CATCH OPEN_PARENS class-type IDENTIFIER CLOSE_PARENS block 
transitions ->  {"general-catch-clause":517,"specific-catch-clause":518,"CATCH":383}

item set 380 
catch-clauses -> general-catch-clause . 
transitions ->  {}

item set 381 
finally-clause -> FINALLY .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":519,"OPEN_BRACE":14}

item set 382 
specific-catch-clauses -> specific-catch-clause . 
transitions ->  {}

item set 383 
general-catch-clause -> CATCH .block
specific-catch-clause -> CATCH .OPEN_PARENS class-type CLOSE_PARENS block
specific-catch-clause -> CATCH .OPEN_PARENS class-type IDENTIFIER CLOSE_PARENS block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":520,"OPEN_PARENS":521,"OPEN_BRACE":14}

item set 384 
checked-expression -> CHECKED OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":522}

item set 385 
unchecked-expression -> UNCHECKED OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":523}

item set 386 
lock-statement -> LOCK OPEN_PARENS expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":524}

item set 387 
using-statement -> USING OPEN_PARENS resource-acquisition .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":525}

item set 388 
resource-acquisition -> local-variable-declaration . 
transitions ->  {}

item set 389 
resource-acquisition -> expression . 
transitions ->  {}

item set 390 
if-statement -> IF OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement
if-statement -> IF OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement ELSE embedded-statement 
transitions ->  {"CLOSE_PARENS":526}

item set 391 
boolean-expression -> expression .
boolean-expression -> expression . 
transitions ->  {}

item set 392 
switch-statement -> SWITCH OPEN_PARENS expression .CLOSE_PARENS switch-block 
transitions ->  {"CLOSE_PARENS":527}

item set 393 
while-statement -> WHILE OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":528}

item set 394 
do-statement -> DO embedded-statement WHILE .OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON 
transitions ->  {"OPEN_PARENS":529}

item set 395 
for-statement -> FOR OPEN_PARENS SEMICOLON .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-condition -> .boolean-expression
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":530,"for-condition":531,"boolean-expression":532,"expression":391,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 396 
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":533}

item set 397 
for-initializer -> local-variable-declaration . 
transitions ->  {}

item set 398 
for-initializer -> statement-expression-list .
statement-expression-list -> statement-expression-list .COMMA statement-expression 
transitions ->  {"COMMA":534}

item set 399 
statement-expression-list -> statement-expression . 
transitions ->  {}

item set 400 
foreach-statement -> FOREACH OPEN_PARENS type .IDENTIFIER IN expression CLOSE_PARENS embedded-statement
non-array-type -> type . 
transitions ->  {"IDENTIFIER":535}

item set 401 
goto-statement -> GOTO IDENTIFIER SEMICOLON . 
transitions ->  {}

item set 402 
goto-statement -> GOTO CASE constant-expression .SEMICOLON 
transitions ->  {"SEMICOLON":536}

item set 403 
constant-expression -> expression . 
transitions ->  {}

item set 404 
goto-statement -> GOTO DEFAULT SEMICOLON . 
transitions ->  {}

item set 405 
return-statement -> RETURN expression SEMICOLON . 
transitions ->  {}

item set 406 
conditional-expression -> conditional-or-expression INTERR .expression COLON expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":537,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 407 
conditional-or-expression -> conditional-or-expression OP_OR .conditional-and-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"conditional-and-expression":538,"inclusive-or-expression":272,"exclusive-or-expression":273,"and-expression":278,"equality-expression":281,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285,"unary-expression":539,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 408 
conditional-and-expression -> conditional-and-expression OP_AND .inclusive-or-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"inclusive-or-expression":540,"exclusive-or-expression":273,"and-expression":278,"equality-expression":281,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285,"unary-expression":539,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 409 
inclusive-or-expression -> inclusive-or-expression BITWISE_OR .exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"exclusive-or-expression":541,"and-expression":278,"equality-expression":281,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285,"unary-expression":539,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 410 
exclusive-or-expression -> exclusive-or-expression CARET .and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"and-expression":542,"equality-expression":281,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285,"unary-expression":539,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 411 
and-expression -> and-expression AMP .equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"equality-expression":543,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285,"unary-expression":539,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 412 
equality-expression -> equality-expression OP_EQ .relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"relational-expression":544,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285,"unary-expression":539,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 413 
equality-expression -> equality-expression OP_NE .relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"relational-expression":545,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285,"unary-expression":539,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 414 
relational-expression -> relational-expression LT .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"shift-expression":546,"additive-expression":284,"multiplicative-expression":285,"unary-expression":539,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 415 
relational-expression -> relational-expression GT .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"shift-expression":547,"additive-expression":284,"multiplicative-expression":285,"unary-expression":539,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 416 
relational-expression -> relational-expression OP_LE .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"shift-expression":548,"additive-expression":284,"multiplicative-expression":285,"unary-expression":539,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 417 
relational-expression -> relational-expression OP_GE .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"shift-expression":549,"additive-expression":284,"multiplicative-expression":285,"unary-expression":539,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 418 
relational-expression -> relational-expression IS .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":550,"value-type":39,"reference-type":40,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 419 
relational-expression -> relational-expression AS .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":551,"value-type":39,"reference-type":40,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 420 
shift-expression -> shift-expression OP_LEFT_SHIFT .additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"additive-expression":552,"multiplicative-expression":285,"unary-expression":539,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 421 
shift-expression -> shift-expression RIGHT_SHIFT .additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"additive-expression":553,"multiplicative-expression":285,"unary-expression":539,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 422 
additive-expression -> additive-expression PLUS .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"multiplicative-expression":554,"unary-expression":539,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 423 
additive-expression -> additive-expression MINUS .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"multiplicative-expression":555,"unary-expression":539,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 424 
multiplicative-expression -> multiplicative-expression STAR .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":556,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 425 
multiplicative-expression -> multiplicative-expression DIV .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":557,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 426 
multiplicative-expression -> multiplicative-expression PERCENT .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":558,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 427 
throw-statement -> THROW expression SEMICOLON . 
transitions ->  {}

item set 428 
invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 429 
invocation-expression -> primary-expression OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":559,"COMMA":560}

item set 430 
argument-list -> argument . 
transitions ->  {}

item set 431 
argument -> expression . 
transitions ->  {}

item set 432 
argument -> REF .variable-reference
variable-reference -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"variable-reference":561,"expression":562,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 433 
argument -> OUT .variable-reference
variable-reference -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"variable-reference":563,"expression":562,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 434 
member-access -> primary-expression DOT IDENTIFIER . 
transitions ->  {}

item set 435 
object-creation-expression -> NEW type OPEN_PARENS .CLOSE_PARENS
object-creation-expression -> NEW type OPEN_PARENS .argument-list CLOSE_PARENS
argument-list -> .argument
argument-list -> .argument-list COMMA argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":564,"argument-list":565,"argument":430,"expression":431,"REF":432,"OUT":433,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 436 
array-creation-expression -> NEW non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET
array-creation-expression -> NEW non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> NEW non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> NEW non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET rank-specifiers array-initializer
rank-specifier -> OPEN_BRACKET .CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .dim-separators CLOSE_BRACKET
expression-list -> .expression
expression-list -> .expression-list COMMA expression
dim-separators -> .COMMA
dim-separators -> .dim-separators COMMA
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression-list":566,"CLOSE_BRACKET":367,"dim-separators":368,"expression":442,"COMMA":369,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 437 
array-creation-expression -> NEW array-type array-initializer . 
transitions ->  {}

item set 438 
array-initializer -> OPEN_BRACE .CLOSE_BRACE
array-initializer -> OPEN_BRACE .variable-initializer-list CLOSE_BRACE
array-initializer -> OPEN_BRACE .variable-initializer-list COMMA CLOSE_BRACE
variable-initializer-list -> .variable-initializer
variable-initializer-list -> .variable-initializer-list COMMA variable-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACE":567,"variable-initializer-list":568,"variable-initializer":569,"expression":570,"array-initializer":571,"conditional-expression":265,"assignment":266,"OPEN_BRACE":438,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 439 
delegate-creation-expression -> NEW delegate-type OPEN_PARENS .expression CLOSE_PARENS
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":572,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 440 
assignment -> unary-expression assignment-operator expression . 
transitions ->  {}

item set 441 
element-access -> primary-no-array-creation-expression OPEN_BRACKET expression-list .CLOSE_BRACKET
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":573,"COMMA":574}

item set 442 
expression-list -> expression . 
transitions ->  {}

item set 443 
cast-expression -> OPEN_PARENS type CLOSE_PARENS .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":575,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 444 
parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 445 
member-access -> predefined-type DOT IDENTIFIER . 
transitions ->  {}

item set 446 
base-access -> base DOT IDENTIFIER . 
transitions ->  {}

item set 447 
base-access -> base OPEN_BRACKET expression-list .CLOSE_BRACKET
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":576,"COMMA":574}

item set 448 
typeof-expression -> TYPEOF OPEN_PARENS type .CLOSE_PARENS
non-array-type -> type . 
transitions ->  {"CLOSE_PARENS":577}

item set 449 
typeof-expression -> TYPEOF OPEN_PARENS VOID .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":578}

item set 450 
attribute-section -> OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET . 
transitions ->  {}

item set 451 
attribute-list -> attribute-list COMMA attribute . 
transitions ->  {}

item set 452 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET . 
transitions ->  {}

item set 453 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list COMMA .CLOSE_BRACKET
attribute-list -> attribute-list COMMA .attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER 
transitions ->  {"CLOSE_BRACKET":579,"attribute":451,"attribute-name":185,"type-name":193,"namespace-or-type-name":52,"IDENTIFIER":55}

item set 454 
attribute-arguments -> OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 455 
attribute-arguments -> OPEN_PARENS positional-argument-list .CLOSE_PARENS
attribute-arguments -> OPEN_PARENS positional-argument-list .COMMA named-argument-list CLOSE_PARENS
positional-argument-list -> positional-argument-list .COMMA positional-argument 
transitions ->  {"CLOSE_PARENS":580,"COMMA":581}

item set 456 
attribute-arguments -> OPEN_PARENS named-argument-list .CLOSE_PARENS
named-argument-list -> named-argument-list .COMMA named-argument 
transitions ->  {"CLOSE_PARENS":582,"COMMA":583}

item set 457 
positional-argument-list -> positional-argument . 
transitions ->  {}

item set 458 
named-argument-list -> named-argument . 
transitions ->  {}

item set 459 
positional-argument -> attribute-argument-expression . 
transitions ->  {}

item set 460 
named-argument -> IDENTIFIER .ASSIGN attribute-argument-expression
simple-name -> IDENTIFIER . 
transitions ->  {"ASSIGN":584}

item set 461 
attribute-argument-expression -> expression . 
transitions ->  {}

item set 462 
interface-declaration -> attributes INTERFACE IDENTIFIER interface-body SEMICOLON . 
transitions ->  {}

item set 463 
interface-declaration -> attributes INTERFACE IDENTIFIER interface-base interface-body .
interface-declaration -> attributes INTERFACE IDENTIFIER interface-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":585}

item set 464 
interface-declaration -> attributes enum-modifiers INTERFACE IDENTIFIER interface-body .
interface-declaration -> attributes enum-modifiers INTERFACE IDENTIFIER interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":586}

item set 465 
interface-declaration -> attributes enum-modifiers INTERFACE IDENTIFIER interface-base .interface-body
interface-declaration -> attributes enum-modifiers INTERFACE IDENTIFIER interface-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":587,"OPEN_BRACE":202}

item set 466 
enum-declaration -> attributes enum-modifiers ENUM IDENTIFIER enum-body .
enum-declaration -> attributes enum-modifiers ENUM IDENTIFIER enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":588}

item set 467 
enum-declaration -> attributes enum-modifiers ENUM IDENTIFIER enum-base .enum-body
enum-declaration -> attributes enum-modifiers ENUM IDENTIFIER enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":589,"OPEN_BRACE":211}

item set 468 
delegate-declaration -> attributes enum-modifiers DELEGATE return-type IDENTIFIER .OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes enum-modifiers DELEGATE return-type IDENTIFIER .OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"OPEN_PARENS":590}

item set 469 
enum-declaration -> attributes ENUM IDENTIFIER enum-body SEMICOLON . 
transitions ->  {}

item set 470 
enum-declaration -> attributes ENUM IDENTIFIER enum-base enum-body .
enum-declaration -> attributes ENUM IDENTIFIER enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":591}

item set 471 
delegate-declaration -> attributes DELEGATE return-type IDENTIFIER OPEN_PARENS .CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes DELEGATE return-type IDENTIFIER OPEN_PARENS .formal-parameter-list CLOSE_PARENS SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .params array-type IDENTIFIER
parameter-array -> .attributes params array-type IDENTIFIER
fixed-parameter -> .type IDENTIFIER
fixed-parameter -> .parameter-modifier type IDENTIFIER
fixed-parameter -> .attributes type IDENTIFIER
fixed-parameter -> .attributes parameter-modifieropt type IDENTIFIER
attributes -> .attribute-sections
type -> .value-type
type -> .reference-type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"CLOSE_PARENS":592,"formal-parameter-list":593,"fixed-parameters":499,"parameter-array":500,"fixed-parameter":501,"params":502,"attributes":503,"type":504,"parameter-modifier":505,"attribute-sections":9,"value-type":39,"reference-type":40,"REF":506,"OUT":507,"attribute-section":15,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"OPEN_BRACKET":17,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 472 
interface-declaration -> INTERFACE IDENTIFIER interface-base interface-body SEMICOLON . 
transitions ->  {}

item set 473 
interface-body -> OPEN_BRACE interface-member-declarations CLOSE_BRACE . 
transitions ->  {}

item set 474 
interface-member-declarations -> interface-member-declarations interface-member-declaration . 
transitions ->  {}

item set 475 
interface-method-declaration -> return-type IDENTIFIER .OPEN_PARENS CLOSE_PARENS SEMICOLON
interface-method-declaration -> return-type IDENTIFIER .OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"OPEN_PARENS":594}

item set 476 
interface-method-declaration -> attributes return-type .IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
interface-method-declaration -> attributes return-type .IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"IDENTIFIER":595}

item set 477 
interface-method-declaration -> attributes NEW .return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
interface-method-declaration -> attributes NEW .return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
interface-property-declaration -> attributes NEW .type IDENTIFIER OPEN_BRACE interface-accessors CLOSE_BRACE
interface-event-declaration -> attributes NEW .EVENT type IDENTIFIER SEMICOLON
interface-indexer-declaration -> attributes NEW .type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
return-type -> .VOID
return-type -> .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"return-type":596,"type":597,"EVENT":598,"VOID":37,"value-type":39,"reference-type":40,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 478 
interface-property-declaration -> attributes type .IDENTIFIER OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> attributes type .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
return-type -> type .
non-array-type -> type . 
transitions ->  {"IDENTIFIER":599,"THIS":600}

item set 479 
interface-event-declaration -> attributes EVENT .type IDENTIFIER SEMICOLON
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":601,"value-type":39,"reference-type":40,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 480 
interface-method-declaration -> NEW return-type .IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
interface-method-declaration -> NEW return-type .IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"IDENTIFIER":602}

item set 481 
interface-property-declaration -> NEW type .IDENTIFIER OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> NEW type .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
return-type -> type .
non-array-type -> type . 
transitions ->  {"IDENTIFIER":603,"THIS":604}

item set 482 
interface-event-declaration -> NEW EVENT .type IDENTIFIER SEMICOLON
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":605,"value-type":39,"reference-type":40,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 483 
interface-property-declaration -> type IDENTIFIER .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":606}

item set 484 
interface-indexer-declaration -> type THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACKET":607}

item set 485 
interface-event-declaration -> EVENT type .IDENTIFIER SEMICOLON
non-array-type -> type . 
transitions ->  {"IDENTIFIER":608}

item set 486 
interface-type-list -> interface-type-list COMMA interface-type . 
transitions ->  {}

item set 487 
interface-declaration -> enum-modifiers INTERFACE IDENTIFIER interface-body SEMICOLON . 
transitions ->  {}

item set 488 
interface-declaration -> enum-modifiers INTERFACE IDENTIFIER interface-base interface-body .
interface-declaration -> enum-modifiers INTERFACE IDENTIFIER interface-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":609}

item set 489 
enum-declaration -> enum-modifiers ENUM IDENTIFIER enum-body SEMICOLON . 
transitions ->  {}

item set 490 
enum-declaration -> enum-modifiers ENUM IDENTIFIER enum-base enum-body .
enum-declaration -> enum-modifiers ENUM IDENTIFIER enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":610}

item set 491 
delegate-declaration -> enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS .CLOSE_PARENS SEMICOLON
delegate-declaration -> enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS .formal-parameter-list CLOSE_PARENS SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .params array-type IDENTIFIER
parameter-array -> .attributes params array-type IDENTIFIER
fixed-parameter -> .type IDENTIFIER
fixed-parameter -> .parameter-modifier type IDENTIFIER
fixed-parameter -> .attributes type IDENTIFIER
fixed-parameter -> .attributes parameter-modifieropt type IDENTIFIER
attributes -> .attribute-sections
type -> .value-type
type -> .reference-type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"CLOSE_PARENS":611,"formal-parameter-list":612,"fixed-parameters":499,"parameter-array":500,"fixed-parameter":501,"params":502,"attributes":503,"type":504,"parameter-modifier":505,"attribute-sections":9,"value-type":39,"reference-type":40,"REF":506,"OUT":507,"attribute-section":15,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"OPEN_BRACKET":17,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 492 
enum-declaration -> ENUM IDENTIFIER enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 493 
enum-body -> OPEN_BRACE enum-member-declarations CLOSE_BRACE . 
transitions ->  {}

item set 494 
enum-body -> OPEN_BRACE enum-member-declarations COMMA .CLOSE_BRACE
enum-member-declarations -> enum-member-declarations COMMA .enum-member-declaration
enum-member-declaration -> .IDENTIFIER
enum-member-declaration -> .attributes IDENTIFIER
enum-member-declaration -> .IDENTIFIER ASSIGN constant-expression
enum-member-declaration -> .attributes IDENTIFIER ASSIGN constant-expression
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACE":613,"enum-member-declaration":614,"IDENTIFIER":362,"attributes":363,"attribute-sections":9,"attribute-section":15,"OPEN_BRACKET":17}

item set 495 
enum-member-declaration -> IDENTIFIER ASSIGN .constant-expression
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":615,"expression":403,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 496 
enum-member-declaration -> attributes IDENTIFIER .
enum-member-declaration -> attributes IDENTIFIER .ASSIGN constant-expression 
transitions ->  {"ASSIGN":616}

item set 497 
delegate-declaration -> DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":617}

item set 498 
delegate-declaration -> DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list .CLOSE_PARENS SEMICOLON 
transitions ->  {"CLOSE_PARENS":618}

item set 499 
formal-parameter-list -> fixed-parameters .
formal-parameter-list -> fixed-parameters .COMMA parameter-array
fixed-parameters -> fixed-parameters .COMMA fixed-parameter 
transitions ->  {"COMMA":619}

item set 500 
formal-parameter-list -> parameter-array . 
transitions ->  {}

item set 501 
fixed-parameters -> fixed-parameter . 
transitions ->  {}

item set 502 
parameter-array -> params .array-type IDENTIFIER
array-type -> .non-array-type rank-specifiers
non-array-type -> .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"array-type":620,"non-array-type":51,"type":621,"value-type":39,"reference-type":40,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"delegate-type":46,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 503 
parameter-array -> attributes .params array-type IDENTIFIER
fixed-parameter -> attributes .type IDENTIFIER
fixed-parameter -> attributes .parameter-modifieropt type IDENTIFIER
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"params":622,"type":623,"parameter-modifieropt":624,"value-type":39,"reference-type":40,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 504 
fixed-parameter -> type .IDENTIFIER
non-array-type -> type . 
transitions ->  {"IDENTIFIER":625}

item set 505 
fixed-parameter -> parameter-modifier .type IDENTIFIER
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":626,"value-type":39,"reference-type":40,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 506 
parameter-modifier -> REF . 
transitions ->  {}

item set 507 
parameter-modifier -> OUT . 
transitions ->  {}

item set 508 
rank-specifier -> OPEN_BRACKET dim-separators CLOSE_BRACKET . 
transitions ->  {}

item set 509 
dim-separators -> dim-separators COMMA . 
transitions ->  {}

item set 510 
local-variable-declarators -> local-variable-declarators COMMA local-variable-declarator . 
transitions ->  {}

item set 511 
local-variable-declarator -> local-variable ASSIGN local-variable-initializer . 
transitions ->  {}

item set 512 
local-variable-initializer -> expression . 
transitions ->  {}

item set 513 
local-variable-initializer -> array-initializer . 
transitions ->  {}

item set 514 
constant-declarators -> constant-declarators COMMA .constant-declarator
constant-declarator -> .IDENTIFIER ASSIGN constant-expression 
transitions ->  {"constant-declarator":627,"IDENTIFIER":376}

item set 515 
constant-declarator -> IDENTIFIER ASSIGN .constant-expression
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":628,"expression":403,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 516 
try-statement -> TRY block catch-clauses finally-clause . 
transitions ->  {}

item set 517 
catch-clauses -> specific-catch-clauses general-catch-clause . 
transitions ->  {}

item set 518 
specific-catch-clauses -> specific-catch-clauses specific-catch-clause . 
transitions ->  {}

item set 519 
finally-clause -> FINALLY block . 
transitions ->  {}

item set 520 
general-catch-clause -> CATCH block . 
transitions ->  {}

item set 521 
specific-catch-clause -> CATCH OPEN_PARENS .class-type CLOSE_PARENS block
specific-catch-clause -> CATCH OPEN_PARENS .class-type IDENTIFIER CLOSE_PARENS block
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
type-name -> .namespace-or-type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER 
transitions ->  {"class-type":629,"type-name":630,"OBJECT":49,"STRING":50,"namespace-or-type-name":52,"IDENTIFIER":55}

item set 522 
checked-expression -> CHECKED OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 523 
unchecked-expression -> UNCHECKED OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 524 
lock-statement -> LOCK OPEN_PARENS expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":631,"block":79,"empty-statement":80,"expression-statement":81,"selection-statement":82,"iteration-statement":83,"jump-statement":84,"try-statement":85,"checked-statement":86,"unchecked-statement":87,"lock-statement":88,"using-statement":89,"OPEN_BRACE":14,"SEMICOLON":92,"statement-expression":93,"if-statement":94,"switch-statement":95,"while-statement":96,"do-statement":97,"for-statement":98,"foreach-statement":99,"break-statement":100,"continue-statement":101,"goto-statement":102,"return-statement":103,"throw-statement":104,"TRY":105,"CHECKED":106,"UNCHECKED":107,"LOCK":108,"USING":109,"invocation-expression":110,"object-creation-expression":111,"assignment":112,"post-increment-expression":113,"post-decrement-expression":114,"pre-increment-expression":115,"pre-decrement-expression":116,"IF":117,"SWITCH":118,"WHILE":119,"DO":120,"FOR":121,"FOREACH":122,"BREAK":123,"CONTINUE":124,"GOTO":125,"RETURN":126,"THROW":127,"primary-expression":128,"NEW":129,"unary-expression":130,"OP_INC":131,"OP_DEC":132,"primary-no-array-creation-expression":135,"array-creation-expression":136,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"cast-expression":142,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"element-access":148,"this-access":149,"base-access":150,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"OPEN_PARENS":156,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 525 
using-statement -> USING OPEN_PARENS resource-acquisition CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":632,"block":79,"empty-statement":80,"expression-statement":81,"selection-statement":82,"iteration-statement":83,"jump-statement":84,"try-statement":85,"checked-statement":86,"unchecked-statement":87,"lock-statement":88,"using-statement":89,"OPEN_BRACE":14,"SEMICOLON":92,"statement-expression":93,"if-statement":94,"switch-statement":95,"while-statement":96,"do-statement":97,"for-statement":98,"foreach-statement":99,"break-statement":100,"continue-statement":101,"goto-statement":102,"return-statement":103,"throw-statement":104,"TRY":105,"CHECKED":106,"UNCHECKED":107,"LOCK":108,"USING":109,"invocation-expression":110,"object-creation-expression":111,"assignment":112,"post-increment-expression":113,"post-decrement-expression":114,"pre-increment-expression":115,"pre-decrement-expression":116,"IF":117,"SWITCH":118,"WHILE":119,"DO":120,"FOR":121,"FOREACH":122,"BREAK":123,"CONTINUE":124,"GOTO":125,"RETURN":126,"THROW":127,"primary-expression":128,"NEW":129,"unary-expression":130,"OP_INC":131,"OP_DEC":132,"primary-no-array-creation-expression":135,"array-creation-expression":136,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"cast-expression":142,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"element-access":148,"this-access":149,"base-access":150,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"OPEN_PARENS":156,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 526 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement ELSE embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":633,"block":79,"empty-statement":80,"expression-statement":81,"selection-statement":82,"iteration-statement":83,"jump-statement":84,"try-statement":85,"checked-statement":86,"unchecked-statement":87,"lock-statement":88,"using-statement":89,"OPEN_BRACE":14,"SEMICOLON":92,"statement-expression":93,"if-statement":94,"switch-statement":95,"while-statement":96,"do-statement":97,"for-statement":98,"foreach-statement":99,"break-statement":100,"continue-statement":101,"goto-statement":102,"return-statement":103,"throw-statement":104,"TRY":105,"CHECKED":106,"UNCHECKED":107,"LOCK":108,"USING":109,"invocation-expression":110,"object-creation-expression":111,"assignment":112,"post-increment-expression":113,"post-decrement-expression":114,"pre-increment-expression":115,"pre-decrement-expression":116,"IF":117,"SWITCH":118,"WHILE":119,"DO":120,"FOR":121,"FOREACH":122,"BREAK":123,"CONTINUE":124,"GOTO":125,"RETURN":126,"THROW":127,"primary-expression":128,"NEW":129,"unary-expression":130,"OP_INC":131,"OP_DEC":132,"primary-no-array-creation-expression":135,"array-creation-expression":136,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"cast-expression":142,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"element-access":148,"this-access":149,"base-access":150,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"OPEN_PARENS":156,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 527 
switch-statement -> SWITCH OPEN_PARENS expression CLOSE_PARENS .switch-block
switch-block -> .OPEN_BRACE CLOSE_BRACE
switch-block -> .OPEN_BRACE switch-sections CLOSE_BRACE 
transitions ->  {"switch-block":634,"OPEN_BRACE":635}

item set 528 
while-statement -> WHILE OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":636,"block":79,"empty-statement":80,"expression-statement":81,"selection-statement":82,"iteration-statement":83,"jump-statement":84,"try-statement":85,"checked-statement":86,"unchecked-statement":87,"lock-statement":88,"using-statement":89,"OPEN_BRACE":14,"SEMICOLON":92,"statement-expression":93,"if-statement":94,"switch-statement":95,"while-statement":96,"do-statement":97,"for-statement":98,"foreach-statement":99,"break-statement":100,"continue-statement":101,"goto-statement":102,"return-statement":103,"throw-statement":104,"TRY":105,"CHECKED":106,"UNCHECKED":107,"LOCK":108,"USING":109,"invocation-expression":110,"object-creation-expression":111,"assignment":112,"post-increment-expression":113,"post-decrement-expression":114,"pre-increment-expression":115,"pre-decrement-expression":116,"IF":117,"SWITCH":118,"WHILE":119,"DO":120,"FOR":121,"FOREACH":122,"BREAK":123,"CONTINUE":124,"GOTO":125,"RETURN":126,"THROW":127,"primary-expression":128,"NEW":129,"unary-expression":130,"OP_INC":131,"OP_DEC":132,"primary-no-array-creation-expression":135,"array-creation-expression":136,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"cast-expression":142,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"element-access":148,"this-access":149,"base-access":150,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"OPEN_PARENS":156,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 529 
do-statement -> DO embedded-statement WHILE OPEN_PARENS .boolean-expression CLOSE_PARENS SEMICOLON
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":637,"expression":391,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 530 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_PARENS":638,"for-iterator":639,"statement-expression-list":640,"statement-expression":399,"invocation-expression":110,"object-creation-expression":111,"assignment":112,"post-increment-expression":113,"post-decrement-expression":114,"pre-increment-expression":115,"pre-decrement-expression":116,"primary-expression":128,"NEW":129,"unary-expression":130,"OP_INC":131,"OP_DEC":132,"primary-no-array-creation-expression":135,"array-creation-expression":136,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"cast-expression":142,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"element-access":148,"this-access":149,"base-access":150,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"OPEN_PARENS":156,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 531 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition .SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":641}

item set 532 
for-condition -> boolean-expression . 
transitions ->  {}

item set 533 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-condition -> .boolean-expression
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":642,"for-condition":643,"boolean-expression":532,"expression":391,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 534 
statement-expression-list -> statement-expression-list COMMA .statement-expression
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"statement-expression":644,"invocation-expression":110,"object-creation-expression":111,"assignment":112,"post-increment-expression":113,"post-decrement-expression":114,"pre-increment-expression":115,"pre-decrement-expression":116,"primary-expression":128,"NEW":129,"unary-expression":130,"OP_INC":131,"OP_DEC":132,"primary-no-array-creation-expression":135,"array-creation-expression":136,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"cast-expression":142,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"element-access":148,"this-access":149,"base-access":150,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"OPEN_PARENS":156,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 535 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER .IN expression CLOSE_PARENS embedded-statement 
transitions ->  {"IN":645}

item set 536 
goto-statement -> GOTO CASE constant-expression SEMICOLON . 
transitions ->  {}

item set 537 
conditional-expression -> conditional-or-expression INTERR expression .COLON expression 
transitions ->  {"COLON":646}

item set 538 
conditional-or-expression -> conditional-or-expression OP_OR conditional-and-expression .
conditional-and-expression -> conditional-and-expression .OP_AND inclusive-or-expression 
transitions ->  {"OP_AND":408}

item set 539 
multiplicative-expression -> unary-expression . 
transitions ->  {}

item set 540 
conditional-and-expression -> conditional-and-expression OP_AND inclusive-or-expression .
inclusive-or-expression -> inclusive-or-expression .BITWISE_OR exclusive-or-expression 
transitions ->  {"BITWISE_OR":409}

item set 541 
inclusive-or-expression -> inclusive-or-expression BITWISE_OR exclusive-or-expression .
exclusive-or-expression -> exclusive-or-expression .CARET and-expression 
transitions ->  {"CARET":410}

item set 542 
exclusive-or-expression -> exclusive-or-expression CARET and-expression .
and-expression -> and-expression .AMP equality-expression 
transitions ->  {"AMP":411}

item set 543 
and-expression -> and-expression AMP equality-expression .
equality-expression -> equality-expression .OP_EQ relational-expression
equality-expression -> equality-expression .OP_NE relational-expression 
transitions ->  {"OP_EQ":412,"OP_NE":413}

item set 544 
equality-expression -> equality-expression OP_EQ relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":414,"GT":415,"OP_LE":416,"OP_GE":417,"IS":418,"AS":419}

item set 545 
equality-expression -> equality-expression OP_NE relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":414,"GT":415,"OP_LE":416,"OP_GE":417,"IS":418,"AS":419}

item set 546 
relational-expression -> relational-expression LT shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":420,"RIGHT_SHIFT":421}

item set 547 
relational-expression -> relational-expression GT shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":420,"RIGHT_SHIFT":421}

item set 548 
relational-expression -> relational-expression OP_LE shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":420,"RIGHT_SHIFT":421}

item set 549 
relational-expression -> relational-expression OP_GE shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":420,"RIGHT_SHIFT":421}

item set 550 
relational-expression -> relational-expression IS type .
non-array-type -> type . 
transitions ->  {}

item set 551 
relational-expression -> relational-expression AS type .
non-array-type -> type . 
transitions ->  {}

item set 552 
shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":422,"MINUS":423}

item set 553 
shift-expression -> shift-expression RIGHT_SHIFT additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":422,"MINUS":423}

item set 554 
additive-expression -> additive-expression PLUS multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":424,"DIV":425,"PERCENT":426}

item set 555 
additive-expression -> additive-expression MINUS multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":424,"DIV":425,"PERCENT":426}

item set 556 
multiplicative-expression -> multiplicative-expression STAR unary-expression . 
transitions ->  {}

item set 557 
multiplicative-expression -> multiplicative-expression DIV unary-expression . 
transitions ->  {}

item set 558 
multiplicative-expression -> multiplicative-expression PERCENT unary-expression . 
transitions ->  {}

item set 559 
invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 560 
argument-list -> argument-list COMMA .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument":647,"expression":431,"REF":432,"OUT":433,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 561 
argument -> REF variable-reference . 
transitions ->  {}

item set 562 
variable-reference -> expression . 
transitions ->  {}

item set 563 
argument -> OUT variable-reference . 
transitions ->  {}

item set 564 
object-creation-expression -> NEW type OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 565 
object-creation-expression -> NEW type OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":648,"COMMA":560}

item set 566 
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET rank-specifiers
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET array-initializer
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET rank-specifiers array-initializer
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":649,"COMMA":574}

item set 567 
array-initializer -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 568 
array-initializer -> OPEN_BRACE variable-initializer-list .CLOSE_BRACE
array-initializer -> OPEN_BRACE variable-initializer-list .COMMA CLOSE_BRACE
variable-initializer-list -> variable-initializer-list .COMMA variable-initializer 
transitions ->  {"CLOSE_BRACE":650,"COMMA":651}

item set 569 
variable-initializer-list -> variable-initializer . 
transitions ->  {}

item set 570 
variable-initializer -> expression . 
transitions ->  {}

item set 571 
variable-initializer -> array-initializer . 
transitions ->  {}

item set 572 
delegate-creation-expression -> NEW delegate-type OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":652}

item set 573 
element-access -> primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET . 
transitions ->  {}

item set 574 
expression-list -> expression-list COMMA .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":653,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 575 
cast-expression -> OPEN_PARENS type CLOSE_PARENS unary-expression . 
transitions ->  {}

item set 576 
base-access -> base OPEN_BRACKET expression-list CLOSE_BRACKET . 
transitions ->  {}

item set 577 
typeof-expression -> TYPEOF OPEN_PARENS type CLOSE_PARENS . 
transitions ->  {}

item set 578 
typeof-expression -> TYPEOF OPEN_PARENS VOID CLOSE_PARENS . 
transitions ->  {}

item set 579 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET . 
transitions ->  {}

item set 580 
attribute-arguments -> OPEN_PARENS positional-argument-list CLOSE_PARENS . 
transitions ->  {}

item set 581 
attribute-arguments -> OPEN_PARENS positional-argument-list COMMA .named-argument-list CLOSE_PARENS
positional-argument-list -> positional-argument-list COMMA .positional-argument
named-argument-list -> .named-argument
named-argument-list -> .named-argument-list COMMA named-argument
positional-argument -> .attribute-argument-expression
named-argument -> .IDENTIFIER ASSIGN attribute-argument-expression
attribute-argument-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"named-argument-list":654,"positional-argument":655,"named-argument":458,"attribute-argument-expression":459,"IDENTIFIER":460,"expression":461,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 582 
attribute-arguments -> OPEN_PARENS named-argument-list CLOSE_PARENS . 
transitions ->  {}

item set 583 
named-argument-list -> named-argument-list COMMA .named-argument
named-argument -> .IDENTIFIER ASSIGN attribute-argument-expression 
transitions ->  {"named-argument":656,"IDENTIFIER":657}

item set 584 
named-argument -> IDENTIFIER ASSIGN .attribute-argument-expression
attribute-argument-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"attribute-argument-expression":658,"expression":461,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 585 
interface-declaration -> attributes INTERFACE IDENTIFIER interface-base interface-body SEMICOLON . 
transitions ->  {}

item set 586 
interface-declaration -> attributes enum-modifiers INTERFACE IDENTIFIER interface-body SEMICOLON . 
transitions ->  {}

item set 587 
interface-declaration -> attributes enum-modifiers INTERFACE IDENTIFIER interface-base interface-body .
interface-declaration -> attributes enum-modifiers INTERFACE IDENTIFIER interface-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":659}

item set 588 
enum-declaration -> attributes enum-modifiers ENUM IDENTIFIER enum-body SEMICOLON . 
transitions ->  {}

item set 589 
enum-declaration -> attributes enum-modifiers ENUM IDENTIFIER enum-base enum-body .
enum-declaration -> attributes enum-modifiers ENUM IDENTIFIER enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":660}

item set 590 
delegate-declaration -> attributes enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS .CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS .formal-parameter-list CLOSE_PARENS SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .params array-type IDENTIFIER
parameter-array -> .attributes params array-type IDENTIFIER
fixed-parameter -> .type IDENTIFIER
fixed-parameter -> .parameter-modifier type IDENTIFIER
fixed-parameter -> .attributes type IDENTIFIER
fixed-parameter -> .attributes parameter-modifieropt type IDENTIFIER
attributes -> .attribute-sections
type -> .value-type
type -> .reference-type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"CLOSE_PARENS":661,"formal-parameter-list":662,"fixed-parameters":499,"parameter-array":500,"fixed-parameter":501,"params":502,"attributes":503,"type":504,"parameter-modifier":505,"attribute-sections":9,"value-type":39,"reference-type":40,"REF":506,"OUT":507,"attribute-section":15,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"OPEN_BRACKET":17,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 591 
enum-declaration -> attributes ENUM IDENTIFIER enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 592 
delegate-declaration -> attributes DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":663}

item set 593 
delegate-declaration -> attributes DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list .CLOSE_PARENS SEMICOLON 
transitions ->  {"CLOSE_PARENS":664}

item set 594 
interface-method-declaration -> return-type IDENTIFIER OPEN_PARENS .CLOSE_PARENS SEMICOLON
interface-method-declaration -> return-type IDENTIFIER OPEN_PARENS .formal-parameter-list CLOSE_PARENS SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .params array-type IDENTIFIER
parameter-array -> .attributes params array-type IDENTIFIER
fixed-parameter -> .type IDENTIFIER
fixed-parameter -> .parameter-modifier type IDENTIFIER
fixed-parameter -> .attributes type IDENTIFIER
fixed-parameter -> .attributes parameter-modifieropt type IDENTIFIER
attributes -> .attribute-sections
type -> .value-type
type -> .reference-type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"CLOSE_PARENS":665,"formal-parameter-list":666,"fixed-parameters":499,"parameter-array":500,"fixed-parameter":501,"params":502,"attributes":503,"type":504,"parameter-modifier":505,"attribute-sections":9,"value-type":39,"reference-type":40,"REF":506,"OUT":507,"attribute-section":15,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"OPEN_BRACKET":17,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 595 
interface-method-declaration -> attributes return-type IDENTIFIER .OPEN_PARENS CLOSE_PARENS SEMICOLON
interface-method-declaration -> attributes return-type IDENTIFIER .OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"OPEN_PARENS":667}

item set 596 
interface-method-declaration -> attributes NEW return-type .IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
interface-method-declaration -> attributes NEW return-type .IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"IDENTIFIER":668}

item set 597 
interface-property-declaration -> attributes NEW type .IDENTIFIER OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> attributes NEW type .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
return-type -> type .
non-array-type -> type . 
transitions ->  {"IDENTIFIER":669,"THIS":670}

item set 598 
interface-event-declaration -> attributes NEW EVENT .type IDENTIFIER SEMICOLON
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":671,"value-type":39,"reference-type":40,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 599 
interface-property-declaration -> attributes type IDENTIFIER .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":672}

item set 600 
interface-indexer-declaration -> attributes type THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACKET":673}

item set 601 
interface-event-declaration -> attributes EVENT type .IDENTIFIER SEMICOLON
non-array-type -> type . 
transitions ->  {"IDENTIFIER":674}

item set 602 
interface-method-declaration -> NEW return-type IDENTIFIER .OPEN_PARENS CLOSE_PARENS SEMICOLON
interface-method-declaration -> NEW return-type IDENTIFIER .OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"OPEN_PARENS":675}

item set 603 
interface-property-declaration -> NEW type IDENTIFIER .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":676}

item set 604 
interface-indexer-declaration -> NEW type THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACKET":677}

item set 605 
interface-event-declaration -> NEW EVENT type .IDENTIFIER SEMICOLON
non-array-type -> type . 
transitions ->  {"IDENTIFIER":678}

item set 606 
interface-property-declaration -> type IDENTIFIER OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":679,"GET":680,"attributes":681,"SET":682,"attribute-sections":9,"attribute-section":15,"OPEN_BRACKET":17}

item set 607 
interface-indexer-declaration -> type THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .params array-type IDENTIFIER
parameter-array -> .attributes params array-type IDENTIFIER
fixed-parameter -> .type IDENTIFIER
fixed-parameter -> .parameter-modifier type IDENTIFIER
fixed-parameter -> .attributes type IDENTIFIER
fixed-parameter -> .attributes parameter-modifieropt type IDENTIFIER
attributes -> .attribute-sections
type -> .value-type
type -> .reference-type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"formal-parameter-list":683,"fixed-parameters":499,"parameter-array":500,"fixed-parameter":501,"params":502,"attributes":503,"type":504,"parameter-modifier":505,"attribute-sections":9,"value-type":39,"reference-type":40,"REF":506,"OUT":507,"attribute-section":15,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"OPEN_BRACKET":17,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 608 
interface-event-declaration -> EVENT type IDENTIFIER .SEMICOLON 
transitions ->  {"SEMICOLON":684}

item set 609 
interface-declaration -> enum-modifiers INTERFACE IDENTIFIER interface-base interface-body SEMICOLON . 
transitions ->  {}

item set 610 
enum-declaration -> enum-modifiers ENUM IDENTIFIER enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 611 
delegate-declaration -> enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":685}

item set 612 
delegate-declaration -> enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list .CLOSE_PARENS SEMICOLON 
transitions ->  {"CLOSE_PARENS":686}

item set 613 
enum-body -> OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE . 
transitions ->  {}

item set 614 
enum-member-declarations -> enum-member-declarations COMMA enum-member-declaration . 
transitions ->  {}

item set 615 
enum-member-declaration -> IDENTIFIER ASSIGN constant-expression . 
transitions ->  {}

item set 616 
enum-member-declaration -> attributes IDENTIFIER ASSIGN .constant-expression
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":687,"expression":403,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 617 
delegate-declaration -> DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 618 
delegate-declaration -> DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":688}

item set 619 
formal-parameter-list -> fixed-parameters COMMA .parameter-array
fixed-parameters -> fixed-parameters COMMA .fixed-parameter
parameter-array -> .params array-type IDENTIFIER
parameter-array -> .attributes params array-type IDENTIFIER
fixed-parameter -> .type IDENTIFIER
fixed-parameter -> .parameter-modifier type IDENTIFIER
fixed-parameter -> .attributes type IDENTIFIER
fixed-parameter -> .attributes parameter-modifieropt type IDENTIFIER
attributes -> .attribute-sections
type -> .value-type
type -> .reference-type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"parameter-array":689,"fixed-parameter":690,"params":502,"attributes":503,"type":504,"parameter-modifier":505,"attribute-sections":9,"value-type":39,"reference-type":40,"REF":506,"OUT":507,"attribute-section":15,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"OPEN_BRACKET":17,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 620 
parameter-array -> params array-type .IDENTIFIER
reference-type -> array-type . 
transitions ->  {"IDENTIFIER":691}

item set 621 
non-array-type -> type . 
transitions ->  {}

item set 622 
parameter-array -> attributes params .array-type IDENTIFIER
array-type -> .non-array-type rank-specifiers
non-array-type -> .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"array-type":692,"non-array-type":51,"type":621,"value-type":39,"reference-type":40,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"delegate-type":46,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 623 
fixed-parameter -> attributes type .IDENTIFIER
non-array-type -> type . 
transitions ->  {"IDENTIFIER":693}

item set 624 
fixed-parameter -> attributes parameter-modifieropt .type IDENTIFIER
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":694,"value-type":39,"reference-type":40,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 625 
fixed-parameter -> type IDENTIFIER . 
transitions ->  {}

item set 626 
fixed-parameter -> parameter-modifier type .IDENTIFIER
non-array-type -> type . 
transitions ->  {"IDENTIFIER":695}

item set 627 
constant-declarators -> constant-declarators COMMA constant-declarator . 
transitions ->  {}

item set 628 
constant-declarator -> IDENTIFIER ASSIGN constant-expression . 
transitions ->  {}

item set 629 
specific-catch-clause -> CATCH OPEN_PARENS class-type .CLOSE_PARENS block
specific-catch-clause -> CATCH OPEN_PARENS class-type .IDENTIFIER CLOSE_PARENS block 
transitions ->  {"CLOSE_PARENS":696,"IDENTIFIER":697}

item set 630 
class-type -> type-name . 
transitions ->  {}

item set 631 
lock-statement -> LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 632 
using-statement -> USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 633 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement .
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement .ELSE embedded-statement 
transitions ->  {"ELSE":698}

item set 634 
switch-statement -> SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block . 
transitions ->  {}

item set 635 
switch-block -> OPEN_BRACE .CLOSE_BRACE
switch-block -> OPEN_BRACE .switch-sections CLOSE_BRACE
switch-sections -> .switch-section
switch-sections -> .switch-sections switch-section
switch-section -> .switch-labels statement-list
switch-labels -> .switch-label
switch-labels -> .switch-labels switch-label
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON 
transitions ->  {"CLOSE_BRACE":699,"switch-sections":700,"switch-section":701,"switch-labels":702,"switch-label":703,"CASE":704,"DEFAULT":705}

item set 636 
while-statement -> WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 637 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression .CLOSE_PARENS SEMICOLON 
transitions ->  {"CLOSE_PARENS":706}

item set 638 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":707,"block":79,"empty-statement":80,"expression-statement":81,"selection-statement":82,"iteration-statement":83,"jump-statement":84,"try-statement":85,"checked-statement":86,"unchecked-statement":87,"lock-statement":88,"using-statement":89,"OPEN_BRACE":14,"SEMICOLON":92,"statement-expression":93,"if-statement":94,"switch-statement":95,"while-statement":96,"do-statement":97,"for-statement":98,"foreach-statement":99,"break-statement":100,"continue-statement":101,"goto-statement":102,"return-statement":103,"throw-statement":104,"TRY":105,"CHECKED":106,"UNCHECKED":107,"LOCK":108,"USING":109,"invocation-expression":110,"object-creation-expression":111,"assignment":112,"post-increment-expression":113,"post-decrement-expression":114,"pre-increment-expression":115,"pre-decrement-expression":116,"IF":117,"SWITCH":118,"WHILE":119,"DO":120,"FOR":121,"FOREACH":122,"BREAK":123,"CONTINUE":124,"GOTO":125,"RETURN":126,"THROW":127,"primary-expression":128,"NEW":129,"unary-expression":130,"OP_INC":131,"OP_DEC":132,"primary-no-array-creation-expression":135,"array-creation-expression":136,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"cast-expression":142,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"element-access":148,"this-access":149,"base-access":150,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"OPEN_PARENS":156,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 639 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":708}

item set 640 
for-iterator -> statement-expression-list .
statement-expression-list -> statement-expression-list .COMMA statement-expression 
transitions ->  {"COMMA":534}

item set 641 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_PARENS":709,"for-iterator":710,"statement-expression-list":640,"statement-expression":399,"invocation-expression":110,"object-creation-expression":111,"assignment":112,"post-increment-expression":113,"post-decrement-expression":114,"pre-increment-expression":115,"pre-decrement-expression":116,"primary-expression":128,"NEW":129,"unary-expression":130,"OP_INC":131,"OP_DEC":132,"primary-no-array-creation-expression":135,"array-creation-expression":136,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"cast-expression":142,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"element-access":148,"this-access":149,"base-access":150,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"OPEN_PARENS":156,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 642 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_PARENS":711,"for-iterator":712,"statement-expression-list":640,"statement-expression":399,"invocation-expression":110,"object-creation-expression":111,"assignment":112,"post-increment-expression":113,"post-decrement-expression":114,"pre-increment-expression":115,"pre-decrement-expression":116,"primary-expression":128,"NEW":129,"unary-expression":130,"OP_INC":131,"OP_DEC":132,"primary-no-array-creation-expression":135,"array-creation-expression":136,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"cast-expression":142,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"element-access":148,"this-access":149,"base-access":150,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"OPEN_PARENS":156,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 643 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition .SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":713}

item set 644 
statement-expression-list -> statement-expression-list COMMA statement-expression . 
transitions ->  {}

item set 645 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER IN .expression CLOSE_PARENS embedded-statement
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":714,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 646 
conditional-expression -> conditional-or-expression INTERR expression COLON .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":715,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 647 
argument-list -> argument-list COMMA argument . 
transitions ->  {}

item set 648 
object-creation-expression -> NEW type OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 649 
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .rank-specifiers
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .array-initializer
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .rank-specifiers array-initializer
rank-specifiers -> .rank-specifier
rank-specifiers -> .rank-specifiers rank-specifier
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET 
transitions ->  {"rank-specifiers":716,"array-initializer":717,"rank-specifier":215,"OPEN_BRACE":438,"OPEN_BRACKET":216}

item set 650 
array-initializer -> OPEN_BRACE variable-initializer-list CLOSE_BRACE . 
transitions ->  {}

item set 651 
array-initializer -> OPEN_BRACE variable-initializer-list COMMA .CLOSE_BRACE
variable-initializer-list -> variable-initializer-list COMMA .variable-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACE":718,"variable-initializer":719,"expression":570,"array-initializer":571,"conditional-expression":265,"assignment":266,"OPEN_BRACE":438,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 652 
delegate-creation-expression -> NEW delegate-type OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 653 
expression-list -> expression-list COMMA expression . 
transitions ->  {}

item set 654 
attribute-arguments -> OPEN_PARENS positional-argument-list COMMA named-argument-list .CLOSE_PARENS
named-argument-list -> named-argument-list .COMMA named-argument 
transitions ->  {"CLOSE_PARENS":720,"COMMA":583}

item set 655 
positional-argument-list -> positional-argument-list COMMA positional-argument . 
transitions ->  {}

item set 656 
named-argument-list -> named-argument-list COMMA named-argument . 
transitions ->  {}

item set 657 
named-argument -> IDENTIFIER .ASSIGN attribute-argument-expression 
transitions ->  {"ASSIGN":584}

item set 658 
named-argument -> IDENTIFIER ASSIGN attribute-argument-expression . 
transitions ->  {}

item set 659 
interface-declaration -> attributes enum-modifiers INTERFACE IDENTIFIER interface-base interface-body SEMICOLON . 
transitions ->  {}

item set 660 
enum-declaration -> attributes enum-modifiers ENUM IDENTIFIER enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 661 
delegate-declaration -> attributes enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":721}

item set 662 
delegate-declaration -> attributes enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list .CLOSE_PARENS SEMICOLON 
transitions ->  {"CLOSE_PARENS":722}

item set 663 
delegate-declaration -> attributes DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 664 
delegate-declaration -> attributes DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":723}

item set 665 
interface-method-declaration -> return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":724}

item set 666 
interface-method-declaration -> return-type IDENTIFIER OPEN_PARENS formal-parameter-list .CLOSE_PARENS SEMICOLON 
transitions ->  {"CLOSE_PARENS":725}

item set 667 
interface-method-declaration -> attributes return-type IDENTIFIER OPEN_PARENS .CLOSE_PARENS SEMICOLON
interface-method-declaration -> attributes return-type IDENTIFIER OPEN_PARENS .formal-parameter-list CLOSE_PARENS SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .params array-type IDENTIFIER
parameter-array -> .attributes params array-type IDENTIFIER
fixed-parameter -> .type IDENTIFIER
fixed-parameter -> .parameter-modifier type IDENTIFIER
fixed-parameter -> .attributes type IDENTIFIER
fixed-parameter -> .attributes parameter-modifieropt type IDENTIFIER
attributes -> .attribute-sections
type -> .value-type
type -> .reference-type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"CLOSE_PARENS":726,"formal-parameter-list":727,"fixed-parameters":499,"parameter-array":500,"fixed-parameter":501,"params":502,"attributes":503,"type":504,"parameter-modifier":505,"attribute-sections":9,"value-type":39,"reference-type":40,"REF":506,"OUT":507,"attribute-section":15,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"OPEN_BRACKET":17,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 668 
interface-method-declaration -> attributes NEW return-type IDENTIFIER .OPEN_PARENS CLOSE_PARENS SEMICOLON
interface-method-declaration -> attributes NEW return-type IDENTIFIER .OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"OPEN_PARENS":728}

item set 669 
interface-property-declaration -> attributes NEW type IDENTIFIER .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":729}

item set 670 
interface-indexer-declaration -> attributes NEW type THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACKET":730}

item set 671 
interface-event-declaration -> attributes NEW EVENT type .IDENTIFIER SEMICOLON
non-array-type -> type . 
transitions ->  {"IDENTIFIER":731}

item set 672 
interface-property-declaration -> attributes type IDENTIFIER OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":732,"GET":680,"attributes":681,"SET":682,"attribute-sections":9,"attribute-section":15,"OPEN_BRACKET":17}

item set 673 
interface-indexer-declaration -> attributes type THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .params array-type IDENTIFIER
parameter-array -> .attributes params array-type IDENTIFIER
fixed-parameter -> .type IDENTIFIER
fixed-parameter -> .parameter-modifier type IDENTIFIER
fixed-parameter -> .attributes type IDENTIFIER
fixed-parameter -> .attributes parameter-modifieropt type IDENTIFIER
attributes -> .attribute-sections
type -> .value-type
type -> .reference-type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"formal-parameter-list":733,"fixed-parameters":499,"parameter-array":500,"fixed-parameter":501,"params":502,"attributes":503,"type":504,"parameter-modifier":505,"attribute-sections":9,"value-type":39,"reference-type":40,"REF":506,"OUT":507,"attribute-section":15,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"OPEN_BRACKET":17,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 674 
interface-event-declaration -> attributes EVENT type IDENTIFIER .SEMICOLON 
transitions ->  {"SEMICOLON":734}

item set 675 
interface-method-declaration -> NEW return-type IDENTIFIER OPEN_PARENS .CLOSE_PARENS SEMICOLON
interface-method-declaration -> NEW return-type IDENTIFIER OPEN_PARENS .formal-parameter-list CLOSE_PARENS SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .params array-type IDENTIFIER
parameter-array -> .attributes params array-type IDENTIFIER
fixed-parameter -> .type IDENTIFIER
fixed-parameter -> .parameter-modifier type IDENTIFIER
fixed-parameter -> .attributes type IDENTIFIER
fixed-parameter -> .attributes parameter-modifieropt type IDENTIFIER
attributes -> .attribute-sections
type -> .value-type
type -> .reference-type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"CLOSE_PARENS":735,"formal-parameter-list":736,"fixed-parameters":499,"parameter-array":500,"fixed-parameter":501,"params":502,"attributes":503,"type":504,"parameter-modifier":505,"attribute-sections":9,"value-type":39,"reference-type":40,"REF":506,"OUT":507,"attribute-section":15,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"OPEN_BRACKET":17,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 676 
interface-property-declaration -> NEW type IDENTIFIER OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":737,"GET":680,"attributes":681,"SET":682,"attribute-sections":9,"attribute-section":15,"OPEN_BRACKET":17}

item set 677 
interface-indexer-declaration -> NEW type THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .params array-type IDENTIFIER
parameter-array -> .attributes params array-type IDENTIFIER
fixed-parameter -> .type IDENTIFIER
fixed-parameter -> .parameter-modifier type IDENTIFIER
fixed-parameter -> .attributes type IDENTIFIER
fixed-parameter -> .attributes parameter-modifieropt type IDENTIFIER
attributes -> .attribute-sections
type -> .value-type
type -> .reference-type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"formal-parameter-list":738,"fixed-parameters":499,"parameter-array":500,"fixed-parameter":501,"params":502,"attributes":503,"type":504,"parameter-modifier":505,"attribute-sections":9,"value-type":39,"reference-type":40,"REF":506,"OUT":507,"attribute-section":15,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"OPEN_BRACKET":17,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 678 
interface-event-declaration -> NEW EVENT type IDENTIFIER .SEMICOLON 
transitions ->  {"SEMICOLON":739}

item set 679 
interface-property-declaration -> type IDENTIFIER OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":740}

item set 680 
interface-accessors -> GET .SEMICOLON
interface-accessors -> GET .SEMICOLON SET SEMICOLON
interface-accessors -> GET .SEMICOLON attributes SET SEMICOLON 
transitions ->  {"SEMICOLON":741}

item set 681 
interface-accessors -> attributes .GET SEMICOLON
interface-accessors -> attributes .SET SEMICOLON
interface-accessors -> attributes .GET SEMICOLON SET SEMICOLON
interface-accessors -> attributes .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> attributes .SET SEMICOLON GET SEMICOLON
interface-accessors -> attributes .SET SEMICOLON attributes GET SEMICOLON 
transitions ->  {"GET":742,"SET":743}

item set 682 
interface-accessors -> SET .SEMICOLON
interface-accessors -> SET .SEMICOLON GET SEMICOLON
interface-accessors -> SET .SEMICOLON attributes GET SEMICOLON 
transitions ->  {"SEMICOLON":744}

item set 683 
interface-indexer-declaration -> type THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"CLOSE_BRACKET":745}

item set 684 
interface-event-declaration -> EVENT type IDENTIFIER SEMICOLON . 
transitions ->  {}

item set 685 
delegate-declaration -> enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 686 
delegate-declaration -> enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":746}

item set 687 
enum-member-declaration -> attributes IDENTIFIER ASSIGN constant-expression . 
transitions ->  {}

item set 688 
delegate-declaration -> DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 689 
formal-parameter-list -> fixed-parameters COMMA parameter-array . 
transitions ->  {}

item set 690 
fixed-parameters -> fixed-parameters COMMA fixed-parameter . 
transitions ->  {}

item set 691 
parameter-array -> params array-type IDENTIFIER . 
transitions ->  {}

item set 692 
parameter-array -> attributes params array-type .IDENTIFIER
reference-type -> array-type . 
transitions ->  {"IDENTIFIER":747}

item set 693 
fixed-parameter -> attributes type IDENTIFIER . 
transitions ->  {}

item set 694 
fixed-parameter -> attributes parameter-modifieropt type .IDENTIFIER
non-array-type -> type . 
transitions ->  {"IDENTIFIER":748}

item set 695 
fixed-parameter -> parameter-modifier type IDENTIFIER . 
transitions ->  {}

item set 696 
specific-catch-clause -> CATCH OPEN_PARENS class-type CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":749,"OPEN_BRACE":14}

item set 697 
specific-catch-clause -> CATCH OPEN_PARENS class-type IDENTIFIER .CLOSE_PARENS block 
transitions ->  {"CLOSE_PARENS":750}

item set 698 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":751,"block":79,"empty-statement":80,"expression-statement":81,"selection-statement":82,"iteration-statement":83,"jump-statement":84,"try-statement":85,"checked-statement":86,"unchecked-statement":87,"lock-statement":88,"using-statement":89,"OPEN_BRACE":14,"SEMICOLON":92,"statement-expression":93,"if-statement":94,"switch-statement":95,"while-statement":96,"do-statement":97,"for-statement":98,"foreach-statement":99,"break-statement":100,"continue-statement":101,"goto-statement":102,"return-statement":103,"throw-statement":104,"TRY":105,"CHECKED":106,"UNCHECKED":107,"LOCK":108,"USING":109,"invocation-expression":110,"object-creation-expression":111,"assignment":112,"post-increment-expression":113,"post-decrement-expression":114,"pre-increment-expression":115,"pre-decrement-expression":116,"IF":117,"SWITCH":118,"WHILE":119,"DO":120,"FOR":121,"FOREACH":122,"BREAK":123,"CONTINUE":124,"GOTO":125,"RETURN":126,"THROW":127,"primary-expression":128,"NEW":129,"unary-expression":130,"OP_INC":131,"OP_DEC":132,"primary-no-array-creation-expression":135,"array-creation-expression":136,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"cast-expression":142,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"element-access":148,"this-access":149,"base-access":150,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"OPEN_PARENS":156,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 699 
switch-block -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 700 
switch-block -> OPEN_BRACE switch-sections .CLOSE_BRACE
switch-sections -> switch-sections .switch-section
switch-section -> .switch-labels statement-list
switch-labels -> .switch-label
switch-labels -> .switch-labels switch-label
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON 
transitions ->  {"CLOSE_BRACE":752,"switch-section":753,"switch-labels":702,"switch-label":703,"CASE":704,"DEFAULT":705}

item set 701 
switch-sections -> switch-section . 
transitions ->  {}

item set 702 
switch-section -> switch-labels .statement-list
switch-labels -> switch-labels .switch-label
statement-list -> .statement
statement-list -> .statement-list statement
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"statement-list":754,"switch-label":755,"statement":72,"CASE":704,"DEFAULT":705,"labeled-statement":73,"declaration-statement":74,"embedded-statement":75,"IDENTIFIER":76,"local-variable-declaration":77,"local-constant-declaration":78,"block":79,"empty-statement":80,"expression-statement":81,"selection-statement":82,"iteration-statement":83,"jump-statement":84,"try-statement":85,"checked-statement":86,"unchecked-statement":87,"lock-statement":88,"using-statement":89,"type":90,"CONST":91,"OPEN_BRACE":14,"SEMICOLON":92,"statement-expression":93,"if-statement":94,"switch-statement":95,"while-statement":96,"do-statement":97,"for-statement":98,"foreach-statement":99,"break-statement":100,"continue-statement":101,"goto-statement":102,"return-statement":103,"throw-statement":104,"TRY":105,"CHECKED":106,"UNCHECKED":107,"LOCK":108,"USING":109,"value-type":39,"reference-type":40,"invocation-expression":110,"object-creation-expression":111,"assignment":112,"post-increment-expression":113,"post-decrement-expression":114,"pre-increment-expression":115,"pre-decrement-expression":116,"IF":117,"SWITCH":118,"WHILE":119,"DO":120,"FOR":121,"FOREACH":122,"BREAK":123,"CONTINUE":124,"GOTO":125,"RETURN":126,"THROW":127,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"primary-expression":128,"NEW":129,"unary-expression":130,"OP_INC":131,"OP_DEC":132,"type-name":47,"simple-type":48,"OBJECT":133,"STRING":134,"non-array-type":51,"primary-no-array-creation-expression":135,"array-creation-expression":136,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"cast-expression":142,"namespace-or-type-name":52,"numeric-type":53,"BOOL":143,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"element-access":148,"this-access":149,"base-access":150,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"OPEN_PARENS":156,"integral-type":56,"floating-point-type":57,"DECIMAL":157,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"SBYTE":168,"BYTE":169,"SHORT":170,"USHORT":171,"INT":172,"UINT":173,"LONG":174,"ULONG":175,"CHAR":176,"FLOAT":177,"DOUBLE":178,"TRUE":179,"FALSE":180}

item set 703 
switch-labels -> switch-label . 
transitions ->  {}

item set 704 
switch-label -> CASE .constant-expression COLON
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":756,"expression":403,"conditional-expression":265,"assignment":266,"conditional-or-expression":267,"unary-expression":268,"conditional-and-expression":269,"primary-expression":128,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"pre-increment-expression":270,"pre-decrement-expression":271,"cast-expression":142,"inclusive-or-expression":272,"primary-no-array-creation-expression":135,"array-creation-expression":136,"OP_INC":131,"OP_DEC":132,"OPEN_PARENS":156,"exclusive-or-expression":273,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"invocation-expression":274,"element-access":148,"this-access":149,"base-access":150,"post-increment-expression":275,"post-decrement-expression":276,"object-creation-expression":277,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"NEW":129,"and-expression":278,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"equality-expression":281,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255,"relational-expression":282,"shift-expression":283,"additive-expression":284,"multiplicative-expression":285}

item set 705 
switch-label -> DEFAULT .COLON 
transitions ->  {"COLON":757}

item set 706 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":758}

item set 707 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 708 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":759,"block":79,"empty-statement":80,"expression-statement":81,"selection-statement":82,"iteration-statement":83,"jump-statement":84,"try-statement":85,"checked-statement":86,"unchecked-statement":87,"lock-statement":88,"using-statement":89,"OPEN_BRACE":14,"SEMICOLON":92,"statement-expression":93,"if-statement":94,"switch-statement":95,"while-statement":96,"do-statement":97,"for-statement":98,"foreach-statement":99,"break-statement":100,"continue-statement":101,"goto-statement":102,"return-statement":103,"throw-statement":104,"TRY":105,"CHECKED":106,"UNCHECKED":107,"LOCK":108,"USING":109,"invocation-expression":110,"object-creation-expression":111,"assignment":112,"post-increment-expression":113,"post-decrement-expression":114,"pre-increment-expression":115,"pre-decrement-expression":116,"IF":117,"SWITCH":118,"WHILE":119,"DO":120,"FOR":121,"FOREACH":122,"BREAK":123,"CONTINUE":124,"GOTO":125,"RETURN":126,"THROW":127,"primary-expression":128,"NEW":129,"unary-expression":130,"OP_INC":131,"OP_DEC":132,"primary-no-array-creation-expression":135,"array-creation-expression":136,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"cast-expression":142,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"element-access":148,"this-access":149,"base-access":150,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"OPEN_PARENS":156,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 709 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":760,"block":79,"empty-statement":80,"expression-statement":81,"selection-statement":82,"iteration-statement":83,"jump-statement":84,"try-statement":85,"checked-statement":86,"unchecked-statement":87,"lock-statement":88,"using-statement":89,"OPEN_BRACE":14,"SEMICOLON":92,"statement-expression":93,"if-statement":94,"switch-statement":95,"while-statement":96,"do-statement":97,"for-statement":98,"foreach-statement":99,"break-statement":100,"continue-statement":101,"goto-statement":102,"return-statement":103,"throw-statement":104,"TRY":105,"CHECKED":106,"UNCHECKED":107,"LOCK":108,"USING":109,"invocation-expression":110,"object-creation-expression":111,"assignment":112,"post-increment-expression":113,"post-decrement-expression":114,"pre-increment-expression":115,"pre-decrement-expression":116,"IF":117,"SWITCH":118,"WHILE":119,"DO":120,"FOR":121,"FOREACH":122,"BREAK":123,"CONTINUE":124,"GOTO":125,"RETURN":126,"THROW":127,"primary-expression":128,"NEW":129,"unary-expression":130,"OP_INC":131,"OP_DEC":132,"primary-no-array-creation-expression":135,"array-creation-expression":136,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"cast-expression":142,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"element-access":148,"this-access":149,"base-access":150,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"OPEN_PARENS":156,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 710 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":761}

item set 711 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":762,"block":79,"empty-statement":80,"expression-statement":81,"selection-statement":82,"iteration-statement":83,"jump-statement":84,"try-statement":85,"checked-statement":86,"unchecked-statement":87,"lock-statement":88,"using-statement":89,"OPEN_BRACE":14,"SEMICOLON":92,"statement-expression":93,"if-statement":94,"switch-statement":95,"while-statement":96,"do-statement":97,"for-statement":98,"foreach-statement":99,"break-statement":100,"continue-statement":101,"goto-statement":102,"return-statement":103,"throw-statement":104,"TRY":105,"CHECKED":106,"UNCHECKED":107,"LOCK":108,"USING":109,"invocation-expression":110,"object-creation-expression":111,"assignment":112,"post-increment-expression":113,"post-decrement-expression":114,"pre-increment-expression":115,"pre-decrement-expression":116,"IF":117,"SWITCH":118,"WHILE":119,"DO":120,"FOR":121,"FOREACH":122,"BREAK":123,"CONTINUE":124,"GOTO":125,"RETURN":126,"THROW":127,"primary-expression":128,"NEW":129,"unary-expression":130,"OP_INC":131,"OP_DEC":132,"primary-no-array-creation-expression":135,"array-creation-expression":136,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"cast-expression":142,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"element-access":148,"this-access":149,"base-access":150,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"OPEN_PARENS":156,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 712 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":763}

item set 713 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_PARENS":764,"for-iterator":765,"statement-expression-list":640,"statement-expression":399,"invocation-expression":110,"object-creation-expression":111,"assignment":112,"post-increment-expression":113,"post-decrement-expression":114,"pre-increment-expression":115,"pre-decrement-expression":116,"primary-expression":128,"NEW":129,"unary-expression":130,"OP_INC":131,"OP_DEC":132,"primary-no-array-creation-expression":135,"array-creation-expression":136,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"cast-expression":142,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"element-access":148,"this-access":149,"base-access":150,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"OPEN_PARENS":156,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"CHECKED":279,"UNCHECKED":280,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 714 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER IN expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":766}

item set 715 
conditional-expression -> conditional-or-expression INTERR expression COLON expression . 
transitions ->  {}

item set 716 
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers .
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers .array-initializer
rank-specifiers -> rank-specifiers .rank-specifier
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET 
transitions ->  {"array-initializer":767,"rank-specifier":366,"OPEN_BRACE":438,"OPEN_BRACKET":216}

item set 717 
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer . 
transitions ->  {}

item set 718 
array-initializer -> OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE . 
transitions ->  {}

item set 719 
variable-initializer-list -> variable-initializer-list COMMA variable-initializer . 
transitions ->  {}

item set 720 
attribute-arguments -> OPEN_PARENS positional-argument-list COMMA named-argument-list CLOSE_PARENS . 
transitions ->  {}

item set 721 
delegate-declaration -> attributes enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 722 
delegate-declaration -> attributes enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":768}

item set 723 
delegate-declaration -> attributes DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 724 
interface-method-declaration -> return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 725 
interface-method-declaration -> return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":769}

item set 726 
interface-method-declaration -> attributes return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":770}

item set 727 
interface-method-declaration -> attributes return-type IDENTIFIER OPEN_PARENS formal-parameter-list .CLOSE_PARENS SEMICOLON 
transitions ->  {"CLOSE_PARENS":771}

item set 728 
interface-method-declaration -> attributes NEW return-type IDENTIFIER OPEN_PARENS .CLOSE_PARENS SEMICOLON
interface-method-declaration -> attributes NEW return-type IDENTIFIER OPEN_PARENS .formal-parameter-list CLOSE_PARENS SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .params array-type IDENTIFIER
parameter-array -> .attributes params array-type IDENTIFIER
fixed-parameter -> .type IDENTIFIER
fixed-parameter -> .parameter-modifier type IDENTIFIER
fixed-parameter -> .attributes type IDENTIFIER
fixed-parameter -> .attributes parameter-modifieropt type IDENTIFIER
attributes -> .attribute-sections
type -> .value-type
type -> .reference-type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"CLOSE_PARENS":772,"formal-parameter-list":773,"fixed-parameters":499,"parameter-array":500,"fixed-parameter":501,"params":502,"attributes":503,"type":504,"parameter-modifier":505,"attribute-sections":9,"value-type":39,"reference-type":40,"REF":506,"OUT":507,"attribute-section":15,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"OPEN_BRACKET":17,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 729 
interface-property-declaration -> attributes NEW type IDENTIFIER OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":774,"GET":680,"attributes":681,"SET":682,"attribute-sections":9,"attribute-section":15,"OPEN_BRACKET":17}

item set 730 
interface-indexer-declaration -> attributes NEW type THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .params array-type IDENTIFIER
parameter-array -> .attributes params array-type IDENTIFIER
fixed-parameter -> .type IDENTIFIER
fixed-parameter -> .parameter-modifier type IDENTIFIER
fixed-parameter -> .attributes type IDENTIFIER
fixed-parameter -> .attributes parameter-modifieropt type IDENTIFIER
attributes -> .attribute-sections
type -> .value-type
type -> .reference-type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"formal-parameter-list":775,"fixed-parameters":499,"parameter-array":500,"fixed-parameter":501,"params":502,"attributes":503,"type":504,"parameter-modifier":505,"attribute-sections":9,"value-type":39,"reference-type":40,"REF":506,"OUT":507,"attribute-section":15,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"OPEN_BRACKET":17,"type-name":47,"simple-type":48,"OBJECT":49,"STRING":50,"non-array-type":51,"namespace-or-type-name":52,"numeric-type":53,"BOOL":54,"IDENTIFIER":55,"integral-type":56,"floating-point-type":57,"DECIMAL":58,"SBYTE":59,"BYTE":60,"SHORT":61,"USHORT":62,"INT":63,"UINT":64,"LONG":65,"ULONG":66,"CHAR":67,"FLOAT":68,"DOUBLE":69}

item set 731 
interface-event-declaration -> attributes NEW EVENT type IDENTIFIER .SEMICOLON 
transitions ->  {"SEMICOLON":776}

item set 732 
interface-property-declaration -> attributes type IDENTIFIER OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":777}

item set 733 
interface-indexer-declaration -> attributes type THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"CLOSE_BRACKET":778}

item set 734 
interface-event-declaration -> attributes EVENT type IDENTIFIER SEMICOLON . 
transitions ->  {}

item set 735 
interface-method-declaration -> NEW return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":779}

item set 736 
interface-method-declaration -> NEW return-type IDENTIFIER OPEN_PARENS formal-parameter-list .CLOSE_PARENS SEMICOLON 
transitions ->  {"CLOSE_PARENS":780}

item set 737 
interface-property-declaration -> NEW type IDENTIFIER OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":781}

item set 738 
interface-indexer-declaration -> NEW type THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"CLOSE_BRACKET":782}

item set 739 
interface-event-declaration -> NEW EVENT type IDENTIFIER SEMICOLON . 
transitions ->  {}

item set 740 
interface-property-declaration -> type IDENTIFIER OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 741 
interface-accessors -> GET SEMICOLON .
interface-accessors -> GET SEMICOLON .SET SEMICOLON
interface-accessors -> GET SEMICOLON .attributes SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"SET":783,"attributes":784,"attribute-sections":9,"attribute-section":15,"OPEN_BRACKET":17}

item set 742 
interface-accessors -> attributes GET .SEMICOLON
interface-accessors -> attributes GET .SEMICOLON SET SEMICOLON
interface-accessors -> attributes GET .SEMICOLON attributes SET SEMICOLON 
transitions ->  {"SEMICOLON":785}

item set 743 
interface-accessors -> attributes SET .SEMICOLON
interface-accessors -> attributes SET .SEMICOLON GET SEMICOLON
interface-accessors -> attributes SET .SEMICOLON attributes GET SEMICOLON 
transitions ->  {"SEMICOLON":786}

item set 744 
interface-accessors -> SET SEMICOLON .
interface-accessors -> SET SEMICOLON .GET SEMICOLON
interface-accessors -> SET SEMICOLON .attributes GET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"GET":787,"attributes":788,"attribute-sections":9,"attribute-section":15,"OPEN_BRACKET":17}

item set 745 
interface-indexer-declaration -> type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":789}

item set 746 
delegate-declaration -> enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 747 
parameter-array -> attributes params array-type IDENTIFIER . 
transitions ->  {}

item set 748 
fixed-parameter -> attributes parameter-modifieropt type IDENTIFIER . 
transitions ->  {}

item set 749 
specific-catch-clause -> CATCH OPEN_PARENS class-type CLOSE_PARENS block . 
transitions ->  {}

item set 750 
specific-catch-clause -> CATCH OPEN_PARENS class-type IDENTIFIER CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":790,"OPEN_BRACE":14}

item set 751 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement . 
transitions ->  {}

item set 752 
switch-block -> OPEN_BRACE switch-sections CLOSE_BRACE . 
transitions ->  {}

item set 753 
switch-sections -> switch-sections switch-section . 
transitions ->  {}

item set 754 
switch-section -> switch-labels statement-list .
statement-list -> statement-list .statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"statement":219,"labeled-statement":73,"declaration-statement":74,"embedded-statement":75,"IDENTIFIER":76,"local-variable-declaration":77,"local-constant-declaration":78,"block":79,"empty-statement":80,"expression-statement":81,"selection-statement":82,"iteration-statement":83,"jump-statement":84,"try-statement":85,"checked-statement":86,"unchecked-statement":87,"lock-statement":88,"using-statement":89,"type":90,"CONST":91,"OPEN_BRACE":14,"SEMICOLON":92,"statement-expression":93,"if-statement":94,"switch-statement":95,"while-statement":96,"do-statement":97,"for-statement":98,"foreach-statement":99,"break-statement":100,"continue-statement":101,"goto-statement":102,"return-statement":103,"throw-statement":104,"TRY":105,"CHECKED":106,"UNCHECKED":107,"LOCK":108,"USING":109,"value-type":39,"reference-type":40,"invocation-expression":110,"object-creation-expression":111,"assignment":112,"post-increment-expression":113,"post-decrement-expression":114,"pre-increment-expression":115,"pre-decrement-expression":116,"IF":117,"SWITCH":118,"WHILE":119,"DO":120,"FOR":121,"FOREACH":122,"BREAK":123,"CONTINUE":124,"GOTO":125,"RETURN":126,"THROW":127,"struct-type":41,"enum-type":42,"class-type":43,"interface-type":44,"array-type":45,"delegate-type":46,"primary-expression":128,"NEW":129,"unary-expression":130,"OP_INC":131,"OP_DEC":132,"type-name":47,"simple-type":48,"OBJECT":133,"STRING":134,"non-array-type":51,"primary-no-array-creation-expression":135,"array-creation-expression":136,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"cast-expression":142,"namespace-or-type-name":52,"numeric-type":53,"BOOL":143,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"element-access":148,"this-access":149,"base-access":150,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"OPEN_PARENS":156,"integral-type":56,"floating-point-type":57,"DECIMAL":157,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"SBYTE":168,"BYTE":169,"SHORT":170,"USHORT":171,"INT":172,"UINT":173,"LONG":174,"ULONG":175,"CHAR":176,"FLOAT":177,"DOUBLE":178,"TRUE":179,"FALSE":180}

item set 755 
switch-labels -> switch-labels switch-label . 
transitions ->  {}

item set 756 
switch-label -> CASE constant-expression .COLON 
transitions ->  {"COLON":791}

item set 757 
switch-label -> DEFAULT COLON . 
transitions ->  {}

item set 758 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 759 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 760 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 761 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":792,"block":79,"empty-statement":80,"expression-statement":81,"selection-statement":82,"iteration-statement":83,"jump-statement":84,"try-statement":85,"checked-statement":86,"unchecked-statement":87,"lock-statement":88,"using-statement":89,"OPEN_BRACE":14,"SEMICOLON":92,"statement-expression":93,"if-statement":94,"switch-statement":95,"while-statement":96,"do-statement":97,"for-statement":98,"foreach-statement":99,"break-statement":100,"continue-statement":101,"goto-statement":102,"return-statement":103,"throw-statement":104,"TRY":105,"CHECKED":106,"UNCHECKED":107,"LOCK":108,"USING":109,"invocation-expression":110,"object-creation-expression":111,"assignment":112,"post-increment-expression":113,"post-decrement-expression":114,"pre-increment-expression":115,"pre-decrement-expression":116,"IF":117,"SWITCH":118,"WHILE":119,"DO":120,"FOR":121,"FOREACH":122,"BREAK":123,"CONTINUE":124,"GOTO":125,"RETURN":126,"THROW":127,"primary-expression":128,"NEW":129,"unary-expression":130,"OP_INC":131,"OP_DEC":132,"primary-no-array-creation-expression":135,"array-creation-expression":136,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"cast-expression":142,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"element-access":148,"this-access":149,"base-access":150,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"OPEN_PARENS":156,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 762 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 763 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":793,"block":79,"empty-statement":80,"expression-statement":81,"selection-statement":82,"iteration-statement":83,"jump-statement":84,"try-statement":85,"checked-statement":86,"unchecked-statement":87,"lock-statement":88,"using-statement":89,"OPEN_BRACE":14,"SEMICOLON":92,"statement-expression":93,"if-statement":94,"switch-statement":95,"while-statement":96,"do-statement":97,"for-statement":98,"foreach-statement":99,"break-statement":100,"continue-statement":101,"goto-statement":102,"return-statement":103,"throw-statement":104,"TRY":105,"CHECKED":106,"UNCHECKED":107,"LOCK":108,"USING":109,"invocation-expression":110,"object-creation-expression":111,"assignment":112,"post-increment-expression":113,"post-decrement-expression":114,"pre-increment-expression":115,"pre-decrement-expression":116,"IF":117,"SWITCH":118,"WHILE":119,"DO":120,"FOR":121,"FOREACH":122,"BREAK":123,"CONTINUE":124,"GOTO":125,"RETURN":126,"THROW":127,"primary-expression":128,"NEW":129,"unary-expression":130,"OP_INC":131,"OP_DEC":132,"primary-no-array-creation-expression":135,"array-creation-expression":136,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"cast-expression":142,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"element-access":148,"this-access":149,"base-access":150,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"OPEN_PARENS":156,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 764 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":794,"block":79,"empty-statement":80,"expression-statement":81,"selection-statement":82,"iteration-statement":83,"jump-statement":84,"try-statement":85,"checked-statement":86,"unchecked-statement":87,"lock-statement":88,"using-statement":89,"OPEN_BRACE":14,"SEMICOLON":92,"statement-expression":93,"if-statement":94,"switch-statement":95,"while-statement":96,"do-statement":97,"for-statement":98,"foreach-statement":99,"break-statement":100,"continue-statement":101,"goto-statement":102,"return-statement":103,"throw-statement":104,"TRY":105,"CHECKED":106,"UNCHECKED":107,"LOCK":108,"USING":109,"invocation-expression":110,"object-creation-expression":111,"assignment":112,"post-increment-expression":113,"post-decrement-expression":114,"pre-increment-expression":115,"pre-decrement-expression":116,"IF":117,"SWITCH":118,"WHILE":119,"DO":120,"FOR":121,"FOREACH":122,"BREAK":123,"CONTINUE":124,"GOTO":125,"RETURN":126,"THROW":127,"primary-expression":128,"NEW":129,"unary-expression":130,"OP_INC":131,"OP_DEC":132,"primary-no-array-creation-expression":135,"array-creation-expression":136,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"cast-expression":142,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"element-access":148,"this-access":149,"base-access":150,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"OPEN_PARENS":156,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 765 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":795}

item set 766 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":796,"block":79,"empty-statement":80,"expression-statement":81,"selection-statement":82,"iteration-statement":83,"jump-statement":84,"try-statement":85,"checked-statement":86,"unchecked-statement":87,"lock-statement":88,"using-statement":89,"OPEN_BRACE":14,"SEMICOLON":92,"statement-expression":93,"if-statement":94,"switch-statement":95,"while-statement":96,"do-statement":97,"for-statement":98,"foreach-statement":99,"break-statement":100,"continue-statement":101,"goto-statement":102,"return-statement":103,"throw-statement":104,"TRY":105,"CHECKED":106,"UNCHECKED":107,"LOCK":108,"USING":109,"invocation-expression":110,"object-creation-expression":111,"assignment":112,"post-increment-expression":113,"post-decrement-expression":114,"pre-increment-expression":115,"pre-decrement-expression":116,"IF":117,"SWITCH":118,"WHILE":119,"DO":120,"FOR":121,"FOREACH":122,"BREAK":123,"CONTINUE":124,"GOTO":125,"RETURN":126,"THROW":127,"primary-expression":128,"NEW":129,"unary-expression":130,"OP_INC":131,"OP_DEC":132,"primary-no-array-creation-expression":135,"array-creation-expression":136,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"cast-expression":142,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"element-access":148,"this-access":149,"base-access":150,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"OPEN_PARENS":156,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 767 
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer . 
transitions ->  {}

item set 768 
delegate-declaration -> attributes enum-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 769 
interface-method-declaration -> return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 770 
interface-method-declaration -> attributes return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 771 
interface-method-declaration -> attributes return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":797}

item set 772 
interface-method-declaration -> attributes NEW return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":798}

item set 773 
interface-method-declaration -> attributes NEW return-type IDENTIFIER OPEN_PARENS formal-parameter-list .CLOSE_PARENS SEMICOLON 
transitions ->  {"CLOSE_PARENS":799}

item set 774 
interface-property-declaration -> attributes NEW type IDENTIFIER OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":800}

item set 775 
interface-indexer-declaration -> attributes NEW type THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"CLOSE_BRACKET":801}

item set 776 
interface-event-declaration -> attributes NEW EVENT type IDENTIFIER SEMICOLON . 
transitions ->  {}

item set 777 
interface-property-declaration -> attributes type IDENTIFIER OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 778 
interface-indexer-declaration -> attributes type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":802}

item set 779 
interface-method-declaration -> NEW return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 780 
interface-method-declaration -> NEW return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":803}

item set 781 
interface-property-declaration -> NEW type IDENTIFIER OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 782 
interface-indexer-declaration -> NEW type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":804}

item set 783 
interface-accessors -> GET SEMICOLON SET .SEMICOLON 
transitions ->  {"SEMICOLON":805}

item set 784 
interface-accessors -> GET SEMICOLON attributes .SET SEMICOLON 
transitions ->  {"SET":806}

item set 785 
interface-accessors -> attributes GET SEMICOLON .
interface-accessors -> attributes GET SEMICOLON .SET SEMICOLON
interface-accessors -> attributes GET SEMICOLON .attributes SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"SET":807,"attributes":808,"attribute-sections":9,"attribute-section":15,"OPEN_BRACKET":17}

item set 786 
interface-accessors -> attributes SET SEMICOLON .
interface-accessors -> attributes SET SEMICOLON .GET SEMICOLON
interface-accessors -> attributes SET SEMICOLON .attributes GET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"GET":809,"attributes":810,"attribute-sections":9,"attribute-section":15,"OPEN_BRACKET":17}

item set 787 
interface-accessors -> SET SEMICOLON GET .SEMICOLON 
transitions ->  {"SEMICOLON":811}

item set 788 
interface-accessors -> SET SEMICOLON attributes .GET SEMICOLON 
transitions ->  {"GET":812}

item set 789 
interface-indexer-declaration -> type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":813,"GET":680,"attributes":681,"SET":682,"attribute-sections":9,"attribute-section":15,"OPEN_BRACKET":17}

item set 790 
specific-catch-clause -> CATCH OPEN_PARENS class-type IDENTIFIER CLOSE_PARENS block . 
transitions ->  {}

item set 791 
switch-label -> CASE constant-expression COLON . 
transitions ->  {}

item set 792 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 793 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 794 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 795 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":814,"block":79,"empty-statement":80,"expression-statement":81,"selection-statement":82,"iteration-statement":83,"jump-statement":84,"try-statement":85,"checked-statement":86,"unchecked-statement":87,"lock-statement":88,"using-statement":89,"OPEN_BRACE":14,"SEMICOLON":92,"statement-expression":93,"if-statement":94,"switch-statement":95,"while-statement":96,"do-statement":97,"for-statement":98,"foreach-statement":99,"break-statement":100,"continue-statement":101,"goto-statement":102,"return-statement":103,"throw-statement":104,"TRY":105,"CHECKED":106,"UNCHECKED":107,"LOCK":108,"USING":109,"invocation-expression":110,"object-creation-expression":111,"assignment":112,"post-increment-expression":113,"post-decrement-expression":114,"pre-increment-expression":115,"pre-decrement-expression":116,"IF":117,"SWITCH":118,"WHILE":119,"DO":120,"FOR":121,"FOREACH":122,"BREAK":123,"CONTINUE":124,"GOTO":125,"RETURN":126,"THROW":127,"primary-expression":128,"NEW":129,"unary-expression":130,"OP_INC":131,"OP_DEC":132,"primary-no-array-creation-expression":135,"array-creation-expression":136,"PLUS":137,"MINUS":138,"BANG":139,"TILDE":140,"STAR":141,"cast-expression":142,"literal":144,"simple-name":145,"parenthesized-expression":146,"member-access":147,"element-access":148,"this-access":149,"base-access":150,"delegate-creation-expression":151,"typeof-expression":152,"sizeof-expression":153,"checked-expression":154,"unchecked-expression":155,"OPEN_PARENS":156,"BOOLEAN_LITERAL":158,"REAL_LITERAL":159,"INTEGER_LITERAL":160,"STRING_LITERAL":161,"CHARACTER_LITERAL":162,"NULL":163,"IDENTIFIER":240,"predefined-type":164,"THIS":165,"base":166,"TYPEOF":167,"TRUE":179,"FALSE":180,"BOOL":241,"BYTE":242,"CHAR":243,"DECIMAL":244,"DOUBLE":245,"FLOAT":246,"INT":247,"LONG":248,"OBJECT":249,"SBYTE":250,"SHORT":251,"STRING":252,"UINT":253,"ULONG":254,"USHORT":255}

item set 796 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 797 
interface-method-declaration -> attributes return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 798 
interface-method-declaration -> attributes NEW return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 799 
interface-method-declaration -> attributes NEW return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":815}

item set 800 
interface-property-declaration -> attributes NEW type IDENTIFIER OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 801 
interface-indexer-declaration -> attributes NEW type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":816}

item set 802 
interface-indexer-declaration -> attributes type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":817,"GET":680,"attributes":681,"SET":682,"attribute-sections":9,"attribute-section":15,"OPEN_BRACKET":17}

item set 803 
interface-method-declaration -> NEW return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 804 
interface-indexer-declaration -> NEW type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":818,"GET":680,"attributes":681,"SET":682,"attribute-sections":9,"attribute-section":15,"OPEN_BRACKET":17}

item set 805 
interface-accessors -> GET SEMICOLON SET SEMICOLON . 
transitions ->  {}

item set 806 
interface-accessors -> GET SEMICOLON attributes SET .SEMICOLON 
transitions ->  {"SEMICOLON":819}

item set 807 
interface-accessors -> attributes GET SEMICOLON SET .SEMICOLON 
transitions ->  {"SEMICOLON":820}

item set 808 
interface-accessors -> attributes GET SEMICOLON attributes .SET SEMICOLON 
transitions ->  {"SET":821}

item set 809 
interface-accessors -> attributes SET SEMICOLON GET .SEMICOLON 
transitions ->  {"SEMICOLON":822}

item set 810 
interface-accessors -> attributes SET SEMICOLON attributes .GET SEMICOLON 
transitions ->  {"GET":823}

item set 811 
interface-accessors -> SET SEMICOLON GET SEMICOLON . 
transitions ->  {}

item set 812 
interface-accessors -> SET SEMICOLON attributes GET .SEMICOLON 
transitions ->  {"SEMICOLON":824}

item set 813 
interface-indexer-declaration -> type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":825}

item set 814 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 815 
interface-method-declaration -> attributes NEW return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 816 
interface-indexer-declaration -> attributes NEW type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":826,"GET":680,"attributes":681,"SET":682,"attribute-sections":9,"attribute-section":15,"OPEN_BRACKET":17}

item set 817 
interface-indexer-declaration -> attributes type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":827}

item set 818 
interface-indexer-declaration -> NEW type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":828}

item set 819 
interface-accessors -> GET SEMICOLON attributes SET SEMICOLON . 
transitions ->  {}

item set 820 
interface-accessors -> attributes GET SEMICOLON SET SEMICOLON . 
transitions ->  {}

item set 821 
interface-accessors -> attributes GET SEMICOLON attributes SET .SEMICOLON 
transitions ->  {"SEMICOLON":829}

item set 822 
interface-accessors -> attributes SET SEMICOLON GET SEMICOLON . 
transitions ->  {}

item set 823 
interface-accessors -> attributes SET SEMICOLON attributes GET .SEMICOLON 
transitions ->  {"SEMICOLON":830}

item set 824 
interface-accessors -> SET SEMICOLON attributes GET SEMICOLON . 
transitions ->  {}

item set 825 
interface-indexer-declaration -> type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 826 
interface-indexer-declaration -> attributes NEW type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":831}

item set 827 
interface-indexer-declaration -> attributes type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 828 
interface-indexer-declaration -> NEW type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 829 
interface-accessors -> attributes GET SEMICOLON attributes SET SEMICOLON . 
transitions ->  {}

item set 830 
interface-accessors -> attributes SET SEMICOLON attributes GET SEMICOLON . 
transitions ->  {}

item set 831 
interface-indexer-declaration -> attributes NEW type THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}
832 states.
Building lookahead grammar.
Computing lookaheads.
Building parse table.
Conflict at state: 0, token: OPEN_BRACE
  reduce by rule: e -> 
  shift token (then go to state 14)
Conflict at state: 0, token: DELEGATE
  reduce by rule: e -> 
  shift token (then go to state 13)
Conflict at state: 0, token: ENUM
  reduce by rule: e -> 
  shift token (then go to state 12)
Conflict at state: 0, token: PRIVATE
  reduce by rule: e -> 
  shift token (then go to state 22)
Conflict at state: 0, token: INTERNAL
  reduce by rule: e -> 
  shift token (then go to state 21)
Conflict at state: 0, token: PROTECTED
  reduce by rule: e -> 
  shift token (then go to state 20)
Conflict at state: 0, token: PUBLIC
  reduce by rule: e -> 
  shift token (then go to state 19)
Conflict at state: 0, token: NEW
  reduce by rule: e -> 
  shift token (then go to state 18)
Conflict at state: 0, token: INTERFACE
  reduce by rule: e -> 
  shift token (then go to state 10)
Conflict at state: 0, token: OPEN_BRACKET
  reduce by rule: e -> 
  shift token (then go to state 17)
Conflict at state: 2, token: OPEN_BRACE
  reduce by rule: e -> 
  shift token (then go to state 14)
Conflict at state: 2, token: DELEGATE
  reduce by rule: e -> 
  shift token (then go to state 13)
Conflict at state: 2, token: ENUM
  reduce by rule: e -> 
  shift token (then go to state 12)
Conflict at state: 2, token: PRIVATE
  reduce by rule: e -> 
  shift token (then go to state 22)
Conflict at state: 2, token: INTERNAL
  reduce by rule: e -> 
  shift token (then go to state 21)
Conflict at state: 2, token: PROTECTED
  reduce by rule: e -> 
  shift token (then go to state 20)
Conflict at state: 2, token: PUBLIC
  reduce by rule: e -> 
  shift token (then go to state 19)
Conflict at state: 2, token: NEW
  reduce by rule: e -> 
  shift token (then go to state 18)
Conflict at state: 2, token: INTERFACE
  reduce by rule: e -> 
  shift token (then go to state 10)
Conflict at state: 2, token: OPEN_BRACKET
  reduce by rule: e -> 
  shift token (then go to state 17)
Conflict at state: 2, token: EOF
  reduce by rule: e -> 
  shift token (then go to state 23)
Conflict at state: 4, token: DELEGATE
  reduce by rule: e -> attributes
  shift token (then go to state 28)
Conflict at state: 4, token: ENUM
  reduce by rule: e -> attributes
  shift token (then go to state 27)
Conflict at state: 4, token: PRIVATE
  reduce by rule: e -> attributes
  shift token (then go to state 22)
Conflict at state: 4, token: INTERNAL
  reduce by rule: e -> attributes
  shift token (then go to state 21)
Conflict at state: 4, token: PROTECTED
  reduce by rule: e -> attributes
  shift token (then go to state 20)
Conflict at state: 4, token: PUBLIC
  reduce by rule: e -> attributes
  shift token (then go to state 19)
Conflict at state: 4, token: NEW
  reduce by rule: e -> attributes
  shift token (then go to state 18)
Conflict at state: 4, token: INTERFACE
  reduce by rule: e -> attributes
  shift token (then go to state 25)
Conflict at state: 9, token: OPEN_BRACKET
  reduce by rule: attributes -> attribute-sections
  shift token (then go to state 17)
Conflict at state: 38, token: IDENTIFIER
  reduce by rule: non-array-type -> type
  reduce by rule: return-type -> type
Conflict at state: 38, token: OPEN_BRACKET
  reduce by rule: non-array-type -> type
  reduce by rule: return-type -> type
Conflict at state: 47, token: IDENTIFIER
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OPEN_BRACKET
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: SEMICOLON
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: ASSIGN
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: COMMA
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OPEN_PARENS
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: CLOSE_PARENS
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: THIS
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: IS
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OP_GE
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OP_LE
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: GT
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: LT
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: INTERR
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: CLOSE_BRACKET
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: COLON
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OP_OR
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OP_AND
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: BITWISE_OR
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: CARET
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: AMP
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OP_EQ
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OP_NE
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: CLOSE_BRACE
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: AS
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: IDENTIFIER
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OPEN_BRACKET
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: SEMICOLON
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: ASSIGN
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: COMMA
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OPEN_PARENS
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: CLOSE_PARENS
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: THIS
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: IS
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OP_GE
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OP_LE
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: GT
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: LT
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: INTERR
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: CLOSE_BRACKET
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: COLON
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OP_OR
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OP_AND
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: BITWISE_OR
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: CARET
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: AMP
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OP_EQ
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OP_NE
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: CLOSE_BRACE
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: AS
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: IDENTIFIER
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OPEN_BRACKET
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: SEMICOLON
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: ASSIGN
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: COMMA
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OPEN_PARENS
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: CLOSE_PARENS
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: THIS
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: IS
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OP_GE
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OP_LE
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: GT
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: LT
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: INTERR
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: CLOSE_BRACKET
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: COLON
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OP_OR
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OP_AND
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: BITWISE_OR
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: CARET
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: AMP
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OP_EQ
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OP_NE
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: CLOSE_BRACE
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: AS
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: IDENTIFIER
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OPEN_BRACKET
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: SEMICOLON
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: ASSIGN
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: COMMA
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OPEN_PARENS
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: CLOSE_PARENS
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: THIS
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: IS
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OP_GE
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OP_LE
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: GT
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: LT
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: INTERR
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: CLOSE_BRACKET
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: COLON
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OP_OR
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OP_AND
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: BITWISE_OR
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: CARET
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: AMP
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OP_EQ
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: OP_NE
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: CLOSE_BRACE
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 47, token: AS
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 76, token: SEMICOLON
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 76, token: IDENTIFIER
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 76, token: ASSIGN
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 76, token: COMMA
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 76, token: DOT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 76, token: OPEN_BRACKET
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 76, token: OPEN_PARENS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 76, token: OP_INC
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 76, token: OP_DEC
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 76, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 76, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 76, token: OP_XOR_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 76, token: OP_OR_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 76, token: OP_AND_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 76, token: OP_MOD_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 76, token: OP_DIV_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 76, token: OP_MULT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 76, token: OP_SUB_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 76, token: OP_ADD_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 110, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 110, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 110, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 110, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 110, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 110, token: DOT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 110, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 110, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 110, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 110, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 110, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 110, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 110, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 110, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 110, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 110, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 110, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 110, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 110, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 111, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 111, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 111, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 111, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 111, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 111, token: DOT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 111, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 111, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 111, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 111, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 111, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 111, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 111, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 111, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 111, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 111, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 111, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 111, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 111, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 113, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 113, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 113, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 113, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 113, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 113, token: DOT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 113, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 113, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 113, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 113, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 113, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 113, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 113, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 113, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 113, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 113, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 113, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 113, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 113, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 114, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 114, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 114, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 114, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 114, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 114, token: DOT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 114, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 114, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 114, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 114, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 114, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 114, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 114, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 114, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 114, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 114, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 114, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 114, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 114, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 115, token: SEMICOLON
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 115, token: ASSIGN
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 115, token: OP_ADD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 115, token: OP_SUB_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 115, token: OP_MULT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 115, token: OP_DIV_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 115, token: OP_MOD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 115, token: OP_AND_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 115, token: OP_OR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 115, token: OP_XOR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 115, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 115, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 115, token: COMMA
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 115, token: CLOSE_PARENS
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 116, token: SEMICOLON
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 116, token: ASSIGN
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 116, token: OP_ADD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 116, token: OP_SUB_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 116, token: OP_MULT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 116, token: OP_DIV_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 116, token: OP_MOD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 116, token: OP_AND_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 116, token: OP_OR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 116, token: OP_XOR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 116, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 116, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 116, token: COMMA
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 116, token: CLOSE_PARENS
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 133, token: SEMICOLON
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 133, token: IDENTIFIER
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 133, token: ASSIGN
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 133, token: COMMA
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 133, token: OPEN_BRACKET
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 133, token: DOT
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 133, token: CLOSE_PARENS
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 134, token: SEMICOLON
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 134, token: IDENTIFIER
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 134, token: ASSIGN
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 134, token: COMMA
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 134, token: OPEN_BRACKET
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 134, token: DOT
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 134, token: CLOSE_PARENS
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 143, token: COMMA
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 143, token: ASSIGN
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 143, token: IDENTIFIER
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 143, token: SEMICOLON
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 143, token: OPEN_BRACKET
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 143, token: DOT
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 143, token: CLOSE_PARENS
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 157, token: SEMICOLON
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 157, token: IDENTIFIER
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 157, token: ASSIGN
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 157, token: COMMA
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 157, token: OPEN_BRACKET
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 157, token: DOT
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 157, token: CLOSE_PARENS
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 168, token: COMMA
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 168, token: ASSIGN
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 168, token: IDENTIFIER
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 168, token: SEMICOLON
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 168, token: OPEN_BRACKET
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 168, token: DOT
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 168, token: CLOSE_PARENS
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 169, token: COMMA
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 169, token: ASSIGN
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 169, token: IDENTIFIER
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 169, token: SEMICOLON
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 169, token: OPEN_BRACKET
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 169, token: DOT
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 169, token: CLOSE_PARENS
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 170, token: COMMA
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 170, token: ASSIGN
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 170, token: IDENTIFIER
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 170, token: SEMICOLON
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 170, token: OPEN_BRACKET
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 170, token: DOT
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 170, token: CLOSE_PARENS
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 171, token: COMMA
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 171, token: ASSIGN
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 171, token: IDENTIFIER
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 171, token: SEMICOLON
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 171, token: OPEN_BRACKET
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 171, token: DOT
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 171, token: CLOSE_PARENS
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 172, token: COMMA
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 172, token: ASSIGN
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 172, token: IDENTIFIER
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 172, token: SEMICOLON
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 172, token: OPEN_BRACKET
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 172, token: DOT
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 172, token: CLOSE_PARENS
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 173, token: COMMA
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 173, token: ASSIGN
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 173, token: IDENTIFIER
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 173, token: SEMICOLON
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 173, token: OPEN_BRACKET
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 173, token: DOT
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 173, token: CLOSE_PARENS
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 174, token: COMMA
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 174, token: ASSIGN
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 174, token: IDENTIFIER
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 174, token: SEMICOLON
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 174, token: OPEN_BRACKET
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 174, token: DOT
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 174, token: CLOSE_PARENS
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 175, token: COMMA
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 175, token: ASSIGN
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 175, token: IDENTIFIER
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 175, token: SEMICOLON
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 175, token: OPEN_BRACKET
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 175, token: DOT
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 175, token: CLOSE_PARENS
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 176, token: COMMA
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 176, token: ASSIGN
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 176, token: IDENTIFIER
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 176, token: SEMICOLON
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 176, token: OPEN_BRACKET
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 176, token: DOT
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 176, token: CLOSE_PARENS
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 177, token: COMMA
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 177, token: ASSIGN
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 177, token: IDENTIFIER
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 177, token: SEMICOLON
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 177, token: OPEN_BRACKET
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 177, token: DOT
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 177, token: CLOSE_PARENS
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 178, token: COMMA
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 178, token: ASSIGN
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 178, token: IDENTIFIER
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 178, token: SEMICOLON
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 178, token: OPEN_BRACKET
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 178, token: DOT
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 178, token: CLOSE_PARENS
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 214, token: OPEN_BRACKET
  reduce by rule: array-type -> non-array-type rank-specifiers
  shift token (then go to state 216)
Conflict at state: 295, token: OPEN_PARENS
  reduce by rule: reference-type -> delegate-type
  shift token (then go to state 439)
Conflict at state: 318, token: CLOSE_PARENS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: DOT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: OPEN_BRACKET
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: OP_XOR_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: OP_OR_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: OP_AND_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: OP_MOD_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: OP_DIV_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: OP_MULT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: OP_SUB_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: OP_ADD_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: ASSIGN
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: OPEN_PARENS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: OP_INC
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: OP_DEC
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: INTERR
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: STAR
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: DIV
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: PERCENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: OP_LEFT_SHIFT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: RIGHT_SHIFT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: OP_EQ
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: OP_NE
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: CARET
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: OP_AND
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: OP_OR
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: BITWISE_OR
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: AMP
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: AS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: IS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: OP_GE
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: OP_LE
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: GT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: LT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: MINUS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: PLUS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: IDENTIFIER
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: COMMA
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 318, token: SEMICOLON
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 349, token: IDENTIFIER
  reduce by rule: return-type -> type
  shift token (then go to state 483)
Conflict at state: 349, token: IDENTIFIER
  reduce by rule: non-array-type -> type
  shift token (then go to state 483)
Conflict at state: 349, token: OPEN_BRACKET
  reduce by rule: non-array-type -> type
  reduce by rule: return-type -> type
Conflict at state: 391, token: CLOSE_PARENS
  reduce by rule: boolean-expression -> expression
  reduce by rule: boolean-expression -> expression
Conflict at state: 391, token: SEMICOLON
  reduce by rule: boolean-expression -> expression
  reduce by rule: boolean-expression -> expression
Conflict at state: 460, token: ASSIGN
  reduce by rule: simple-name -> IDENTIFIER
  shift token (then go to state 584)
Conflict at state: 478, token: IDENTIFIER
  reduce by rule: return-type -> type
  shift token (then go to state 599)
Conflict at state: 478, token: IDENTIFIER
  reduce by rule: non-array-type -> type
  shift token (then go to state 599)
Conflict at state: 478, token: OPEN_BRACKET
  reduce by rule: non-array-type -> type
  reduce by rule: return-type -> type
Conflict at state: 481, token: IDENTIFIER
  reduce by rule: return-type -> type
  shift token (then go to state 603)
Conflict at state: 481, token: IDENTIFIER
  reduce by rule: non-array-type -> type
  shift token (then go to state 603)
Conflict at state: 481, token: OPEN_BRACKET
  reduce by rule: non-array-type -> type
  reduce by rule: return-type -> type
Conflict at state: 597, token: IDENTIFIER
  reduce by rule: return-type -> type
  shift token (then go to state 669)
Conflict at state: 597, token: IDENTIFIER
  reduce by rule: non-array-type -> type
  shift token (then go to state 669)
Conflict at state: 597, token: OPEN_BRACKET
  reduce by rule: non-array-type -> type
  reduce by rule: return-type -> type
Conflict at state: 633, token: ELSE
  reduce by rule: if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
  shift token (then go to state 698)

419 Conflict(s) found in grammar.
Done.
