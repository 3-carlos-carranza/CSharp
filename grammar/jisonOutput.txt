Processing grammar.
$accept(0)
$end(1)
error(2)
compilationUnit(3)
es(4)
EOF(5)
e(6)
attributes(7)
block(8)
BOOLEAN_LITERAL(9)
TRUE(10)
FALSE(11)
literal(12)
REAL_LITERAL(13)
INTEGER_LITERAL(14)
STRING_LITERAL(15)
CHARACTER_LITERAL(16)
NULL(17)
namespace-name(18)
namespace-or-type-name(19)
type-name(20)
IDENTIFIER(21)
DOT(22)
type(23)
value-type(24)
reference-type(25)
struct-type(26)
enum-type(27)
simple-type(28)
numeric-type(29)
BOOL(30)
integral-type(31)
floating-point-type(32)
DECIMAL(33)
SBYTE(34)
BYTE(35)
SHORT(36)
USHORT(37)
INT(38)
UINT(39)
LONG(40)
ULONG(41)
CHAR(42)
FLOAT(43)
DOUBLE(44)
class-type(45)
interface-type(46)
array-type(47)
delegate-type(48)
OBJECT(49)
STRING(50)
non-array-type(51)
rank-specifiers(52)
rank-specifier(53)
OPEN_BRACKET(54)
CLOSE_BRACKET(55)
dim-separators(56)
COMMA(57)
variable-reference(58)
expression(59)
argument-list(60)
argument(61)
REF(62)
OUT(63)
primary-expression(64)
primary-no-array-creation-expression(65)
array-creation-expression(66)
simple-name(67)
parenthesized-expression(68)
member-access(69)
invocation-expression(70)
element-access(71)
this-access(72)
base-access(73)
post-increment-expression(74)
post-decrement-expression(75)
object-creation-expression(76)
delegate-creation-expression(77)
typeof-expression(78)
sizeof-expression(79)
checked-expression(80)
unchecked-expression(81)
OPEN_PARENS(82)
CLOSE_PARENS(83)
predefined-type(84)
expression-list(85)
THIS(86)
base(87)
OP_INC(88)
OP_DEC(89)
NEW(90)
array-initializer(91)
TYPEOF(92)
VOID(93)
CHECKED(94)
UNCHECKED(95)
unary-expression(96)
PLUS(97)
MINUS(98)
BANG(99)
TILDE(100)
STAR(101)
pre-increment-expression(102)
pre-decrement-expression(103)
cast-expression(104)
multiplicative-expression(105)
DIV(106)
PERCENT(107)
additive-expression(108)
shift-expression(109)
OP_LEFT_SHIFT(110)
RIGHT_SHIFT(111)
relational-expression(112)
LT(113)
GT(114)
OP_LE(115)
OP_GE(116)
IS(117)
AS(118)
equality-expression(119)
OP_EQ(120)
OP_NE(121)
and-expression(122)
AMP(123)
exclusive-or-expression(124)
CARET(125)
inclusive-or-expression(126)
BITWISE_OR(127)
conditional-and-expression(128)
OP_AND(129)
conditional-or-expression(130)
OP_OR(131)
conditional-expression(132)
INTERR(133)
COLON(134)
assignment(135)
assignment-operator(136)
ASSIGN(137)
OP_ADD_ASSIGNMENT(138)
OP_SUB_ASSIGNMENT(139)
OP_MULT_ASSIGNMENT(140)
OP_DIV_ASSIGNMENT(141)
OP_MOD_ASSIGNMENT(142)
OP_AND_ASSIGNMENT(143)
OP_OR_ASSIGNMENT(144)
OP_XOR_ASSIGNMENT(145)
OP_LEFT_SHIFT_ASSIGNMENT(146)
RIGHT_SHIFT_ASSIGNMENT(147)
constant-expression(148)
boolean-expression(149)
statement(150)
labeled-statement(151)
declaration-statement(152)
embedded-statement(153)
empty-statement(154)
expression-statement(155)
selection-statement(156)
iteration-statement(157)
jump-statement(158)
try-statement(159)
checked-statement(160)
unchecked-statement(161)
lock-statement(162)
using-statement(163)
OPEN_BRACE(164)
CLOSE_BRACE(165)
statement-list(166)
SEMICOLON(167)
local-variable-declaration(168)
local-constant-declaration(169)
local-variable-declarators(170)
local-variable-declarator(171)
local-variable(172)
local-variable-initializer(173)
CONST(174)
constant-declarators(175)
constant-declarator(176)
statement-expression(177)
if-statement(178)
switch-statement(179)
IF(180)
ELSE(181)
SWITCH(182)
switch-block(183)
switch-sections(184)
switch-section(185)
switch-labels(186)
switch-label(187)
CASE(188)
DEFAULT(189)
while-statement(190)
do-statement(191)
for-statement(192)
foreach-statement(193)
WHILE(194)
DO(195)
FOR(196)
for-initializer(197)
for-condition(198)
for-iterator(199)
statement-expression-list(200)
FOREACH(201)
IN(202)
break-statement(203)
continue-statement(204)
goto-statement(205)
return-statement(206)
throw-statement(207)
BREAK(208)
CONTINUE(209)
GOTO(210)
RETURN(211)
THROW(212)
TRY(213)
catch-clauses(214)
finally-clause(215)
specific-catch-clauses(216)
general-catch-clause(217)
specific-catch-clause(218)
CATCH(219)
FINALLY(220)
LOCK(221)
USING(222)
resource-acquisition(223)
variable-initializer-list(224)
variable-initializer(225)
global-attributes(226)
global-attribute-sections(227)
global-attribute-section(228)
global-attribute-target-specifier(229)
attribute-list(230)
global-attribute-target(231)
ASSEMBLY(232)
MODULE(233)
attribute-sections(234)
attribute-section(235)
attribute-target-specifier(236)
attribute-target(237)
FIELD(238)
EVENT(239)
METHOD(240)
PARAM(241)
PROPERTY(242)
TYPE(243)
attribute(244)
attribute-name(245)
attribute-arguments(246)
positional-argument-list(247)
named-argument-list(248)
positional-argument(249)
attribute-argument-expression(250)
named-argument(251)

Item sets
------

item set 0 
$accept -> .compilationUnit $end #lookaheads= $end
compilationUnit -> .es EOF
es -> .es e
es -> .e
e -> .attributes
e -> .block
e -> .
attributes -> .attribute-sections
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"compilationUnit":1,"es":2,"e":3,"attributes":4,"block":5,"attribute-sections":6,"OPEN_BRACE":7,"attribute-section":8,"OPEN_BRACKET":9}

item set 1 
$accept -> compilationUnit .$end #lookaheads= $end 
transitions ->  {}

item set 2 
compilationUnit -> es .EOF
es -> es .e
e -> .attributes
e -> .block
e -> .
attributes -> .attribute-sections
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"EOF":10,"e":11,"attributes":4,"block":5,"attribute-sections":6,"OPEN_BRACE":7,"attribute-section":8,"OPEN_BRACKET":9}

item set 3 
es -> e . 
transitions ->  {}

item set 4 
e -> attributes . 
transitions ->  {}

item set 5 
e -> block . 
transitions ->  {}

item set 6 
attributes -> attribute-sections .
attribute-sections -> attribute-sections .attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attribute-section":12,"OPEN_BRACKET":9}

item set 7 
block -> OPEN_BRACE .CLOSE_BRACE
block -> OPEN_BRACE .statement-list CLOSE_BRACE
statement-list -> .statement
statement-list -> .statement-list statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_BRACE":13,"statement-list":14,"statement":15,"labeled-statement":16,"declaration-statement":17,"embedded-statement":18,"IDENTIFIER":19,"local-variable-declaration":20,"local-constant-declaration":21,"block":22,"empty-statement":23,"expression-statement":24,"selection-statement":25,"iteration-statement":26,"jump-statement":27,"try-statement":28,"checked-statement":29,"unchecked-statement":30,"lock-statement":31,"using-statement":32,"type":33,"CONST":34,"OPEN_BRACE":7,"SEMICOLON":35,"statement-expression":36,"if-statement":37,"switch-statement":38,"while-statement":39,"do-statement":40,"for-statement":41,"foreach-statement":42,"break-statement":43,"continue-statement":44,"goto-statement":45,"return-statement":46,"throw-statement":47,"TRY":48,"CHECKED":49,"UNCHECKED":50,"LOCK":51,"USING":52,"value-type":53,"reference-type":54,"invocation-expression":55,"object-creation-expression":56,"assignment":57,"post-increment-expression":58,"post-decrement-expression":59,"pre-increment-expression":60,"pre-decrement-expression":61,"IF":62,"SWITCH":63,"WHILE":64,"DO":65,"FOR":66,"FOREACH":67,"BREAK":68,"CONTINUE":69,"GOTO":70,"RETURN":71,"THROW":72,"struct-type":73,"enum-type":74,"class-type":75,"interface-type":76,"array-type":77,"delegate-type":78,"primary-expression":79,"NEW":80,"unary-expression":81,"OP_INC":82,"OP_DEC":83,"type-name":84,"simple-type":85,"OBJECT":86,"STRING":87,"non-array-type":88,"primary-no-array-creation-expression":89,"array-creation-expression":90,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"cast-expression":96,"namespace-or-type-name":97,"numeric-type":98,"BOOL":99,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"element-access":104,"this-access":105,"base-access":106,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"OPEN_PARENS":112,"integral-type":113,"floating-point-type":114,"DECIMAL":115,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"SBYTE":126,"BYTE":127,"SHORT":128,"USHORT":129,"INT":130,"UINT":131,"LONG":132,"ULONG":133,"CHAR":134,"FLOAT":135,"DOUBLE":136,"TRUE":137,"FALSE":138}

item set 8 
attribute-sections -> attribute-section . 
transitions ->  {}

item set 9 
attribute-section -> OPEN_BRACKET .attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-list COMMA CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
attribute-list -> .attribute
attribute-list -> .attribute-list COMMA attribute
attribute-target-specifier -> .attribute-target COLON
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-target -> .FIELD
attribute-target -> .EVENT
attribute-target -> .METHOD
attribute-target -> .PARAM
attribute-target -> .PROPERTY
attribute-target -> .RETURN
attribute-target -> .TYPE
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER 
transitions ->  {"attribute-list":139,"attribute-target-specifier":140,"attribute":141,"attribute-target":142,"attribute-name":143,"FIELD":144,"EVENT":145,"METHOD":146,"PARAM":147,"PROPERTY":148,"RETURN":149,"TYPE":150,"type-name":151,"namespace-or-type-name":97,"IDENTIFIER":152}

item set 10 
compilationUnit -> es EOF . 
transitions ->  {}

item set 11 
es -> es e . 
transitions ->  {}

item set 12 
attribute-sections -> attribute-sections attribute-section . 
transitions ->  {}

item set 13 
block -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 14 
block -> OPEN_BRACE statement-list .CLOSE_BRACE
statement-list -> statement-list .statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_BRACE":153,"statement":154,"labeled-statement":16,"declaration-statement":17,"embedded-statement":18,"IDENTIFIER":19,"local-variable-declaration":20,"local-constant-declaration":21,"block":22,"empty-statement":23,"expression-statement":24,"selection-statement":25,"iteration-statement":26,"jump-statement":27,"try-statement":28,"checked-statement":29,"unchecked-statement":30,"lock-statement":31,"using-statement":32,"type":33,"CONST":34,"OPEN_BRACE":7,"SEMICOLON":35,"statement-expression":36,"if-statement":37,"switch-statement":38,"while-statement":39,"do-statement":40,"for-statement":41,"foreach-statement":42,"break-statement":43,"continue-statement":44,"goto-statement":45,"return-statement":46,"throw-statement":47,"TRY":48,"CHECKED":49,"UNCHECKED":50,"LOCK":51,"USING":52,"value-type":53,"reference-type":54,"invocation-expression":55,"object-creation-expression":56,"assignment":57,"post-increment-expression":58,"post-decrement-expression":59,"pre-increment-expression":60,"pre-decrement-expression":61,"IF":62,"SWITCH":63,"WHILE":64,"DO":65,"FOR":66,"FOREACH":67,"BREAK":68,"CONTINUE":69,"GOTO":70,"RETURN":71,"THROW":72,"struct-type":73,"enum-type":74,"class-type":75,"interface-type":76,"array-type":77,"delegate-type":78,"primary-expression":79,"NEW":80,"unary-expression":81,"OP_INC":82,"OP_DEC":83,"type-name":84,"simple-type":85,"OBJECT":86,"STRING":87,"non-array-type":88,"primary-no-array-creation-expression":89,"array-creation-expression":90,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"cast-expression":96,"namespace-or-type-name":97,"numeric-type":98,"BOOL":99,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"element-access":104,"this-access":105,"base-access":106,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"OPEN_PARENS":112,"integral-type":113,"floating-point-type":114,"DECIMAL":115,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"SBYTE":126,"BYTE":127,"SHORT":128,"USHORT":129,"INT":130,"UINT":131,"LONG":132,"ULONG":133,"CHAR":134,"FLOAT":135,"DOUBLE":136,"TRUE":137,"FALSE":138}

item set 15 
statement-list -> statement . 
transitions ->  {}

item set 16 
statement -> labeled-statement . 
transitions ->  {}

item set 17 
statement -> declaration-statement . 
transitions ->  {}

item set 18 
statement -> embedded-statement . 
transitions ->  {}

item set 19 
labeled-statement -> IDENTIFIER .COLON statement
namespace-or-type-name -> IDENTIFIER .
simple-name -> IDENTIFIER . 
transitions ->  {"COLON":155}

item set 20 
declaration-statement -> local-variable-declaration .SEMICOLON 
transitions ->  {"SEMICOLON":156}

item set 21 
declaration-statement -> local-constant-declaration .SEMICOLON 
transitions ->  {"SEMICOLON":157}

item set 22 
embedded-statement -> block . 
transitions ->  {}

item set 23 
embedded-statement -> empty-statement . 
transitions ->  {}

item set 24 
embedded-statement -> expression-statement . 
transitions ->  {}

item set 25 
embedded-statement -> selection-statement . 
transitions ->  {}

item set 26 
embedded-statement -> iteration-statement . 
transitions ->  {}

item set 27 
embedded-statement -> jump-statement . 
transitions ->  {}

item set 28 
embedded-statement -> try-statement . 
transitions ->  {}

item set 29 
embedded-statement -> checked-statement . 
transitions ->  {}

item set 30 
embedded-statement -> unchecked-statement . 
transitions ->  {}

item set 31 
embedded-statement -> lock-statement . 
transitions ->  {}

item set 32 
embedded-statement -> using-statement . 
transitions ->  {}

item set 33 
local-variable-declaration -> type .local-variable-declarators
non-array-type -> type .
local-variable-declarators -> .local-variable-declarator
local-variable-declarators -> .local-variable-declarators COMMA local-variable-declarator
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
local-variable -> .
local-variable -> .IDENTIFIER 
transitions ->  {"local-variable-declarators":158,"local-variable-declarator":159,"local-variable":160,"IDENTIFIER":161}

item set 34 
local-constant-declaration -> CONST .type constant-declarators
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":162,"value-type":53,"reference-type":54,"struct-type":73,"enum-type":74,"class-type":75,"interface-type":76,"array-type":77,"delegate-type":78,"type-name":84,"simple-type":85,"OBJECT":163,"STRING":164,"non-array-type":88,"namespace-or-type-name":97,"numeric-type":98,"BOOL":165,"IDENTIFIER":152,"integral-type":113,"floating-point-type":114,"DECIMAL":166,"SBYTE":167,"BYTE":168,"SHORT":169,"USHORT":170,"INT":171,"UINT":172,"LONG":173,"ULONG":174,"CHAR":175,"FLOAT":176,"DOUBLE":177}

item set 35 
empty-statement -> SEMICOLON . 
transitions ->  {}

item set 36 
expression-statement -> statement-expression .SEMICOLON 
transitions ->  {"SEMICOLON":178}

item set 37 
selection-statement -> if-statement . 
transitions ->  {}

item set 38 
selection-statement -> switch-statement . 
transitions ->  {}

item set 39 
iteration-statement -> while-statement . 
transitions ->  {}

item set 40 
iteration-statement -> do-statement . 
transitions ->  {}

item set 41 
iteration-statement -> for-statement . 
transitions ->  {}

item set 42 
iteration-statement -> foreach-statement . 
transitions ->  {}

item set 43 
jump-statement -> break-statement . 
transitions ->  {}

item set 44 
jump-statement -> continue-statement . 
transitions ->  {}

item set 45 
jump-statement -> goto-statement . 
transitions ->  {}

item set 46 
jump-statement -> return-statement . 
transitions ->  {}

item set 47 
jump-statement -> throw-statement . 
transitions ->  {}

item set 48 
try-statement -> TRY .block catch-clauses
try-statement -> TRY .block finally-clause
try-statement -> TRY .block catch-clauses finally-clause
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":179,"OPEN_BRACE":7}

item set 49 
checked-statement -> CHECKED .block
checked-expression -> CHECKED .OPEN_PARENS expression CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":180,"OPEN_PARENS":181,"OPEN_BRACE":7}

item set 50 
unchecked-statement -> UNCHECKED .block
unchecked-expression -> UNCHECKED .OPEN_PARENS expression CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":182,"OPEN_PARENS":183,"OPEN_BRACE":7}

item set 51 
lock-statement -> LOCK .OPEN_PARENS expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":184}

item set 52 
using-statement -> USING .OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":185}

item set 53 
type -> value-type . 
transitions ->  {}

item set 54 
type -> reference-type . 
transitions ->  {}

item set 55 
statement-expression -> invocation-expression .
primary-no-array-creation-expression -> invocation-expression . 
transitions ->  {}

item set 56 
statement-expression -> object-creation-expression .
primary-no-array-creation-expression -> object-creation-expression . 
transitions ->  {}

item set 57 
statement-expression -> assignment . 
transitions ->  {}

item set 58 
statement-expression -> post-increment-expression .
primary-no-array-creation-expression -> post-increment-expression . 
transitions ->  {}

item set 59 
statement-expression -> post-decrement-expression .
primary-no-array-creation-expression -> post-decrement-expression . 
transitions ->  {}

item set 60 
statement-expression -> pre-increment-expression .
unary-expression -> pre-increment-expression . 
transitions ->  {}

item set 61 
statement-expression -> pre-decrement-expression .
unary-expression -> pre-decrement-expression . 
transitions ->  {}

item set 62 
if-statement -> IF .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> IF .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement 
transitions ->  {"OPEN_PARENS":186}

item set 63 
switch-statement -> SWITCH .OPEN_PARENS expression CLOSE_PARENS switch-block 
transitions ->  {"OPEN_PARENS":187}

item set 64 
while-statement -> WHILE .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":188}

item set 65 
do-statement -> DO .embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":189,"block":22,"empty-statement":23,"expression-statement":24,"selection-statement":25,"iteration-statement":26,"jump-statement":27,"try-statement":28,"checked-statement":29,"unchecked-statement":30,"lock-statement":31,"using-statement":32,"OPEN_BRACE":7,"SEMICOLON":35,"statement-expression":36,"if-statement":37,"switch-statement":38,"while-statement":39,"do-statement":40,"for-statement":41,"foreach-statement":42,"break-statement":43,"continue-statement":44,"goto-statement":45,"return-statement":46,"throw-statement":47,"TRY":48,"CHECKED":49,"UNCHECKED":50,"LOCK":51,"USING":52,"invocation-expression":55,"object-creation-expression":56,"assignment":57,"post-increment-expression":58,"post-decrement-expression":59,"pre-increment-expression":60,"pre-decrement-expression":61,"IF":62,"SWITCH":63,"WHILE":64,"DO":65,"FOR":66,"FOREACH":67,"BREAK":68,"CONTINUE":69,"GOTO":70,"RETURN":71,"THROW":72,"primary-expression":79,"NEW":80,"unary-expression":81,"OP_INC":82,"OP_DEC":83,"primary-no-array-creation-expression":89,"array-creation-expression":90,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"cast-expression":96,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"element-access":104,"this-access":105,"base-access":106,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"OPEN_PARENS":112,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 66 
for-statement -> FOR .OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":206}

item set 67 
foreach-statement -> FOREACH .OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":207}

item set 68 
break-statement -> BREAK .SEMICOLON 
transitions ->  {"SEMICOLON":208}

item set 69 
continue-statement -> CONTINUE .SEMICOLON 
transitions ->  {"SEMICOLON":209}

item set 70 
goto-statement -> GOTO .IDENTIFIER SEMICOLON
goto-statement -> GOTO .CASE constant-expression SEMICOLON
goto-statement -> GOTO .DEFAULT SEMICOLON 
transitions ->  {"IDENTIFIER":210,"CASE":211,"DEFAULT":212}

item set 71 
return-statement -> RETURN .SEMICOLON
return-statement -> RETURN .expression SEMICOLON
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":213,"expression":214,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 72 
throw-statement -> THROW .SEMICOLON
throw-statement -> THROW .expression SEMICOLON
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":236,"expression":237,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 73 
value-type -> struct-type . 
transitions ->  {}

item set 74 
value-type -> enum-type . 
transitions ->  {}

item set 75 
reference-type -> class-type . 
transitions ->  {}

item set 76 
reference-type -> interface-type . 
transitions ->  {}

item set 77 
reference-type -> array-type . 
transitions ->  {}

item set 78 
reference-type -> delegate-type . 
transitions ->  {}

item set 79 
invocation-expression -> primary-expression .OPEN_PARENS CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
post-increment-expression -> primary-expression .OP_INC
post-decrement-expression -> primary-expression .OP_DEC
unary-expression -> primary-expression .
member-access -> primary-expression .DOT IDENTIFIER 
transitions ->  {"OPEN_PARENS":238,"OP_INC":239,"OP_DEC":240,"DOT":241}

item set 80 
object-creation-expression -> NEW .type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> NEW .type OPEN_PARENS argument-list CLOSE_PARENS
array-creation-expression -> NEW .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> NEW .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> NEW .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> NEW .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> NEW .array-type array-initializer
delegate-creation-expression -> NEW .delegate-type OPEN_PARENS expression CLOSE_PARENS
type -> .value-type
type -> .reference-type
non-array-type -> .type
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
type-name -> .namespace-or-type-name
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
simple-type -> .numeric-type
simple-type -> .BOOL
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":242,"non-array-type":243,"array-type":244,"delegate-type":245,"value-type":53,"reference-type":54,"type-name":84,"struct-type":73,"enum-type":74,"class-type":75,"interface-type":76,"namespace-or-type-name":97,"simple-type":85,"OBJECT":163,"STRING":164,"IDENTIFIER":152,"numeric-type":98,"BOOL":165,"integral-type":113,"floating-point-type":114,"DECIMAL":166,"SBYTE":167,"BYTE":168,"SHORT":169,"USHORT":170,"INT":171,"UINT":172,"LONG":173,"ULONG":174,"CHAR":175,"FLOAT":176,"DOUBLE":177}

item set 81 
assignment -> unary-expression .assignment-operator expression
assignment-operator -> .ASSIGN
assignment-operator -> .OP_ADD_ASSIGNMENT
assignment-operator -> .OP_SUB_ASSIGNMENT
assignment-operator -> .OP_MULT_ASSIGNMENT
assignment-operator -> .OP_DIV_ASSIGNMENT
assignment-operator -> .OP_MOD_ASSIGNMENT
assignment-operator -> .OP_AND_ASSIGNMENT
assignment-operator -> .OP_OR_ASSIGNMENT
assignment-operator -> .OP_XOR_ASSIGNMENT
assignment-operator -> .OP_LEFT_SHIFT_ASSIGNMENT
assignment-operator -> .RIGHT_SHIFT_ASSIGNMENT 
transitions ->  {"assignment-operator":246,"ASSIGN":247,"OP_ADD_ASSIGNMENT":248,"OP_SUB_ASSIGNMENT":249,"OP_MULT_ASSIGNMENT":250,"OP_DIV_ASSIGNMENT":251,"OP_MOD_ASSIGNMENT":252,"OP_AND_ASSIGNMENT":253,"OP_OR_ASSIGNMENT":254,"OP_XOR_ASSIGNMENT":255,"OP_LEFT_SHIFT_ASSIGNMENT":256,"RIGHT_SHIFT_ASSIGNMENT":257}

item set 82 
pre-increment-expression -> OP_INC .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":258,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 83 
pre-decrement-expression -> OP_DEC .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":259,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 84 
struct-type -> type-name .
enum-type -> type-name .
class-type -> type-name .
interface-type -> type-name .
delegate-type -> type-name . 
transitions ->  {}

item set 85 
struct-type -> simple-type . 
transitions ->  {}

item set 86 
class-type -> OBJECT .
predefined-type -> OBJECT . 
transitions ->  {}

item set 87 
class-type -> STRING .
predefined-type -> STRING . 
transitions ->  {}

item set 88 
array-type -> non-array-type .rank-specifiers
rank-specifiers -> .rank-specifier
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET 
transitions ->  {"rank-specifiers":260,"rank-specifier":261,"OPEN_BRACKET":262}

item set 89 
primary-expression -> primary-no-array-creation-expression .
element-access -> primary-no-array-creation-expression .OPEN_BRACKET expression-list CLOSE_BRACKET 
transitions ->  {"OPEN_BRACKET":263}

item set 90 
primary-expression -> array-creation-expression . 
transitions ->  {}

item set 91 
unary-expression -> PLUS .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":264,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 92 
unary-expression -> MINUS .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":265,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 93 
unary-expression -> BANG .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":266,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 94 
unary-expression -> TILDE .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":267,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 95 
unary-expression -> STAR .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":268,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 96 
unary-expression -> cast-expression . 
transitions ->  {}

item set 97 
type-name -> namespace-or-type-name .
namespace-or-type-name -> namespace-or-type-name .DOT IDENTIFIER 
transitions ->  {"DOT":269}

item set 98 
simple-type -> numeric-type . 
transitions ->  {}

item set 99 
simple-type -> BOOL .
predefined-type -> BOOL . 
transitions ->  {}

item set 100 
primary-no-array-creation-expression -> literal . 
transitions ->  {}

item set 101 
primary-no-array-creation-expression -> simple-name . 
transitions ->  {}

item set 102 
primary-no-array-creation-expression -> parenthesized-expression . 
transitions ->  {}

item set 103 
primary-no-array-creation-expression -> member-access . 
transitions ->  {}

item set 104 
primary-no-array-creation-expression -> element-access . 
transitions ->  {}

item set 105 
primary-no-array-creation-expression -> this-access . 
transitions ->  {}

item set 106 
primary-no-array-creation-expression -> base-access . 
transitions ->  {}

item set 107 
primary-no-array-creation-expression -> delegate-creation-expression . 
transitions ->  {}

item set 108 
primary-no-array-creation-expression -> typeof-expression . 
transitions ->  {}

item set 109 
primary-no-array-creation-expression -> sizeof-expression . 
transitions ->  {}

item set 110 
primary-no-array-creation-expression -> checked-expression . 
transitions ->  {}

item set 111 
primary-no-array-creation-expression -> unchecked-expression . 
transitions ->  {}

item set 112 
cast-expression -> OPEN_PARENS .type CLOSE_PARENS unary-expression
parenthesized-expression -> OPEN_PARENS .expression CLOSE_PARENS
type -> .value-type
type -> .reference-type
expression -> .conditional-expression
expression -> .assignment
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"type":270,"expression":271,"value-type":53,"reference-type":54,"conditional-expression":215,"assignment":216,"struct-type":73,"enum-type":74,"class-type":75,"interface-type":76,"array-type":77,"delegate-type":78,"conditional-or-expression":217,"unary-expression":218,"type-name":84,"simple-type":85,"OBJECT":86,"STRING":87,"non-array-type":88,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"namespace-or-type-name":97,"numeric-type":98,"BOOL":99,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"IDENTIFIER":272,"integral-type":113,"floating-point-type":114,"DECIMAL":115,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"SBYTE":126,"BYTE":127,"SHORT":128,"USHORT":129,"INT":130,"UINT":131,"LONG":132,"ULONG":133,"CHAR":134,"FLOAT":135,"DOUBLE":136,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 113 
numeric-type -> integral-type . 
transitions ->  {}

item set 114 
numeric-type -> floating-point-type . 
transitions ->  {}

item set 115 
numeric-type -> DECIMAL .
predefined-type -> DECIMAL . 
transitions ->  {}

item set 116 
literal -> BOOLEAN_LITERAL . 
transitions ->  {}

item set 117 
literal -> REAL_LITERAL . 
transitions ->  {}

item set 118 
literal -> INTEGER_LITERAL . 
transitions ->  {}

item set 119 
literal -> STRING_LITERAL . 
transitions ->  {}

item set 120 
literal -> CHARACTER_LITERAL . 
transitions ->  {}

item set 121 
literal -> NULL . 
transitions ->  {}

item set 122 
member-access -> predefined-type .DOT IDENTIFIER 
transitions ->  {"DOT":273}

item set 123 
this-access -> THIS . 
transitions ->  {}

item set 124 
base-access -> base .DOT IDENTIFIER
base-access -> base .OPEN_BRACKET expression-list CLOSE_BRACKET 
transitions ->  {"DOT":274,"OPEN_BRACKET":275}

item set 125 
typeof-expression -> TYPEOF .OPEN_PARENS type CLOSE_PARENS
typeof-expression -> TYPEOF .OPEN_PARENS VOID CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":276}

item set 126 
integral-type -> SBYTE .
predefined-type -> SBYTE . 
transitions ->  {}

item set 127 
integral-type -> BYTE .
predefined-type -> BYTE . 
transitions ->  {}

item set 128 
integral-type -> SHORT .
predefined-type -> SHORT . 
transitions ->  {}

item set 129 
integral-type -> USHORT .
predefined-type -> USHORT . 
transitions ->  {}

item set 130 
integral-type -> INT .
predefined-type -> INT . 
transitions ->  {}

item set 131 
integral-type -> UINT .
predefined-type -> UINT . 
transitions ->  {}

item set 132 
integral-type -> LONG .
predefined-type -> LONG . 
transitions ->  {}

item set 133 
integral-type -> ULONG .
predefined-type -> ULONG . 
transitions ->  {}

item set 134 
integral-type -> CHAR .
predefined-type -> CHAR . 
transitions ->  {}

item set 135 
floating-point-type -> FLOAT .
predefined-type -> FLOAT . 
transitions ->  {}

item set 136 
floating-point-type -> DOUBLE .
predefined-type -> DOUBLE . 
transitions ->  {}

item set 137 
BOOLEAN_LITERAL -> TRUE . 
transitions ->  {}

item set 138 
BOOLEAN_LITERAL -> FALSE . 
transitions ->  {}

item set 139 
attribute-section -> OPEN_BRACKET attribute-list .CLOSE_BRACKET
attribute-section -> OPEN_BRACKET attribute-list .COMMA CLOSE_BRACKET
attribute-list -> attribute-list .COMMA attribute 
transitions ->  {"CLOSE_BRACKET":277,"COMMA":278}

item set 140 
attribute-section -> OPEN_BRACKET attribute-target-specifier .attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET attribute-target-specifier .attribute-list COMMA CLOSE_BRACKET
attribute-list -> .attribute
attribute-list -> .attribute-list COMMA attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER 
transitions ->  {"attribute-list":279,"attribute":141,"attribute-name":143,"type-name":151,"namespace-or-type-name":97,"IDENTIFIER":152}

item set 141 
attribute-list -> attribute . 
transitions ->  {}

item set 142 
attribute-target-specifier -> attribute-target .COLON 
transitions ->  {"COLON":280}

item set 143 
attribute -> attribute-name .
attribute -> attribute-name .attribute-arguments
attribute-arguments -> .OPEN_PARENS CLOSE_PARENS
attribute-arguments -> .OPEN_PARENS positional-argument-list CLOSE_PARENS
attribute-arguments -> .OPEN_PARENS positional-argument-list COMMA named-argument-list CLOSE_PARENS
attribute-arguments -> .OPEN_PARENS named-argument-list CLOSE_PARENS 
transitions ->  {"attribute-arguments":281,"OPEN_PARENS":282}

item set 144 
attribute-target -> FIELD . 
transitions ->  {}

item set 145 
attribute-target -> EVENT . 
transitions ->  {}

item set 146 
attribute-target -> METHOD . 
transitions ->  {}

item set 147 
attribute-target -> PARAM . 
transitions ->  {}

item set 148 
attribute-target -> PROPERTY . 
transitions ->  {}

item set 149 
attribute-target -> RETURN . 
transitions ->  {}

item set 150 
attribute-target -> TYPE . 
transitions ->  {}

item set 151 
attribute-name -> type-name . 
transitions ->  {}

item set 152 
namespace-or-type-name -> IDENTIFIER . 
transitions ->  {}

item set 153 
block -> OPEN_BRACE statement-list CLOSE_BRACE . 
transitions ->  {}

item set 154 
statement-list -> statement-list statement . 
transitions ->  {}

item set 155 
labeled-statement -> IDENTIFIER COLON .statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"statement":283,"labeled-statement":16,"declaration-statement":17,"embedded-statement":18,"IDENTIFIER":19,"local-variable-declaration":20,"local-constant-declaration":21,"block":22,"empty-statement":23,"expression-statement":24,"selection-statement":25,"iteration-statement":26,"jump-statement":27,"try-statement":28,"checked-statement":29,"unchecked-statement":30,"lock-statement":31,"using-statement":32,"type":33,"CONST":34,"OPEN_BRACE":7,"SEMICOLON":35,"statement-expression":36,"if-statement":37,"switch-statement":38,"while-statement":39,"do-statement":40,"for-statement":41,"foreach-statement":42,"break-statement":43,"continue-statement":44,"goto-statement":45,"return-statement":46,"throw-statement":47,"TRY":48,"CHECKED":49,"UNCHECKED":50,"LOCK":51,"USING":52,"value-type":53,"reference-type":54,"invocation-expression":55,"object-creation-expression":56,"assignment":57,"post-increment-expression":58,"post-decrement-expression":59,"pre-increment-expression":60,"pre-decrement-expression":61,"IF":62,"SWITCH":63,"WHILE":64,"DO":65,"FOR":66,"FOREACH":67,"BREAK":68,"CONTINUE":69,"GOTO":70,"RETURN":71,"THROW":72,"struct-type":73,"enum-type":74,"class-type":75,"interface-type":76,"array-type":77,"delegate-type":78,"primary-expression":79,"NEW":80,"unary-expression":81,"OP_INC":82,"OP_DEC":83,"type-name":84,"simple-type":85,"OBJECT":86,"STRING":87,"non-array-type":88,"primary-no-array-creation-expression":89,"array-creation-expression":90,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"cast-expression":96,"namespace-or-type-name":97,"numeric-type":98,"BOOL":99,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"element-access":104,"this-access":105,"base-access":106,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"OPEN_PARENS":112,"integral-type":113,"floating-point-type":114,"DECIMAL":115,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"SBYTE":126,"BYTE":127,"SHORT":128,"USHORT":129,"INT":130,"UINT":131,"LONG":132,"ULONG":133,"CHAR":134,"FLOAT":135,"DOUBLE":136,"TRUE":137,"FALSE":138}

item set 156 
declaration-statement -> local-variable-declaration SEMICOLON . 
transitions ->  {}

item set 157 
declaration-statement -> local-constant-declaration SEMICOLON . 
transitions ->  {}

item set 158 
local-variable-declaration -> type local-variable-declarators .
local-variable-declarators -> local-variable-declarators .COMMA local-variable-declarator 
transitions ->  {"COMMA":284}

item set 159 
local-variable-declarators -> local-variable-declarator . 
transitions ->  {}

item set 160 
local-variable-declarator -> local-variable .
local-variable-declarator -> local-variable .ASSIGN local-variable-initializer 
transitions ->  {"ASSIGN":285}

item set 161 
local-variable -> IDENTIFIER . 
transitions ->  {}

item set 162 
local-constant-declaration -> CONST type .constant-declarators
non-array-type -> type .
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarator -> .IDENTIFIER ASSIGN constant-expression 
transitions ->  {"constant-declarators":286,"constant-declarator":287,"IDENTIFIER":288}

item set 163 
class-type -> OBJECT . 
transitions ->  {}

item set 164 
class-type -> STRING . 
transitions ->  {}

item set 165 
simple-type -> BOOL . 
transitions ->  {}

item set 166 
numeric-type -> DECIMAL . 
transitions ->  {}

item set 167 
integral-type -> SBYTE . 
transitions ->  {}

item set 168 
integral-type -> BYTE . 
transitions ->  {}

item set 169 
integral-type -> SHORT . 
transitions ->  {}

item set 170 
integral-type -> USHORT . 
transitions ->  {}

item set 171 
integral-type -> INT . 
transitions ->  {}

item set 172 
integral-type -> UINT . 
transitions ->  {}

item set 173 
integral-type -> LONG . 
transitions ->  {}

item set 174 
integral-type -> ULONG . 
transitions ->  {}

item set 175 
integral-type -> CHAR . 
transitions ->  {}

item set 176 
floating-point-type -> FLOAT . 
transitions ->  {}

item set 177 
floating-point-type -> DOUBLE . 
transitions ->  {}

item set 178 
expression-statement -> statement-expression SEMICOLON . 
transitions ->  {}

item set 179 
try-statement -> TRY block .catch-clauses
try-statement -> TRY block .finally-clause
try-statement -> TRY block .catch-clauses finally-clause
catch-clauses -> .specific-catch-clauses
catch-clauses -> .general-catch-clause
catch-clauses -> .specific-catch-clauses general-catch-clause
finally-clause -> .FINALLY block
specific-catch-clauses -> .specific-catch-clause
specific-catch-clauses -> .specific-catch-clauses specific-catch-clause
general-catch-clause -> .CATCH block
specific-catch-clause -> .CATCH OPEN_PARENS class-type CLOSE_PARENS block
specific-catch-clause -> .CATCH OPEN_PARENS class-type IDENTIFIER CLOSE_PARENS block 
transitions ->  {"catch-clauses":289,"finally-clause":290,"specific-catch-clauses":291,"general-catch-clause":292,"FINALLY":293,"specific-catch-clause":294,"CATCH":295}

item set 180 
checked-statement -> CHECKED block . 
transitions ->  {}

item set 181 
checked-expression -> CHECKED OPEN_PARENS .expression CLOSE_PARENS
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":296,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 182 
unchecked-statement -> UNCHECKED block . 
transitions ->  {}

item set 183 
unchecked-expression -> UNCHECKED OPEN_PARENS .expression CLOSE_PARENS
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":297,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 184 
lock-statement -> LOCK OPEN_PARENS .expression CLOSE_PARENS embedded-statement
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":298,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 185 
using-statement -> USING OPEN_PARENS .resource-acquisition CLOSE_PARENS embedded-statement
resource-acquisition -> .local-variable-declaration
resource-acquisition -> .expression
local-variable-declaration -> .type local-variable-declarators
expression -> .conditional-expression
expression -> .assignment
type -> .value-type
type -> .reference-type
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"resource-acquisition":299,"local-variable-declaration":300,"expression":301,"type":33,"conditional-expression":215,"assignment":216,"value-type":53,"reference-type":54,"conditional-or-expression":217,"unary-expression":218,"struct-type":73,"enum-type":74,"class-type":75,"interface-type":76,"array-type":77,"delegate-type":78,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"type-name":84,"simple-type":85,"OBJECT":86,"STRING":87,"non-array-type":88,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"namespace-or-type-name":97,"numeric-type":98,"BOOL":99,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"IDENTIFIER":272,"integral-type":113,"floating-point-type":114,"DECIMAL":115,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"SBYTE":126,"BYTE":127,"SHORT":128,"USHORT":129,"INT":130,"UINT":131,"LONG":132,"ULONG":133,"CHAR":134,"FLOAT":135,"DOUBLE":136,"equality-expression":231,"TRUE":137,"FALSE":138,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 186 
if-statement -> IF OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement
if-statement -> IF OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":302,"expression":303,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 187 
switch-statement -> SWITCH OPEN_PARENS .expression CLOSE_PARENS switch-block
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":304,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 188 
while-statement -> WHILE OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":305,"expression":303,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 189 
do-statement -> DO embedded-statement .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON 
transitions ->  {"WHILE":306}

item set 190 
simple-name -> IDENTIFIER . 
transitions ->  {}

item set 191 
predefined-type -> BOOL . 
transitions ->  {}

item set 192 
predefined-type -> BYTE . 
transitions ->  {}

item set 193 
predefined-type -> CHAR . 
transitions ->  {}

item set 194 
predefined-type -> DECIMAL . 
transitions ->  {}

item set 195 
predefined-type -> DOUBLE . 
transitions ->  {}

item set 196 
predefined-type -> FLOAT . 
transitions ->  {}

item set 197 
predefined-type -> INT . 
transitions ->  {}

item set 198 
predefined-type -> LONG . 
transitions ->  {}

item set 199 
predefined-type -> OBJECT . 
transitions ->  {}

item set 200 
predefined-type -> SBYTE . 
transitions ->  {}

item set 201 
predefined-type -> SHORT . 
transitions ->  {}

item set 202 
predefined-type -> STRING . 
transitions ->  {}

item set 203 
predefined-type -> UINT . 
transitions ->  {}

item set 204 
predefined-type -> ULONG . 
transitions ->  {}

item set 205 
predefined-type -> USHORT . 
transitions ->  {}

item set 206 
for-statement -> FOR OPEN_PARENS .SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-initializer -> .local-variable-declaration
for-initializer -> .statement-expression-list
local-variable-declaration -> .type local-variable-declarators
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"SEMICOLON":307,"for-initializer":308,"local-variable-declaration":309,"statement-expression-list":310,"type":33,"statement-expression":311,"value-type":53,"reference-type":54,"invocation-expression":55,"object-creation-expression":56,"assignment":57,"post-increment-expression":58,"post-decrement-expression":59,"pre-increment-expression":60,"pre-decrement-expression":61,"struct-type":73,"enum-type":74,"class-type":75,"interface-type":76,"array-type":77,"delegate-type":78,"primary-expression":79,"NEW":80,"unary-expression":81,"OP_INC":82,"OP_DEC":83,"type-name":84,"simple-type":85,"OBJECT":86,"STRING":87,"non-array-type":88,"primary-no-array-creation-expression":89,"array-creation-expression":90,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"cast-expression":96,"namespace-or-type-name":97,"numeric-type":98,"BOOL":99,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"element-access":104,"this-access":105,"base-access":106,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"OPEN_PARENS":112,"IDENTIFIER":272,"integral-type":113,"floating-point-type":114,"DECIMAL":115,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"SBYTE":126,"BYTE":127,"SHORT":128,"USHORT":129,"INT":130,"UINT":131,"LONG":132,"ULONG":133,"CHAR":134,"FLOAT":135,"DOUBLE":136,"TRUE":137,"FALSE":138}

item set 207 
foreach-statement -> FOREACH OPEN_PARENS .type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":312,"value-type":53,"reference-type":54,"struct-type":73,"enum-type":74,"class-type":75,"interface-type":76,"array-type":77,"delegate-type":78,"type-name":84,"simple-type":85,"OBJECT":163,"STRING":164,"non-array-type":88,"namespace-or-type-name":97,"numeric-type":98,"BOOL":165,"IDENTIFIER":152,"integral-type":113,"floating-point-type":114,"DECIMAL":166,"SBYTE":167,"BYTE":168,"SHORT":169,"USHORT":170,"INT":171,"UINT":172,"LONG":173,"ULONG":174,"CHAR":175,"FLOAT":176,"DOUBLE":177}

item set 208 
break-statement -> BREAK SEMICOLON . 
transitions ->  {}

item set 209 
continue-statement -> CONTINUE SEMICOLON . 
transitions ->  {}

item set 210 
goto-statement -> GOTO IDENTIFIER .SEMICOLON 
transitions ->  {"SEMICOLON":313}

item set 211 
goto-statement -> GOTO CASE .constant-expression SEMICOLON
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":314,"expression":315,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 212 
goto-statement -> GOTO DEFAULT .SEMICOLON 
transitions ->  {"SEMICOLON":316}

item set 213 
return-statement -> RETURN SEMICOLON . 
transitions ->  {}

item set 214 
return-statement -> RETURN expression .SEMICOLON 
transitions ->  {"SEMICOLON":317}

item set 215 
expression -> conditional-expression . 
transitions ->  {}

item set 216 
expression -> assignment . 
transitions ->  {}

item set 217 
conditional-expression -> conditional-or-expression .
conditional-expression -> conditional-or-expression .INTERR expression COLON expression
conditional-or-expression -> conditional-or-expression .OP_OR conditional-and-expression 
transitions ->  {"INTERR":318,"OP_OR":319}

item set 218 
assignment -> unary-expression .assignment-operator expression
multiplicative-expression -> unary-expression .
assignment-operator -> .ASSIGN
assignment-operator -> .OP_ADD_ASSIGNMENT
assignment-operator -> .OP_SUB_ASSIGNMENT
assignment-operator -> .OP_MULT_ASSIGNMENT
assignment-operator -> .OP_DIV_ASSIGNMENT
assignment-operator -> .OP_MOD_ASSIGNMENT
assignment-operator -> .OP_AND_ASSIGNMENT
assignment-operator -> .OP_OR_ASSIGNMENT
assignment-operator -> .OP_XOR_ASSIGNMENT
assignment-operator -> .OP_LEFT_SHIFT_ASSIGNMENT
assignment-operator -> .RIGHT_SHIFT_ASSIGNMENT 
transitions ->  {"assignment-operator":246,"ASSIGN":247,"OP_ADD_ASSIGNMENT":248,"OP_SUB_ASSIGNMENT":249,"OP_MULT_ASSIGNMENT":250,"OP_DIV_ASSIGNMENT":251,"OP_MOD_ASSIGNMENT":252,"OP_AND_ASSIGNMENT":253,"OP_OR_ASSIGNMENT":254,"OP_XOR_ASSIGNMENT":255,"OP_LEFT_SHIFT_ASSIGNMENT":256,"RIGHT_SHIFT_ASSIGNMENT":257}

item set 219 
conditional-or-expression -> conditional-and-expression .
conditional-and-expression -> conditional-and-expression .OP_AND inclusive-or-expression 
transitions ->  {"OP_AND":320}

item set 220 
unary-expression -> pre-increment-expression . 
transitions ->  {}

item set 221 
unary-expression -> pre-decrement-expression . 
transitions ->  {}

item set 222 
conditional-and-expression -> inclusive-or-expression .
inclusive-or-expression -> inclusive-or-expression .BITWISE_OR exclusive-or-expression 
transitions ->  {"BITWISE_OR":321}

item set 223 
inclusive-or-expression -> exclusive-or-expression .
exclusive-or-expression -> exclusive-or-expression .CARET and-expression 
transitions ->  {"CARET":322}

item set 224 
primary-no-array-creation-expression -> invocation-expression . 
transitions ->  {}

item set 225 
primary-no-array-creation-expression -> post-increment-expression . 
transitions ->  {}

item set 226 
primary-no-array-creation-expression -> post-decrement-expression . 
transitions ->  {}

item set 227 
primary-no-array-creation-expression -> object-creation-expression . 
transitions ->  {}

item set 228 
exclusive-or-expression -> and-expression .
and-expression -> and-expression .AMP equality-expression 
transitions ->  {"AMP":323}

item set 229 
checked-expression -> CHECKED .OPEN_PARENS expression CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":181}

item set 230 
unchecked-expression -> UNCHECKED .OPEN_PARENS expression CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":183}

item set 231 
and-expression -> equality-expression .
equality-expression -> equality-expression .OP_EQ relational-expression
equality-expression -> equality-expression .OP_NE relational-expression 
transitions ->  {"OP_EQ":324,"OP_NE":325}

item set 232 
equality-expression -> relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":326,"GT":327,"OP_LE":328,"OP_GE":329,"IS":330,"AS":331}

item set 233 
relational-expression -> shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":332,"RIGHT_SHIFT":333}

item set 234 
shift-expression -> additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":334,"MINUS":335}

item set 235 
additive-expression -> multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":336,"DIV":337,"PERCENT":338}

item set 236 
throw-statement -> THROW SEMICOLON . 
transitions ->  {}

item set 237 
throw-statement -> THROW expression .SEMICOLON 
transitions ->  {"SEMICOLON":339}

item set 238 
invocation-expression -> primary-expression OPEN_PARENS .CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .argument-list CLOSE_PARENS
argument-list -> .argument
argument-list -> .argument-list COMMA argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":340,"argument-list":341,"argument":342,"expression":343,"REF":344,"OUT":345,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 239 
post-increment-expression -> primary-expression OP_INC . 
transitions ->  {}

item set 240 
post-decrement-expression -> primary-expression OP_DEC . 
transitions ->  {}

item set 241 
member-access -> primary-expression DOT .IDENTIFIER 
transitions ->  {"IDENTIFIER":346}

item set 242 
object-creation-expression -> NEW type .OPEN_PARENS CLOSE_PARENS
object-creation-expression -> NEW type .OPEN_PARENS argument-list CLOSE_PARENS
non-array-type -> type . 
transitions ->  {"OPEN_PARENS":347}

item set 243 
array-creation-expression -> NEW non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> NEW non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> NEW non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> NEW non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-type -> non-array-type .rank-specifiers
rank-specifiers -> .rank-specifier
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET 
transitions ->  {"OPEN_BRACKET":348,"rank-specifiers":260,"rank-specifier":261}

item set 244 
array-creation-expression -> NEW array-type .array-initializer
reference-type -> array-type .
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE 
transitions ->  {"array-initializer":349,"OPEN_BRACE":350}

item set 245 
delegate-creation-expression -> NEW delegate-type .OPEN_PARENS expression CLOSE_PARENS
reference-type -> delegate-type . 
transitions ->  {"OPEN_PARENS":351}

item set 246 
assignment -> unary-expression assignment-operator .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":352,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 247 
assignment-operator -> ASSIGN . 
transitions ->  {}

item set 248 
assignment-operator -> OP_ADD_ASSIGNMENT . 
transitions ->  {}

item set 249 
assignment-operator -> OP_SUB_ASSIGNMENT . 
transitions ->  {}

item set 250 
assignment-operator -> OP_MULT_ASSIGNMENT . 
transitions ->  {}

item set 251 
assignment-operator -> OP_DIV_ASSIGNMENT . 
transitions ->  {}

item set 252 
assignment-operator -> OP_MOD_ASSIGNMENT . 
transitions ->  {}

item set 253 
assignment-operator -> OP_AND_ASSIGNMENT . 
transitions ->  {}

item set 254 
assignment-operator -> OP_OR_ASSIGNMENT . 
transitions ->  {}

item set 255 
assignment-operator -> OP_XOR_ASSIGNMENT . 
transitions ->  {}

item set 256 
assignment-operator -> OP_LEFT_SHIFT_ASSIGNMENT . 
transitions ->  {}

item set 257 
assignment-operator -> RIGHT_SHIFT_ASSIGNMENT . 
transitions ->  {}

item set 258 
pre-increment-expression -> OP_INC unary-expression . 
transitions ->  {}

item set 259 
pre-decrement-expression -> OP_DEC unary-expression . 
transitions ->  {}

item set 260 
array-type -> non-array-type rank-specifiers .
rank-specifiers -> rank-specifiers .rank-specifier
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET 
transitions ->  {"rank-specifier":353,"OPEN_BRACKET":262}

item set 261 
rank-specifiers -> rank-specifier . 
transitions ->  {}

item set 262 
rank-specifier -> OPEN_BRACKET .CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .dim-separators CLOSE_BRACKET
dim-separators -> .COMMA
dim-separators -> .dim-separators COMMA 
transitions ->  {"CLOSE_BRACKET":354,"dim-separators":355,"COMMA":356}

item set 263 
element-access -> primary-no-array-creation-expression OPEN_BRACKET .expression-list CLOSE_BRACKET
expression-list -> .expression
expression-list -> .expression-list COMMA expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression-list":357,"expression":358,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 264 
unary-expression -> PLUS unary-expression . 
transitions ->  {}

item set 265 
unary-expression -> MINUS unary-expression . 
transitions ->  {}

item set 266 
unary-expression -> BANG unary-expression . 
transitions ->  {}

item set 267 
unary-expression -> TILDE unary-expression . 
transitions ->  {}

item set 268 
unary-expression -> STAR unary-expression . 
transitions ->  {}

item set 269 
namespace-or-type-name -> namespace-or-type-name DOT .IDENTIFIER 
transitions ->  {"IDENTIFIER":359}

item set 270 
cast-expression -> OPEN_PARENS type .CLOSE_PARENS unary-expression
non-array-type -> type . 
transitions ->  {"CLOSE_PARENS":360}

item set 271 
parenthesized-expression -> OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":361}

item set 272 
namespace-or-type-name -> IDENTIFIER .
simple-name -> IDENTIFIER . 
transitions ->  {}

item set 273 
member-access -> predefined-type DOT .IDENTIFIER 
transitions ->  {"IDENTIFIER":362}

item set 274 
base-access -> base DOT .IDENTIFIER 
transitions ->  {"IDENTIFIER":363}

item set 275 
base-access -> base OPEN_BRACKET .expression-list CLOSE_BRACKET
expression-list -> .expression
expression-list -> .expression-list COMMA expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression-list":364,"expression":358,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 276 
typeof-expression -> TYPEOF OPEN_PARENS .type CLOSE_PARENS
typeof-expression -> TYPEOF OPEN_PARENS .VOID CLOSE_PARENS
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":365,"VOID":366,"value-type":53,"reference-type":54,"struct-type":73,"enum-type":74,"class-type":75,"interface-type":76,"array-type":77,"delegate-type":78,"type-name":84,"simple-type":85,"OBJECT":163,"STRING":164,"non-array-type":88,"namespace-or-type-name":97,"numeric-type":98,"BOOL":165,"IDENTIFIER":152,"integral-type":113,"floating-point-type":114,"DECIMAL":166,"SBYTE":167,"BYTE":168,"SHORT":169,"USHORT":170,"INT":171,"UINT":172,"LONG":173,"ULONG":174,"CHAR":175,"FLOAT":176,"DOUBLE":177}

item set 277 
attribute-section -> OPEN_BRACKET attribute-list CLOSE_BRACKET . 
transitions ->  {}

item set 278 
attribute-section -> OPEN_BRACKET attribute-list COMMA .CLOSE_BRACKET
attribute-list -> attribute-list COMMA .attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER 
transitions ->  {"CLOSE_BRACKET":367,"attribute":368,"attribute-name":143,"type-name":151,"namespace-or-type-name":97,"IDENTIFIER":152}

item set 279 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list .CLOSE_BRACKET
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list .COMMA CLOSE_BRACKET
attribute-list -> attribute-list .COMMA attribute 
transitions ->  {"CLOSE_BRACKET":369,"COMMA":370}

item set 280 
attribute-target-specifier -> attribute-target COLON . 
transitions ->  {}

item set 281 
attribute -> attribute-name attribute-arguments . 
transitions ->  {}

item set 282 
attribute-arguments -> OPEN_PARENS .CLOSE_PARENS
attribute-arguments -> OPEN_PARENS .positional-argument-list CLOSE_PARENS
attribute-arguments -> OPEN_PARENS .positional-argument-list COMMA named-argument-list CLOSE_PARENS
attribute-arguments -> OPEN_PARENS .named-argument-list CLOSE_PARENS
positional-argument-list -> .positional-argument
positional-argument-list -> .positional-argument-list COMMA positional-argument
named-argument-list -> .named-argument
named-argument-list -> .named-argument-list COMMA named-argument
positional-argument -> .attribute-argument-expression
named-argument -> .IDENTIFIER ASSIGN attribute-argument-expression
attribute-argument-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":371,"positional-argument-list":372,"named-argument-list":373,"positional-argument":374,"named-argument":375,"attribute-argument-expression":376,"IDENTIFIER":377,"expression":378,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 283 
labeled-statement -> IDENTIFIER COLON statement . 
transitions ->  {}

item set 284 
local-variable-declarators -> local-variable-declarators COMMA .local-variable-declarator
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
local-variable -> .
local-variable -> .IDENTIFIER 
transitions ->  {"local-variable-declarator":379,"local-variable":160,"IDENTIFIER":161}

item set 285 
local-variable-declarator -> local-variable ASSIGN .local-variable-initializer
local-variable-initializer -> .expression
local-variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"local-variable-initializer":380,"expression":381,"array-initializer":382,"conditional-expression":215,"assignment":216,"OPEN_BRACE":350,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 286 
local-constant-declaration -> CONST type constant-declarators .
constant-declarators -> constant-declarators .COMMA constant-declarator 
transitions ->  {"COMMA":383}

item set 287 
constant-declarators -> constant-declarator . 
transitions ->  {}

item set 288 
constant-declarator -> IDENTIFIER .ASSIGN constant-expression 
transitions ->  {"ASSIGN":384}

item set 289 
try-statement -> TRY block catch-clauses .
try-statement -> TRY block catch-clauses .finally-clause
finally-clause -> .FINALLY block 
transitions ->  {"finally-clause":385,"FINALLY":293}

item set 290 
try-statement -> TRY block finally-clause . 
transitions ->  {}

item set 291 
catch-clauses -> specific-catch-clauses .
catch-clauses -> specific-catch-clauses .general-catch-clause
specific-catch-clauses -> specific-catch-clauses .specific-catch-clause
general-catch-clause -> .CATCH block
specific-catch-clause -> .CATCH OPEN_PARENS class-type CLOSE_PARENS block
specific-catch-clause -> .CATCH OPEN_PARENS class-type IDENTIFIER CLOSE_PARENS block 
transitions ->  {"general-catch-clause":386,"specific-catch-clause":387,"CATCH":295}

item set 292 
catch-clauses -> general-catch-clause . 
transitions ->  {}

item set 293 
finally-clause -> FINALLY .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":388,"OPEN_BRACE":7}

item set 294 
specific-catch-clauses -> specific-catch-clause . 
transitions ->  {}

item set 295 
general-catch-clause -> CATCH .block
specific-catch-clause -> CATCH .OPEN_PARENS class-type CLOSE_PARENS block
specific-catch-clause -> CATCH .OPEN_PARENS class-type IDENTIFIER CLOSE_PARENS block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":389,"OPEN_PARENS":390,"OPEN_BRACE":7}

item set 296 
checked-expression -> CHECKED OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":391}

item set 297 
unchecked-expression -> UNCHECKED OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":392}

item set 298 
lock-statement -> LOCK OPEN_PARENS expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":393}

item set 299 
using-statement -> USING OPEN_PARENS resource-acquisition .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":394}

item set 300 
resource-acquisition -> local-variable-declaration . 
transitions ->  {}

item set 301 
resource-acquisition -> expression . 
transitions ->  {}

item set 302 
if-statement -> IF OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement
if-statement -> IF OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement ELSE embedded-statement 
transitions ->  {"CLOSE_PARENS":395}

item set 303 
boolean-expression -> expression .
boolean-expression -> expression . 
transitions ->  {}

item set 304 
switch-statement -> SWITCH OPEN_PARENS expression .CLOSE_PARENS switch-block 
transitions ->  {"CLOSE_PARENS":396}

item set 305 
while-statement -> WHILE OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":397}

item set 306 
do-statement -> DO embedded-statement WHILE .OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON 
transitions ->  {"OPEN_PARENS":398}

item set 307 
for-statement -> FOR OPEN_PARENS SEMICOLON .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-condition -> .boolean-expression
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":399,"for-condition":400,"boolean-expression":401,"expression":303,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 308 
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":402}

item set 309 
for-initializer -> local-variable-declaration . 
transitions ->  {}

item set 310 
for-initializer -> statement-expression-list .
statement-expression-list -> statement-expression-list .COMMA statement-expression 
transitions ->  {"COMMA":403}

item set 311 
statement-expression-list -> statement-expression . 
transitions ->  {}

item set 312 
foreach-statement -> FOREACH OPEN_PARENS type .IDENTIFIER IN expression CLOSE_PARENS embedded-statement
non-array-type -> type . 
transitions ->  {"IDENTIFIER":404}

item set 313 
goto-statement -> GOTO IDENTIFIER SEMICOLON . 
transitions ->  {}

item set 314 
goto-statement -> GOTO CASE constant-expression .SEMICOLON 
transitions ->  {"SEMICOLON":405}

item set 315 
constant-expression -> expression . 
transitions ->  {}

item set 316 
goto-statement -> GOTO DEFAULT SEMICOLON . 
transitions ->  {}

item set 317 
return-statement -> RETURN expression SEMICOLON . 
transitions ->  {}

item set 318 
conditional-expression -> conditional-or-expression INTERR .expression COLON expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":406,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 319 
conditional-or-expression -> conditional-or-expression OP_OR .conditional-and-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"conditional-and-expression":407,"inclusive-or-expression":222,"exclusive-or-expression":223,"and-expression":228,"equality-expression":231,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235,"unary-expression":408,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 320 
conditional-and-expression -> conditional-and-expression OP_AND .inclusive-or-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"inclusive-or-expression":409,"exclusive-or-expression":223,"and-expression":228,"equality-expression":231,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235,"unary-expression":408,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 321 
inclusive-or-expression -> inclusive-or-expression BITWISE_OR .exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"exclusive-or-expression":410,"and-expression":228,"equality-expression":231,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235,"unary-expression":408,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 322 
exclusive-or-expression -> exclusive-or-expression CARET .and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"and-expression":411,"equality-expression":231,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235,"unary-expression":408,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 323 
and-expression -> and-expression AMP .equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"equality-expression":412,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235,"unary-expression":408,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 324 
equality-expression -> equality-expression OP_EQ .relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"relational-expression":413,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235,"unary-expression":408,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 325 
equality-expression -> equality-expression OP_NE .relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"relational-expression":414,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235,"unary-expression":408,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 326 
relational-expression -> relational-expression LT .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"shift-expression":415,"additive-expression":234,"multiplicative-expression":235,"unary-expression":408,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 327 
relational-expression -> relational-expression GT .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"shift-expression":416,"additive-expression":234,"multiplicative-expression":235,"unary-expression":408,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 328 
relational-expression -> relational-expression OP_LE .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"shift-expression":417,"additive-expression":234,"multiplicative-expression":235,"unary-expression":408,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 329 
relational-expression -> relational-expression OP_GE .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"shift-expression":418,"additive-expression":234,"multiplicative-expression":235,"unary-expression":408,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 330 
relational-expression -> relational-expression IS .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":419,"value-type":53,"reference-type":54,"struct-type":73,"enum-type":74,"class-type":75,"interface-type":76,"array-type":77,"delegate-type":78,"type-name":84,"simple-type":85,"OBJECT":163,"STRING":164,"non-array-type":88,"namespace-or-type-name":97,"numeric-type":98,"BOOL":165,"IDENTIFIER":152,"integral-type":113,"floating-point-type":114,"DECIMAL":166,"SBYTE":167,"BYTE":168,"SHORT":169,"USHORT":170,"INT":171,"UINT":172,"LONG":173,"ULONG":174,"CHAR":175,"FLOAT":176,"DOUBLE":177}

item set 331 
relational-expression -> relational-expression AS .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":420,"value-type":53,"reference-type":54,"struct-type":73,"enum-type":74,"class-type":75,"interface-type":76,"array-type":77,"delegate-type":78,"type-name":84,"simple-type":85,"OBJECT":163,"STRING":164,"non-array-type":88,"namespace-or-type-name":97,"numeric-type":98,"BOOL":165,"IDENTIFIER":152,"integral-type":113,"floating-point-type":114,"DECIMAL":166,"SBYTE":167,"BYTE":168,"SHORT":169,"USHORT":170,"INT":171,"UINT":172,"LONG":173,"ULONG":174,"CHAR":175,"FLOAT":176,"DOUBLE":177}

item set 332 
shift-expression -> shift-expression OP_LEFT_SHIFT .additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"additive-expression":421,"multiplicative-expression":235,"unary-expression":408,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 333 
shift-expression -> shift-expression RIGHT_SHIFT .additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"additive-expression":422,"multiplicative-expression":235,"unary-expression":408,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 334 
additive-expression -> additive-expression PLUS .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"multiplicative-expression":423,"unary-expression":408,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 335 
additive-expression -> additive-expression MINUS .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"multiplicative-expression":424,"unary-expression":408,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 336 
multiplicative-expression -> multiplicative-expression STAR .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":425,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 337 
multiplicative-expression -> multiplicative-expression DIV .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":426,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 338 
multiplicative-expression -> multiplicative-expression PERCENT .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":427,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 339 
throw-statement -> THROW expression SEMICOLON . 
transitions ->  {}

item set 340 
invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 341 
invocation-expression -> primary-expression OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":428,"COMMA":429}

item set 342 
argument-list -> argument . 
transitions ->  {}

item set 343 
argument -> expression . 
transitions ->  {}

item set 344 
argument -> REF .variable-reference
variable-reference -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"variable-reference":430,"expression":431,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 345 
argument -> OUT .variable-reference
variable-reference -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"variable-reference":432,"expression":431,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 346 
member-access -> primary-expression DOT IDENTIFIER . 
transitions ->  {}

item set 347 
object-creation-expression -> NEW type OPEN_PARENS .CLOSE_PARENS
object-creation-expression -> NEW type OPEN_PARENS .argument-list CLOSE_PARENS
argument-list -> .argument
argument-list -> .argument-list COMMA argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":433,"argument-list":434,"argument":342,"expression":343,"REF":344,"OUT":345,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 348 
array-creation-expression -> NEW non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET
array-creation-expression -> NEW non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> NEW non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> NEW non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET rank-specifiers array-initializer
rank-specifier -> OPEN_BRACKET .CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .dim-separators CLOSE_BRACKET
expression-list -> .expression
expression-list -> .expression-list COMMA expression
dim-separators -> .COMMA
dim-separators -> .dim-separators COMMA
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression-list":435,"CLOSE_BRACKET":354,"dim-separators":355,"expression":358,"COMMA":356,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 349 
array-creation-expression -> NEW array-type array-initializer . 
transitions ->  {}

item set 350 
array-initializer -> OPEN_BRACE .CLOSE_BRACE
array-initializer -> OPEN_BRACE .variable-initializer-list CLOSE_BRACE
array-initializer -> OPEN_BRACE .variable-initializer-list COMMA CLOSE_BRACE
variable-initializer-list -> .variable-initializer
variable-initializer-list -> .variable-initializer-list COMMA variable-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACE":436,"variable-initializer-list":437,"variable-initializer":438,"expression":439,"array-initializer":440,"conditional-expression":215,"assignment":216,"OPEN_BRACE":350,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 351 
delegate-creation-expression -> NEW delegate-type OPEN_PARENS .expression CLOSE_PARENS
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":441,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 352 
assignment -> unary-expression assignment-operator expression . 
transitions ->  {}

item set 353 
rank-specifiers -> rank-specifiers rank-specifier . 
transitions ->  {}

item set 354 
rank-specifier -> OPEN_BRACKET CLOSE_BRACKET . 
transitions ->  {}

item set 355 
rank-specifier -> OPEN_BRACKET dim-separators .CLOSE_BRACKET
dim-separators -> dim-separators .COMMA 
transitions ->  {"CLOSE_BRACKET":442,"COMMA":443}

item set 356 
dim-separators -> COMMA . 
transitions ->  {}

item set 357 
element-access -> primary-no-array-creation-expression OPEN_BRACKET expression-list .CLOSE_BRACKET
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":444,"COMMA":445}

item set 358 
expression-list -> expression . 
transitions ->  {}

item set 359 
namespace-or-type-name -> namespace-or-type-name DOT IDENTIFIER . 
transitions ->  {}

item set 360 
cast-expression -> OPEN_PARENS type CLOSE_PARENS .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":446,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 361 
parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 362 
member-access -> predefined-type DOT IDENTIFIER . 
transitions ->  {}

item set 363 
base-access -> base DOT IDENTIFIER . 
transitions ->  {}

item set 364 
base-access -> base OPEN_BRACKET expression-list .CLOSE_BRACKET
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":447,"COMMA":445}

item set 365 
typeof-expression -> TYPEOF OPEN_PARENS type .CLOSE_PARENS
non-array-type -> type . 
transitions ->  {"CLOSE_PARENS":448}

item set 366 
typeof-expression -> TYPEOF OPEN_PARENS VOID .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":449}

item set 367 
attribute-section -> OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET . 
transitions ->  {}

item set 368 
attribute-list -> attribute-list COMMA attribute . 
transitions ->  {}

item set 369 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET . 
transitions ->  {}

item set 370 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list COMMA .CLOSE_BRACKET
attribute-list -> attribute-list COMMA .attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER 
transitions ->  {"CLOSE_BRACKET":450,"attribute":368,"attribute-name":143,"type-name":151,"namespace-or-type-name":97,"IDENTIFIER":152}

item set 371 
attribute-arguments -> OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 372 
attribute-arguments -> OPEN_PARENS positional-argument-list .CLOSE_PARENS
attribute-arguments -> OPEN_PARENS positional-argument-list .COMMA named-argument-list CLOSE_PARENS
positional-argument-list -> positional-argument-list .COMMA positional-argument 
transitions ->  {"CLOSE_PARENS":451,"COMMA":452}

item set 373 
attribute-arguments -> OPEN_PARENS named-argument-list .CLOSE_PARENS
named-argument-list -> named-argument-list .COMMA named-argument 
transitions ->  {"CLOSE_PARENS":453,"COMMA":454}

item set 374 
positional-argument-list -> positional-argument . 
transitions ->  {}

item set 375 
named-argument-list -> named-argument . 
transitions ->  {}

item set 376 
positional-argument -> attribute-argument-expression . 
transitions ->  {}

item set 377 
named-argument -> IDENTIFIER .ASSIGN attribute-argument-expression
simple-name -> IDENTIFIER . 
transitions ->  {"ASSIGN":455}

item set 378 
attribute-argument-expression -> expression . 
transitions ->  {}

item set 379 
local-variable-declarators -> local-variable-declarators COMMA local-variable-declarator . 
transitions ->  {}

item set 380 
local-variable-declarator -> local-variable ASSIGN local-variable-initializer . 
transitions ->  {}

item set 381 
local-variable-initializer -> expression . 
transitions ->  {}

item set 382 
local-variable-initializer -> array-initializer . 
transitions ->  {}

item set 383 
constant-declarators -> constant-declarators COMMA .constant-declarator
constant-declarator -> .IDENTIFIER ASSIGN constant-expression 
transitions ->  {"constant-declarator":456,"IDENTIFIER":288}

item set 384 
constant-declarator -> IDENTIFIER ASSIGN .constant-expression
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":457,"expression":315,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 385 
try-statement -> TRY block catch-clauses finally-clause . 
transitions ->  {}

item set 386 
catch-clauses -> specific-catch-clauses general-catch-clause . 
transitions ->  {}

item set 387 
specific-catch-clauses -> specific-catch-clauses specific-catch-clause . 
transitions ->  {}

item set 388 
finally-clause -> FINALLY block . 
transitions ->  {}

item set 389 
general-catch-clause -> CATCH block . 
transitions ->  {}

item set 390 
specific-catch-clause -> CATCH OPEN_PARENS .class-type CLOSE_PARENS block
specific-catch-clause -> CATCH OPEN_PARENS .class-type IDENTIFIER CLOSE_PARENS block
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
type-name -> .namespace-or-type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER 
transitions ->  {"class-type":458,"type-name":459,"OBJECT":163,"STRING":164,"namespace-or-type-name":97,"IDENTIFIER":152}

item set 391 
checked-expression -> CHECKED OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 392 
unchecked-expression -> UNCHECKED OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 393 
lock-statement -> LOCK OPEN_PARENS expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":460,"block":22,"empty-statement":23,"expression-statement":24,"selection-statement":25,"iteration-statement":26,"jump-statement":27,"try-statement":28,"checked-statement":29,"unchecked-statement":30,"lock-statement":31,"using-statement":32,"OPEN_BRACE":7,"SEMICOLON":35,"statement-expression":36,"if-statement":37,"switch-statement":38,"while-statement":39,"do-statement":40,"for-statement":41,"foreach-statement":42,"break-statement":43,"continue-statement":44,"goto-statement":45,"return-statement":46,"throw-statement":47,"TRY":48,"CHECKED":49,"UNCHECKED":50,"LOCK":51,"USING":52,"invocation-expression":55,"object-creation-expression":56,"assignment":57,"post-increment-expression":58,"post-decrement-expression":59,"pre-increment-expression":60,"pre-decrement-expression":61,"IF":62,"SWITCH":63,"WHILE":64,"DO":65,"FOR":66,"FOREACH":67,"BREAK":68,"CONTINUE":69,"GOTO":70,"RETURN":71,"THROW":72,"primary-expression":79,"NEW":80,"unary-expression":81,"OP_INC":82,"OP_DEC":83,"primary-no-array-creation-expression":89,"array-creation-expression":90,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"cast-expression":96,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"element-access":104,"this-access":105,"base-access":106,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"OPEN_PARENS":112,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 394 
using-statement -> USING OPEN_PARENS resource-acquisition CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":461,"block":22,"empty-statement":23,"expression-statement":24,"selection-statement":25,"iteration-statement":26,"jump-statement":27,"try-statement":28,"checked-statement":29,"unchecked-statement":30,"lock-statement":31,"using-statement":32,"OPEN_BRACE":7,"SEMICOLON":35,"statement-expression":36,"if-statement":37,"switch-statement":38,"while-statement":39,"do-statement":40,"for-statement":41,"foreach-statement":42,"break-statement":43,"continue-statement":44,"goto-statement":45,"return-statement":46,"throw-statement":47,"TRY":48,"CHECKED":49,"UNCHECKED":50,"LOCK":51,"USING":52,"invocation-expression":55,"object-creation-expression":56,"assignment":57,"post-increment-expression":58,"post-decrement-expression":59,"pre-increment-expression":60,"pre-decrement-expression":61,"IF":62,"SWITCH":63,"WHILE":64,"DO":65,"FOR":66,"FOREACH":67,"BREAK":68,"CONTINUE":69,"GOTO":70,"RETURN":71,"THROW":72,"primary-expression":79,"NEW":80,"unary-expression":81,"OP_INC":82,"OP_DEC":83,"primary-no-array-creation-expression":89,"array-creation-expression":90,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"cast-expression":96,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"element-access":104,"this-access":105,"base-access":106,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"OPEN_PARENS":112,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 395 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement ELSE embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":462,"block":22,"empty-statement":23,"expression-statement":24,"selection-statement":25,"iteration-statement":26,"jump-statement":27,"try-statement":28,"checked-statement":29,"unchecked-statement":30,"lock-statement":31,"using-statement":32,"OPEN_BRACE":7,"SEMICOLON":35,"statement-expression":36,"if-statement":37,"switch-statement":38,"while-statement":39,"do-statement":40,"for-statement":41,"foreach-statement":42,"break-statement":43,"continue-statement":44,"goto-statement":45,"return-statement":46,"throw-statement":47,"TRY":48,"CHECKED":49,"UNCHECKED":50,"LOCK":51,"USING":52,"invocation-expression":55,"object-creation-expression":56,"assignment":57,"post-increment-expression":58,"post-decrement-expression":59,"pre-increment-expression":60,"pre-decrement-expression":61,"IF":62,"SWITCH":63,"WHILE":64,"DO":65,"FOR":66,"FOREACH":67,"BREAK":68,"CONTINUE":69,"GOTO":70,"RETURN":71,"THROW":72,"primary-expression":79,"NEW":80,"unary-expression":81,"OP_INC":82,"OP_DEC":83,"primary-no-array-creation-expression":89,"array-creation-expression":90,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"cast-expression":96,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"element-access":104,"this-access":105,"base-access":106,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"OPEN_PARENS":112,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 396 
switch-statement -> SWITCH OPEN_PARENS expression CLOSE_PARENS .switch-block
switch-block -> .OPEN_BRACE CLOSE_BRACE
switch-block -> .OPEN_BRACE switch-sections CLOSE_BRACE 
transitions ->  {"switch-block":463,"OPEN_BRACE":464}

item set 397 
while-statement -> WHILE OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":465,"block":22,"empty-statement":23,"expression-statement":24,"selection-statement":25,"iteration-statement":26,"jump-statement":27,"try-statement":28,"checked-statement":29,"unchecked-statement":30,"lock-statement":31,"using-statement":32,"OPEN_BRACE":7,"SEMICOLON":35,"statement-expression":36,"if-statement":37,"switch-statement":38,"while-statement":39,"do-statement":40,"for-statement":41,"foreach-statement":42,"break-statement":43,"continue-statement":44,"goto-statement":45,"return-statement":46,"throw-statement":47,"TRY":48,"CHECKED":49,"UNCHECKED":50,"LOCK":51,"USING":52,"invocation-expression":55,"object-creation-expression":56,"assignment":57,"post-increment-expression":58,"post-decrement-expression":59,"pre-increment-expression":60,"pre-decrement-expression":61,"IF":62,"SWITCH":63,"WHILE":64,"DO":65,"FOR":66,"FOREACH":67,"BREAK":68,"CONTINUE":69,"GOTO":70,"RETURN":71,"THROW":72,"primary-expression":79,"NEW":80,"unary-expression":81,"OP_INC":82,"OP_DEC":83,"primary-no-array-creation-expression":89,"array-creation-expression":90,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"cast-expression":96,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"element-access":104,"this-access":105,"base-access":106,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"OPEN_PARENS":112,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 398 
do-statement -> DO embedded-statement WHILE OPEN_PARENS .boolean-expression CLOSE_PARENS SEMICOLON
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":466,"expression":303,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 399 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_PARENS":467,"for-iterator":468,"statement-expression-list":469,"statement-expression":311,"invocation-expression":55,"object-creation-expression":56,"assignment":57,"post-increment-expression":58,"post-decrement-expression":59,"pre-increment-expression":60,"pre-decrement-expression":61,"primary-expression":79,"NEW":80,"unary-expression":81,"OP_INC":82,"OP_DEC":83,"primary-no-array-creation-expression":89,"array-creation-expression":90,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"cast-expression":96,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"element-access":104,"this-access":105,"base-access":106,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"OPEN_PARENS":112,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 400 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition .SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":470}

item set 401 
for-condition -> boolean-expression . 
transitions ->  {}

item set 402 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-condition -> .boolean-expression
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":471,"for-condition":472,"boolean-expression":401,"expression":303,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 403 
statement-expression-list -> statement-expression-list COMMA .statement-expression
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"statement-expression":473,"invocation-expression":55,"object-creation-expression":56,"assignment":57,"post-increment-expression":58,"post-decrement-expression":59,"pre-increment-expression":60,"pre-decrement-expression":61,"primary-expression":79,"NEW":80,"unary-expression":81,"OP_INC":82,"OP_DEC":83,"primary-no-array-creation-expression":89,"array-creation-expression":90,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"cast-expression":96,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"element-access":104,"this-access":105,"base-access":106,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"OPEN_PARENS":112,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 404 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER .IN expression CLOSE_PARENS embedded-statement 
transitions ->  {"IN":474}

item set 405 
goto-statement -> GOTO CASE constant-expression SEMICOLON . 
transitions ->  {}

item set 406 
conditional-expression -> conditional-or-expression INTERR expression .COLON expression 
transitions ->  {"COLON":475}

item set 407 
conditional-or-expression -> conditional-or-expression OP_OR conditional-and-expression .
conditional-and-expression -> conditional-and-expression .OP_AND inclusive-or-expression 
transitions ->  {"OP_AND":320}

item set 408 
multiplicative-expression -> unary-expression . 
transitions ->  {}

item set 409 
conditional-and-expression -> conditional-and-expression OP_AND inclusive-or-expression .
inclusive-or-expression -> inclusive-or-expression .BITWISE_OR exclusive-or-expression 
transitions ->  {"BITWISE_OR":321}

item set 410 
inclusive-or-expression -> inclusive-or-expression BITWISE_OR exclusive-or-expression .
exclusive-or-expression -> exclusive-or-expression .CARET and-expression 
transitions ->  {"CARET":322}

item set 411 
exclusive-or-expression -> exclusive-or-expression CARET and-expression .
and-expression -> and-expression .AMP equality-expression 
transitions ->  {"AMP":323}

item set 412 
and-expression -> and-expression AMP equality-expression .
equality-expression -> equality-expression .OP_EQ relational-expression
equality-expression -> equality-expression .OP_NE relational-expression 
transitions ->  {"OP_EQ":324,"OP_NE":325}

item set 413 
equality-expression -> equality-expression OP_EQ relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":326,"GT":327,"OP_LE":328,"OP_GE":329,"IS":330,"AS":331}

item set 414 
equality-expression -> equality-expression OP_NE relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":326,"GT":327,"OP_LE":328,"OP_GE":329,"IS":330,"AS":331}

item set 415 
relational-expression -> relational-expression LT shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":332,"RIGHT_SHIFT":333}

item set 416 
relational-expression -> relational-expression GT shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":332,"RIGHT_SHIFT":333}

item set 417 
relational-expression -> relational-expression OP_LE shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":332,"RIGHT_SHIFT":333}

item set 418 
relational-expression -> relational-expression OP_GE shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":332,"RIGHT_SHIFT":333}

item set 419 
relational-expression -> relational-expression IS type .
non-array-type -> type . 
transitions ->  {}

item set 420 
relational-expression -> relational-expression AS type .
non-array-type -> type . 
transitions ->  {}

item set 421 
shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":334,"MINUS":335}

item set 422 
shift-expression -> shift-expression RIGHT_SHIFT additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":334,"MINUS":335}

item set 423 
additive-expression -> additive-expression PLUS multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":336,"DIV":337,"PERCENT":338}

item set 424 
additive-expression -> additive-expression MINUS multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":336,"DIV":337,"PERCENT":338}

item set 425 
multiplicative-expression -> multiplicative-expression STAR unary-expression . 
transitions ->  {}

item set 426 
multiplicative-expression -> multiplicative-expression DIV unary-expression . 
transitions ->  {}

item set 427 
multiplicative-expression -> multiplicative-expression PERCENT unary-expression . 
transitions ->  {}

item set 428 
invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 429 
argument-list -> argument-list COMMA .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument":476,"expression":343,"REF":344,"OUT":345,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 430 
argument -> REF variable-reference . 
transitions ->  {}

item set 431 
variable-reference -> expression . 
transitions ->  {}

item set 432 
argument -> OUT variable-reference . 
transitions ->  {}

item set 433 
object-creation-expression -> NEW type OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 434 
object-creation-expression -> NEW type OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":477,"COMMA":429}

item set 435 
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET rank-specifiers
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET array-initializer
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET rank-specifiers array-initializer
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":478,"COMMA":445}

item set 436 
array-initializer -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 437 
array-initializer -> OPEN_BRACE variable-initializer-list .CLOSE_BRACE
array-initializer -> OPEN_BRACE variable-initializer-list .COMMA CLOSE_BRACE
variable-initializer-list -> variable-initializer-list .COMMA variable-initializer 
transitions ->  {"CLOSE_BRACE":479,"COMMA":480}

item set 438 
variable-initializer-list -> variable-initializer . 
transitions ->  {}

item set 439 
variable-initializer -> expression . 
transitions ->  {}

item set 440 
variable-initializer -> array-initializer . 
transitions ->  {}

item set 441 
delegate-creation-expression -> NEW delegate-type OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":481}

item set 442 
rank-specifier -> OPEN_BRACKET dim-separators CLOSE_BRACKET . 
transitions ->  {}

item set 443 
dim-separators -> dim-separators COMMA . 
transitions ->  {}

item set 444 
element-access -> primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET . 
transitions ->  {}

item set 445 
expression-list -> expression-list COMMA .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":482,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 446 
cast-expression -> OPEN_PARENS type CLOSE_PARENS unary-expression . 
transitions ->  {}

item set 447 
base-access -> base OPEN_BRACKET expression-list CLOSE_BRACKET . 
transitions ->  {}

item set 448 
typeof-expression -> TYPEOF OPEN_PARENS type CLOSE_PARENS . 
transitions ->  {}

item set 449 
typeof-expression -> TYPEOF OPEN_PARENS VOID CLOSE_PARENS . 
transitions ->  {}

item set 450 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET . 
transitions ->  {}

item set 451 
attribute-arguments -> OPEN_PARENS positional-argument-list CLOSE_PARENS . 
transitions ->  {}

item set 452 
attribute-arguments -> OPEN_PARENS positional-argument-list COMMA .named-argument-list CLOSE_PARENS
positional-argument-list -> positional-argument-list COMMA .positional-argument
named-argument-list -> .named-argument
named-argument-list -> .named-argument-list COMMA named-argument
positional-argument -> .attribute-argument-expression
named-argument -> .IDENTIFIER ASSIGN attribute-argument-expression
attribute-argument-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"named-argument-list":483,"positional-argument":484,"named-argument":375,"attribute-argument-expression":376,"IDENTIFIER":377,"expression":378,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 453 
attribute-arguments -> OPEN_PARENS named-argument-list CLOSE_PARENS . 
transitions ->  {}

item set 454 
named-argument-list -> named-argument-list COMMA .named-argument
named-argument -> .IDENTIFIER ASSIGN attribute-argument-expression 
transitions ->  {"named-argument":485,"IDENTIFIER":486}

item set 455 
named-argument -> IDENTIFIER ASSIGN .attribute-argument-expression
attribute-argument-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"attribute-argument-expression":487,"expression":378,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 456 
constant-declarators -> constant-declarators COMMA constant-declarator . 
transitions ->  {}

item set 457 
constant-declarator -> IDENTIFIER ASSIGN constant-expression . 
transitions ->  {}

item set 458 
specific-catch-clause -> CATCH OPEN_PARENS class-type .CLOSE_PARENS block
specific-catch-clause -> CATCH OPEN_PARENS class-type .IDENTIFIER CLOSE_PARENS block 
transitions ->  {"CLOSE_PARENS":488,"IDENTIFIER":489}

item set 459 
class-type -> type-name . 
transitions ->  {}

item set 460 
lock-statement -> LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 461 
using-statement -> USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 462 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement .
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement .ELSE embedded-statement 
transitions ->  {"ELSE":490}

item set 463 
switch-statement -> SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block . 
transitions ->  {}

item set 464 
switch-block -> OPEN_BRACE .CLOSE_BRACE
switch-block -> OPEN_BRACE .switch-sections CLOSE_BRACE
switch-sections -> .switch-section
switch-sections -> .switch-sections switch-section
switch-section -> .switch-labels statement-list
switch-labels -> .switch-label
switch-labels -> .switch-labels switch-label
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON 
transitions ->  {"CLOSE_BRACE":491,"switch-sections":492,"switch-section":493,"switch-labels":494,"switch-label":495,"CASE":496,"DEFAULT":497}

item set 465 
while-statement -> WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 466 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression .CLOSE_PARENS SEMICOLON 
transitions ->  {"CLOSE_PARENS":498}

item set 467 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":499,"block":22,"empty-statement":23,"expression-statement":24,"selection-statement":25,"iteration-statement":26,"jump-statement":27,"try-statement":28,"checked-statement":29,"unchecked-statement":30,"lock-statement":31,"using-statement":32,"OPEN_BRACE":7,"SEMICOLON":35,"statement-expression":36,"if-statement":37,"switch-statement":38,"while-statement":39,"do-statement":40,"for-statement":41,"foreach-statement":42,"break-statement":43,"continue-statement":44,"goto-statement":45,"return-statement":46,"throw-statement":47,"TRY":48,"CHECKED":49,"UNCHECKED":50,"LOCK":51,"USING":52,"invocation-expression":55,"object-creation-expression":56,"assignment":57,"post-increment-expression":58,"post-decrement-expression":59,"pre-increment-expression":60,"pre-decrement-expression":61,"IF":62,"SWITCH":63,"WHILE":64,"DO":65,"FOR":66,"FOREACH":67,"BREAK":68,"CONTINUE":69,"GOTO":70,"RETURN":71,"THROW":72,"primary-expression":79,"NEW":80,"unary-expression":81,"OP_INC":82,"OP_DEC":83,"primary-no-array-creation-expression":89,"array-creation-expression":90,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"cast-expression":96,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"element-access":104,"this-access":105,"base-access":106,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"OPEN_PARENS":112,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 468 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":500}

item set 469 
for-iterator -> statement-expression-list .
statement-expression-list -> statement-expression-list .COMMA statement-expression 
transitions ->  {"COMMA":403}

item set 470 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_PARENS":501,"for-iterator":502,"statement-expression-list":469,"statement-expression":311,"invocation-expression":55,"object-creation-expression":56,"assignment":57,"post-increment-expression":58,"post-decrement-expression":59,"pre-increment-expression":60,"pre-decrement-expression":61,"primary-expression":79,"NEW":80,"unary-expression":81,"OP_INC":82,"OP_DEC":83,"primary-no-array-creation-expression":89,"array-creation-expression":90,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"cast-expression":96,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"element-access":104,"this-access":105,"base-access":106,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"OPEN_PARENS":112,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 471 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_PARENS":503,"for-iterator":504,"statement-expression-list":469,"statement-expression":311,"invocation-expression":55,"object-creation-expression":56,"assignment":57,"post-increment-expression":58,"post-decrement-expression":59,"pre-increment-expression":60,"pre-decrement-expression":61,"primary-expression":79,"NEW":80,"unary-expression":81,"OP_INC":82,"OP_DEC":83,"primary-no-array-creation-expression":89,"array-creation-expression":90,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"cast-expression":96,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"element-access":104,"this-access":105,"base-access":106,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"OPEN_PARENS":112,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 472 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition .SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":505}

item set 473 
statement-expression-list -> statement-expression-list COMMA statement-expression . 
transitions ->  {}

item set 474 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER IN .expression CLOSE_PARENS embedded-statement
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":506,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 475 
conditional-expression -> conditional-or-expression INTERR expression COLON .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":507,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 476 
argument-list -> argument-list COMMA argument . 
transitions ->  {}

item set 477 
object-creation-expression -> NEW type OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 478 
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .rank-specifiers
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .array-initializer
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .rank-specifiers array-initializer
rank-specifiers -> .rank-specifier
rank-specifiers -> .rank-specifiers rank-specifier
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET 
transitions ->  {"rank-specifiers":508,"array-initializer":509,"rank-specifier":261,"OPEN_BRACE":350,"OPEN_BRACKET":262}

item set 479 
array-initializer -> OPEN_BRACE variable-initializer-list CLOSE_BRACE . 
transitions ->  {}

item set 480 
array-initializer -> OPEN_BRACE variable-initializer-list COMMA .CLOSE_BRACE
variable-initializer-list -> variable-initializer-list COMMA .variable-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACE":510,"variable-initializer":511,"expression":439,"array-initializer":440,"conditional-expression":215,"assignment":216,"OPEN_BRACE":350,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 481 
delegate-creation-expression -> NEW delegate-type OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 482 
expression-list -> expression-list COMMA expression . 
transitions ->  {}

item set 483 
attribute-arguments -> OPEN_PARENS positional-argument-list COMMA named-argument-list .CLOSE_PARENS
named-argument-list -> named-argument-list .COMMA named-argument 
transitions ->  {"CLOSE_PARENS":512,"COMMA":454}

item set 484 
positional-argument-list -> positional-argument-list COMMA positional-argument . 
transitions ->  {}

item set 485 
named-argument-list -> named-argument-list COMMA named-argument . 
transitions ->  {}

item set 486 
named-argument -> IDENTIFIER .ASSIGN attribute-argument-expression 
transitions ->  {"ASSIGN":455}

item set 487 
named-argument -> IDENTIFIER ASSIGN attribute-argument-expression . 
transitions ->  {}

item set 488 
specific-catch-clause -> CATCH OPEN_PARENS class-type CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":513,"OPEN_BRACE":7}

item set 489 
specific-catch-clause -> CATCH OPEN_PARENS class-type IDENTIFIER .CLOSE_PARENS block 
transitions ->  {"CLOSE_PARENS":514}

item set 490 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":515,"block":22,"empty-statement":23,"expression-statement":24,"selection-statement":25,"iteration-statement":26,"jump-statement":27,"try-statement":28,"checked-statement":29,"unchecked-statement":30,"lock-statement":31,"using-statement":32,"OPEN_BRACE":7,"SEMICOLON":35,"statement-expression":36,"if-statement":37,"switch-statement":38,"while-statement":39,"do-statement":40,"for-statement":41,"foreach-statement":42,"break-statement":43,"continue-statement":44,"goto-statement":45,"return-statement":46,"throw-statement":47,"TRY":48,"CHECKED":49,"UNCHECKED":50,"LOCK":51,"USING":52,"invocation-expression":55,"object-creation-expression":56,"assignment":57,"post-increment-expression":58,"post-decrement-expression":59,"pre-increment-expression":60,"pre-decrement-expression":61,"IF":62,"SWITCH":63,"WHILE":64,"DO":65,"FOR":66,"FOREACH":67,"BREAK":68,"CONTINUE":69,"GOTO":70,"RETURN":71,"THROW":72,"primary-expression":79,"NEW":80,"unary-expression":81,"OP_INC":82,"OP_DEC":83,"primary-no-array-creation-expression":89,"array-creation-expression":90,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"cast-expression":96,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"element-access":104,"this-access":105,"base-access":106,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"OPEN_PARENS":112,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 491 
switch-block -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 492 
switch-block -> OPEN_BRACE switch-sections .CLOSE_BRACE
switch-sections -> switch-sections .switch-section
switch-section -> .switch-labels statement-list
switch-labels -> .switch-label
switch-labels -> .switch-labels switch-label
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON 
transitions ->  {"CLOSE_BRACE":516,"switch-section":517,"switch-labels":494,"switch-label":495,"CASE":496,"DEFAULT":497}

item set 493 
switch-sections -> switch-section . 
transitions ->  {}

item set 494 
switch-section -> switch-labels .statement-list
switch-labels -> switch-labels .switch-label
statement-list -> .statement
statement-list -> .statement-list statement
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"statement-list":518,"switch-label":519,"statement":15,"CASE":496,"DEFAULT":497,"labeled-statement":16,"declaration-statement":17,"embedded-statement":18,"IDENTIFIER":19,"local-variable-declaration":20,"local-constant-declaration":21,"block":22,"empty-statement":23,"expression-statement":24,"selection-statement":25,"iteration-statement":26,"jump-statement":27,"try-statement":28,"checked-statement":29,"unchecked-statement":30,"lock-statement":31,"using-statement":32,"type":33,"CONST":34,"OPEN_BRACE":7,"SEMICOLON":35,"statement-expression":36,"if-statement":37,"switch-statement":38,"while-statement":39,"do-statement":40,"for-statement":41,"foreach-statement":42,"break-statement":43,"continue-statement":44,"goto-statement":45,"return-statement":46,"throw-statement":47,"TRY":48,"CHECKED":49,"UNCHECKED":50,"LOCK":51,"USING":52,"value-type":53,"reference-type":54,"invocation-expression":55,"object-creation-expression":56,"assignment":57,"post-increment-expression":58,"post-decrement-expression":59,"pre-increment-expression":60,"pre-decrement-expression":61,"IF":62,"SWITCH":63,"WHILE":64,"DO":65,"FOR":66,"FOREACH":67,"BREAK":68,"CONTINUE":69,"GOTO":70,"RETURN":71,"THROW":72,"struct-type":73,"enum-type":74,"class-type":75,"interface-type":76,"array-type":77,"delegate-type":78,"primary-expression":79,"NEW":80,"unary-expression":81,"OP_INC":82,"OP_DEC":83,"type-name":84,"simple-type":85,"OBJECT":86,"STRING":87,"non-array-type":88,"primary-no-array-creation-expression":89,"array-creation-expression":90,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"cast-expression":96,"namespace-or-type-name":97,"numeric-type":98,"BOOL":99,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"element-access":104,"this-access":105,"base-access":106,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"OPEN_PARENS":112,"integral-type":113,"floating-point-type":114,"DECIMAL":115,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"SBYTE":126,"BYTE":127,"SHORT":128,"USHORT":129,"INT":130,"UINT":131,"LONG":132,"ULONG":133,"CHAR":134,"FLOAT":135,"DOUBLE":136,"TRUE":137,"FALSE":138}

item set 495 
switch-labels -> switch-label . 
transitions ->  {}

item set 496 
switch-label -> CASE .constant-expression COLON
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":520,"expression":315,"conditional-expression":215,"assignment":216,"conditional-or-expression":217,"unary-expression":218,"conditional-and-expression":219,"primary-expression":79,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"pre-increment-expression":220,"pre-decrement-expression":221,"cast-expression":96,"inclusive-or-expression":222,"primary-no-array-creation-expression":89,"array-creation-expression":90,"OP_INC":82,"OP_DEC":83,"OPEN_PARENS":112,"exclusive-or-expression":223,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"invocation-expression":224,"element-access":104,"this-access":105,"base-access":106,"post-increment-expression":225,"post-decrement-expression":226,"object-creation-expression":227,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"NEW":80,"and-expression":228,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"equality-expression":231,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205,"relational-expression":232,"shift-expression":233,"additive-expression":234,"multiplicative-expression":235}

item set 497 
switch-label -> DEFAULT .COLON 
transitions ->  {"COLON":521}

item set 498 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":522}

item set 499 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 500 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":523,"block":22,"empty-statement":23,"expression-statement":24,"selection-statement":25,"iteration-statement":26,"jump-statement":27,"try-statement":28,"checked-statement":29,"unchecked-statement":30,"lock-statement":31,"using-statement":32,"OPEN_BRACE":7,"SEMICOLON":35,"statement-expression":36,"if-statement":37,"switch-statement":38,"while-statement":39,"do-statement":40,"for-statement":41,"foreach-statement":42,"break-statement":43,"continue-statement":44,"goto-statement":45,"return-statement":46,"throw-statement":47,"TRY":48,"CHECKED":49,"UNCHECKED":50,"LOCK":51,"USING":52,"invocation-expression":55,"object-creation-expression":56,"assignment":57,"post-increment-expression":58,"post-decrement-expression":59,"pre-increment-expression":60,"pre-decrement-expression":61,"IF":62,"SWITCH":63,"WHILE":64,"DO":65,"FOR":66,"FOREACH":67,"BREAK":68,"CONTINUE":69,"GOTO":70,"RETURN":71,"THROW":72,"primary-expression":79,"NEW":80,"unary-expression":81,"OP_INC":82,"OP_DEC":83,"primary-no-array-creation-expression":89,"array-creation-expression":90,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"cast-expression":96,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"element-access":104,"this-access":105,"base-access":106,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"OPEN_PARENS":112,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 501 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":524,"block":22,"empty-statement":23,"expression-statement":24,"selection-statement":25,"iteration-statement":26,"jump-statement":27,"try-statement":28,"checked-statement":29,"unchecked-statement":30,"lock-statement":31,"using-statement":32,"OPEN_BRACE":7,"SEMICOLON":35,"statement-expression":36,"if-statement":37,"switch-statement":38,"while-statement":39,"do-statement":40,"for-statement":41,"foreach-statement":42,"break-statement":43,"continue-statement":44,"goto-statement":45,"return-statement":46,"throw-statement":47,"TRY":48,"CHECKED":49,"UNCHECKED":50,"LOCK":51,"USING":52,"invocation-expression":55,"object-creation-expression":56,"assignment":57,"post-increment-expression":58,"post-decrement-expression":59,"pre-increment-expression":60,"pre-decrement-expression":61,"IF":62,"SWITCH":63,"WHILE":64,"DO":65,"FOR":66,"FOREACH":67,"BREAK":68,"CONTINUE":69,"GOTO":70,"RETURN":71,"THROW":72,"primary-expression":79,"NEW":80,"unary-expression":81,"OP_INC":82,"OP_DEC":83,"primary-no-array-creation-expression":89,"array-creation-expression":90,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"cast-expression":96,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"element-access":104,"this-access":105,"base-access":106,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"OPEN_PARENS":112,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 502 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":525}

item set 503 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":526,"block":22,"empty-statement":23,"expression-statement":24,"selection-statement":25,"iteration-statement":26,"jump-statement":27,"try-statement":28,"checked-statement":29,"unchecked-statement":30,"lock-statement":31,"using-statement":32,"OPEN_BRACE":7,"SEMICOLON":35,"statement-expression":36,"if-statement":37,"switch-statement":38,"while-statement":39,"do-statement":40,"for-statement":41,"foreach-statement":42,"break-statement":43,"continue-statement":44,"goto-statement":45,"return-statement":46,"throw-statement":47,"TRY":48,"CHECKED":49,"UNCHECKED":50,"LOCK":51,"USING":52,"invocation-expression":55,"object-creation-expression":56,"assignment":57,"post-increment-expression":58,"post-decrement-expression":59,"pre-increment-expression":60,"pre-decrement-expression":61,"IF":62,"SWITCH":63,"WHILE":64,"DO":65,"FOR":66,"FOREACH":67,"BREAK":68,"CONTINUE":69,"GOTO":70,"RETURN":71,"THROW":72,"primary-expression":79,"NEW":80,"unary-expression":81,"OP_INC":82,"OP_DEC":83,"primary-no-array-creation-expression":89,"array-creation-expression":90,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"cast-expression":96,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"element-access":104,"this-access":105,"base-access":106,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"OPEN_PARENS":112,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 504 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":527}

item set 505 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_PARENS":528,"for-iterator":529,"statement-expression-list":469,"statement-expression":311,"invocation-expression":55,"object-creation-expression":56,"assignment":57,"post-increment-expression":58,"post-decrement-expression":59,"pre-increment-expression":60,"pre-decrement-expression":61,"primary-expression":79,"NEW":80,"unary-expression":81,"OP_INC":82,"OP_DEC":83,"primary-no-array-creation-expression":89,"array-creation-expression":90,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"cast-expression":96,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"element-access":104,"this-access":105,"base-access":106,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"OPEN_PARENS":112,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"CHECKED":229,"UNCHECKED":230,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 506 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER IN expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":530}

item set 507 
conditional-expression -> conditional-or-expression INTERR expression COLON expression . 
transitions ->  {}

item set 508 
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers .
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers .array-initializer
rank-specifiers -> rank-specifiers .rank-specifier
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET 
transitions ->  {"array-initializer":531,"rank-specifier":353,"OPEN_BRACE":350,"OPEN_BRACKET":262}

item set 509 
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer . 
transitions ->  {}

item set 510 
array-initializer -> OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE . 
transitions ->  {}

item set 511 
variable-initializer-list -> variable-initializer-list COMMA variable-initializer . 
transitions ->  {}

item set 512 
attribute-arguments -> OPEN_PARENS positional-argument-list COMMA named-argument-list CLOSE_PARENS . 
transitions ->  {}

item set 513 
specific-catch-clause -> CATCH OPEN_PARENS class-type CLOSE_PARENS block . 
transitions ->  {}

item set 514 
specific-catch-clause -> CATCH OPEN_PARENS class-type IDENTIFIER CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":532,"OPEN_BRACE":7}

item set 515 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement . 
transitions ->  {}

item set 516 
switch-block -> OPEN_BRACE switch-sections CLOSE_BRACE . 
transitions ->  {}

item set 517 
switch-sections -> switch-sections switch-section . 
transitions ->  {}

item set 518 
switch-section -> switch-labels statement-list .
statement-list -> statement-list .statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"statement":154,"labeled-statement":16,"declaration-statement":17,"embedded-statement":18,"IDENTIFIER":19,"local-variable-declaration":20,"local-constant-declaration":21,"block":22,"empty-statement":23,"expression-statement":24,"selection-statement":25,"iteration-statement":26,"jump-statement":27,"try-statement":28,"checked-statement":29,"unchecked-statement":30,"lock-statement":31,"using-statement":32,"type":33,"CONST":34,"OPEN_BRACE":7,"SEMICOLON":35,"statement-expression":36,"if-statement":37,"switch-statement":38,"while-statement":39,"do-statement":40,"for-statement":41,"foreach-statement":42,"break-statement":43,"continue-statement":44,"goto-statement":45,"return-statement":46,"throw-statement":47,"TRY":48,"CHECKED":49,"UNCHECKED":50,"LOCK":51,"USING":52,"value-type":53,"reference-type":54,"invocation-expression":55,"object-creation-expression":56,"assignment":57,"post-increment-expression":58,"post-decrement-expression":59,"pre-increment-expression":60,"pre-decrement-expression":61,"IF":62,"SWITCH":63,"WHILE":64,"DO":65,"FOR":66,"FOREACH":67,"BREAK":68,"CONTINUE":69,"GOTO":70,"RETURN":71,"THROW":72,"struct-type":73,"enum-type":74,"class-type":75,"interface-type":76,"array-type":77,"delegate-type":78,"primary-expression":79,"NEW":80,"unary-expression":81,"OP_INC":82,"OP_DEC":83,"type-name":84,"simple-type":85,"OBJECT":86,"STRING":87,"non-array-type":88,"primary-no-array-creation-expression":89,"array-creation-expression":90,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"cast-expression":96,"namespace-or-type-name":97,"numeric-type":98,"BOOL":99,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"element-access":104,"this-access":105,"base-access":106,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"OPEN_PARENS":112,"integral-type":113,"floating-point-type":114,"DECIMAL":115,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"SBYTE":126,"BYTE":127,"SHORT":128,"USHORT":129,"INT":130,"UINT":131,"LONG":132,"ULONG":133,"CHAR":134,"FLOAT":135,"DOUBLE":136,"TRUE":137,"FALSE":138}

item set 519 
switch-labels -> switch-labels switch-label . 
transitions ->  {}

item set 520 
switch-label -> CASE constant-expression .COLON 
transitions ->  {"COLON":533}

item set 521 
switch-label -> DEFAULT COLON . 
transitions ->  {}

item set 522 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 523 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 524 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 525 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":534,"block":22,"empty-statement":23,"expression-statement":24,"selection-statement":25,"iteration-statement":26,"jump-statement":27,"try-statement":28,"checked-statement":29,"unchecked-statement":30,"lock-statement":31,"using-statement":32,"OPEN_BRACE":7,"SEMICOLON":35,"statement-expression":36,"if-statement":37,"switch-statement":38,"while-statement":39,"do-statement":40,"for-statement":41,"foreach-statement":42,"break-statement":43,"continue-statement":44,"goto-statement":45,"return-statement":46,"throw-statement":47,"TRY":48,"CHECKED":49,"UNCHECKED":50,"LOCK":51,"USING":52,"invocation-expression":55,"object-creation-expression":56,"assignment":57,"post-increment-expression":58,"post-decrement-expression":59,"pre-increment-expression":60,"pre-decrement-expression":61,"IF":62,"SWITCH":63,"WHILE":64,"DO":65,"FOR":66,"FOREACH":67,"BREAK":68,"CONTINUE":69,"GOTO":70,"RETURN":71,"THROW":72,"primary-expression":79,"NEW":80,"unary-expression":81,"OP_INC":82,"OP_DEC":83,"primary-no-array-creation-expression":89,"array-creation-expression":90,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"cast-expression":96,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"element-access":104,"this-access":105,"base-access":106,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"OPEN_PARENS":112,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 526 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 527 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":535,"block":22,"empty-statement":23,"expression-statement":24,"selection-statement":25,"iteration-statement":26,"jump-statement":27,"try-statement":28,"checked-statement":29,"unchecked-statement":30,"lock-statement":31,"using-statement":32,"OPEN_BRACE":7,"SEMICOLON":35,"statement-expression":36,"if-statement":37,"switch-statement":38,"while-statement":39,"do-statement":40,"for-statement":41,"foreach-statement":42,"break-statement":43,"continue-statement":44,"goto-statement":45,"return-statement":46,"throw-statement":47,"TRY":48,"CHECKED":49,"UNCHECKED":50,"LOCK":51,"USING":52,"invocation-expression":55,"object-creation-expression":56,"assignment":57,"post-increment-expression":58,"post-decrement-expression":59,"pre-increment-expression":60,"pre-decrement-expression":61,"IF":62,"SWITCH":63,"WHILE":64,"DO":65,"FOR":66,"FOREACH":67,"BREAK":68,"CONTINUE":69,"GOTO":70,"RETURN":71,"THROW":72,"primary-expression":79,"NEW":80,"unary-expression":81,"OP_INC":82,"OP_DEC":83,"primary-no-array-creation-expression":89,"array-creation-expression":90,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"cast-expression":96,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"element-access":104,"this-access":105,"base-access":106,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"OPEN_PARENS":112,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 528 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":536,"block":22,"empty-statement":23,"expression-statement":24,"selection-statement":25,"iteration-statement":26,"jump-statement":27,"try-statement":28,"checked-statement":29,"unchecked-statement":30,"lock-statement":31,"using-statement":32,"OPEN_BRACE":7,"SEMICOLON":35,"statement-expression":36,"if-statement":37,"switch-statement":38,"while-statement":39,"do-statement":40,"for-statement":41,"foreach-statement":42,"break-statement":43,"continue-statement":44,"goto-statement":45,"return-statement":46,"throw-statement":47,"TRY":48,"CHECKED":49,"UNCHECKED":50,"LOCK":51,"USING":52,"invocation-expression":55,"object-creation-expression":56,"assignment":57,"post-increment-expression":58,"post-decrement-expression":59,"pre-increment-expression":60,"pre-decrement-expression":61,"IF":62,"SWITCH":63,"WHILE":64,"DO":65,"FOR":66,"FOREACH":67,"BREAK":68,"CONTINUE":69,"GOTO":70,"RETURN":71,"THROW":72,"primary-expression":79,"NEW":80,"unary-expression":81,"OP_INC":82,"OP_DEC":83,"primary-no-array-creation-expression":89,"array-creation-expression":90,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"cast-expression":96,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"element-access":104,"this-access":105,"base-access":106,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"OPEN_PARENS":112,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 529 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":537}

item set 530 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":538,"block":22,"empty-statement":23,"expression-statement":24,"selection-statement":25,"iteration-statement":26,"jump-statement":27,"try-statement":28,"checked-statement":29,"unchecked-statement":30,"lock-statement":31,"using-statement":32,"OPEN_BRACE":7,"SEMICOLON":35,"statement-expression":36,"if-statement":37,"switch-statement":38,"while-statement":39,"do-statement":40,"for-statement":41,"foreach-statement":42,"break-statement":43,"continue-statement":44,"goto-statement":45,"return-statement":46,"throw-statement":47,"TRY":48,"CHECKED":49,"UNCHECKED":50,"LOCK":51,"USING":52,"invocation-expression":55,"object-creation-expression":56,"assignment":57,"post-increment-expression":58,"post-decrement-expression":59,"pre-increment-expression":60,"pre-decrement-expression":61,"IF":62,"SWITCH":63,"WHILE":64,"DO":65,"FOR":66,"FOREACH":67,"BREAK":68,"CONTINUE":69,"GOTO":70,"RETURN":71,"THROW":72,"primary-expression":79,"NEW":80,"unary-expression":81,"OP_INC":82,"OP_DEC":83,"primary-no-array-creation-expression":89,"array-creation-expression":90,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"cast-expression":96,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"element-access":104,"this-access":105,"base-access":106,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"OPEN_PARENS":112,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 531 
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer . 
transitions ->  {}

item set 532 
specific-catch-clause -> CATCH OPEN_PARENS class-type IDENTIFIER CLOSE_PARENS block . 
transitions ->  {}

item set 533 
switch-label -> CASE constant-expression COLON . 
transitions ->  {}

item set 534 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 535 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 536 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 537 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":539,"block":22,"empty-statement":23,"expression-statement":24,"selection-statement":25,"iteration-statement":26,"jump-statement":27,"try-statement":28,"checked-statement":29,"unchecked-statement":30,"lock-statement":31,"using-statement":32,"OPEN_BRACE":7,"SEMICOLON":35,"statement-expression":36,"if-statement":37,"switch-statement":38,"while-statement":39,"do-statement":40,"for-statement":41,"foreach-statement":42,"break-statement":43,"continue-statement":44,"goto-statement":45,"return-statement":46,"throw-statement":47,"TRY":48,"CHECKED":49,"UNCHECKED":50,"LOCK":51,"USING":52,"invocation-expression":55,"object-creation-expression":56,"assignment":57,"post-increment-expression":58,"post-decrement-expression":59,"pre-increment-expression":60,"pre-decrement-expression":61,"IF":62,"SWITCH":63,"WHILE":64,"DO":65,"FOR":66,"FOREACH":67,"BREAK":68,"CONTINUE":69,"GOTO":70,"RETURN":71,"THROW":72,"primary-expression":79,"NEW":80,"unary-expression":81,"OP_INC":82,"OP_DEC":83,"primary-no-array-creation-expression":89,"array-creation-expression":90,"PLUS":91,"MINUS":92,"BANG":93,"TILDE":94,"STAR":95,"cast-expression":96,"literal":100,"simple-name":101,"parenthesized-expression":102,"member-access":103,"element-access":104,"this-access":105,"base-access":106,"delegate-creation-expression":107,"typeof-expression":108,"sizeof-expression":109,"checked-expression":110,"unchecked-expression":111,"OPEN_PARENS":112,"BOOLEAN_LITERAL":116,"REAL_LITERAL":117,"INTEGER_LITERAL":118,"STRING_LITERAL":119,"CHARACTER_LITERAL":120,"NULL":121,"IDENTIFIER":190,"predefined-type":122,"THIS":123,"base":124,"TYPEOF":125,"TRUE":137,"FALSE":138,"BOOL":191,"BYTE":192,"CHAR":193,"DECIMAL":194,"DOUBLE":195,"FLOAT":196,"INT":197,"LONG":198,"OBJECT":199,"SBYTE":200,"SHORT":201,"STRING":202,"UINT":203,"ULONG":204,"USHORT":205}

item set 538 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 539 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}
540 states.
Building lookahead grammar.
Computing lookaheads.
Building parse table.
Conflict at state: 0, token: OPEN_BRACE
  reduce by rule: e -> 
  shift token (then go to state 7)
Conflict at state: 0, token: OPEN_BRACKET
  reduce by rule: e -> 
  shift token (then go to state 9)
Conflict at state: 2, token: OPEN_BRACE
  reduce by rule: e -> 
  shift token (then go to state 7)
Conflict at state: 2, token: OPEN_BRACKET
  reduce by rule: e -> 
  shift token (then go to state 9)
Conflict at state: 2, token: EOF
  reduce by rule: e -> 
  shift token (then go to state 10)
Conflict at state: 6, token: OPEN_BRACKET
  reduce by rule: attributes -> attribute-sections
  shift token (then go to state 9)
Conflict at state: 19, token: SEMICOLON
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 19, token: IDENTIFIER
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 19, token: ASSIGN
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 19, token: COMMA
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 19, token: DOT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 19, token: OPEN_BRACKET
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 19, token: OPEN_PARENS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 19, token: OP_INC
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 19, token: OP_DEC
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 19, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 19, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 19, token: OP_XOR_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 19, token: OP_OR_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 19, token: OP_AND_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 19, token: OP_MOD_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 19, token: OP_DIV_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 19, token: OP_MULT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 19, token: OP_SUB_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 19, token: OP_ADD_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 55, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 55, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 55, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 55, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 55, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 55, token: DOT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 55, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 55, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 55, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 55, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 55, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 55, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 55, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 55, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 55, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 55, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 55, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 55, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 55, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 56, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 56, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 56, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 56, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 56, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 56, token: DOT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 56, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 56, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 56, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 56, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 56, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 56, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 56, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 56, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 56, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 56, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 56, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 56, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 56, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 58, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 58, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 58, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 58, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 58, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 58, token: DOT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 58, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 58, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 58, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 58, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 58, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 58, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 58, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 58, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 58, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 58, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 58, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 58, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 58, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 59, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 59, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 59, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 59, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 59, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 59, token: DOT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 59, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 59, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 59, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 59, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 59, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 59, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 59, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 59, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 59, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 59, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 59, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 59, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 59, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 60, token: SEMICOLON
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 60, token: ASSIGN
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 60, token: OP_ADD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 60, token: OP_SUB_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 60, token: OP_MULT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 60, token: OP_DIV_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 60, token: OP_MOD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 60, token: OP_AND_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 60, token: OP_OR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 60, token: OP_XOR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 60, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 60, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 60, token: COMMA
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 60, token: CLOSE_PARENS
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 61, token: SEMICOLON
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 61, token: ASSIGN
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 61, token: OP_ADD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 61, token: OP_SUB_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 61, token: OP_MULT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 61, token: OP_DIV_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 61, token: OP_MOD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 61, token: OP_AND_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 61, token: OP_OR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 61, token: OP_XOR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 61, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 61, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 61, token: COMMA
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 61, token: CLOSE_PARENS
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 84, token: SEMICOLON
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: IDENTIFIER
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: ASSIGN
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: COMMA
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OPEN_BRACKET
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OPEN_PARENS
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: CLOSE_PARENS
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: IS
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OP_GE
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OP_LE
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: GT
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: LT
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: INTERR
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: CLOSE_BRACKET
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: COLON
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OP_OR
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OP_AND
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: BITWISE_OR
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: CARET
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: AMP
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OP_EQ
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OP_NE
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: CLOSE_BRACE
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: AS
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: SEMICOLON
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: IDENTIFIER
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: ASSIGN
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: COMMA
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OPEN_BRACKET
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OPEN_PARENS
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: CLOSE_PARENS
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: IS
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OP_GE
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OP_LE
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: GT
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: LT
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: INTERR
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: CLOSE_BRACKET
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: COLON
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OP_OR
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OP_AND
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: BITWISE_OR
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: CARET
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: AMP
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OP_EQ
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OP_NE
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: CLOSE_BRACE
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: AS
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: SEMICOLON
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: IDENTIFIER
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: ASSIGN
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: COMMA
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OPEN_BRACKET
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OPEN_PARENS
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: CLOSE_PARENS
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: IS
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OP_GE
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OP_LE
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: GT
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: LT
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: INTERR
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: CLOSE_BRACKET
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: COLON
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OP_OR
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OP_AND
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: BITWISE_OR
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: CARET
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: AMP
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OP_EQ
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OP_NE
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: CLOSE_BRACE
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: AS
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: SEMICOLON
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: IDENTIFIER
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: ASSIGN
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: COMMA
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OPEN_BRACKET
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OPEN_PARENS
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: CLOSE_PARENS
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: IS
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OP_GE
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OP_LE
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: GT
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: LT
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: INTERR
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: CLOSE_BRACKET
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: COLON
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OP_OR
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OP_AND
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: BITWISE_OR
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: CARET
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: AMP
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OP_EQ
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: OP_NE
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: CLOSE_BRACE
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 84, token: AS
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 86, token: SEMICOLON
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 86, token: IDENTIFIER
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 86, token: ASSIGN
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 86, token: COMMA
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 86, token: OPEN_BRACKET
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 86, token: DOT
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 86, token: CLOSE_PARENS
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 87, token: SEMICOLON
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 87, token: IDENTIFIER
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 87, token: ASSIGN
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 87, token: COMMA
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 87, token: OPEN_BRACKET
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 87, token: DOT
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 87, token: CLOSE_PARENS
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 99, token: COMMA
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 99, token: ASSIGN
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 99, token: IDENTIFIER
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 99, token: SEMICOLON
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 99, token: OPEN_BRACKET
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 99, token: DOT
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 99, token: CLOSE_PARENS
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 115, token: SEMICOLON
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 115, token: IDENTIFIER
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 115, token: ASSIGN
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 115, token: COMMA
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 115, token: OPEN_BRACKET
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 115, token: DOT
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 115, token: CLOSE_PARENS
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 126, token: COMMA
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 126, token: ASSIGN
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 126, token: IDENTIFIER
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 126, token: SEMICOLON
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 126, token: OPEN_BRACKET
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 126, token: DOT
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 126, token: CLOSE_PARENS
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 127, token: COMMA
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 127, token: ASSIGN
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 127, token: IDENTIFIER
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 127, token: SEMICOLON
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 127, token: OPEN_BRACKET
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 127, token: DOT
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 127, token: CLOSE_PARENS
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 128, token: COMMA
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 128, token: ASSIGN
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 128, token: IDENTIFIER
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 128, token: SEMICOLON
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 128, token: OPEN_BRACKET
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 128, token: DOT
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 128, token: CLOSE_PARENS
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 129, token: COMMA
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 129, token: ASSIGN
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 129, token: IDENTIFIER
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 129, token: SEMICOLON
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 129, token: OPEN_BRACKET
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 129, token: DOT
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 129, token: CLOSE_PARENS
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 130, token: COMMA
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 130, token: ASSIGN
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 130, token: IDENTIFIER
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 130, token: SEMICOLON
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 130, token: OPEN_BRACKET
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 130, token: DOT
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 130, token: CLOSE_PARENS
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 131, token: COMMA
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 131, token: ASSIGN
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 131, token: IDENTIFIER
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 131, token: SEMICOLON
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 131, token: OPEN_BRACKET
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 131, token: DOT
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 131, token: CLOSE_PARENS
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 132, token: COMMA
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 132, token: ASSIGN
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 132, token: IDENTIFIER
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 132, token: SEMICOLON
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 132, token: OPEN_BRACKET
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 132, token: DOT
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 132, token: CLOSE_PARENS
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 133, token: COMMA
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 133, token: ASSIGN
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 133, token: IDENTIFIER
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 133, token: SEMICOLON
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 133, token: OPEN_BRACKET
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 133, token: DOT
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 133, token: CLOSE_PARENS
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 134, token: COMMA
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 134, token: ASSIGN
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 134, token: IDENTIFIER
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 134, token: SEMICOLON
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 134, token: OPEN_BRACKET
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 134, token: DOT
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 134, token: CLOSE_PARENS
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 135, token: COMMA
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 135, token: ASSIGN
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 135, token: IDENTIFIER
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 135, token: SEMICOLON
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 135, token: OPEN_BRACKET
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 135, token: DOT
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 135, token: CLOSE_PARENS
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 136, token: COMMA
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 136, token: ASSIGN
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 136, token: IDENTIFIER
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 136, token: SEMICOLON
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 136, token: OPEN_BRACKET
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 136, token: DOT
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 136, token: CLOSE_PARENS
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 245, token: OPEN_PARENS
  reduce by rule: reference-type -> delegate-type
  shift token (then go to state 351)
Conflict at state: 260, token: OPEN_BRACKET
  reduce by rule: array-type -> non-array-type rank-specifiers
  shift token (then go to state 262)
Conflict at state: 272, token: CLOSE_PARENS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: DOT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: OPEN_BRACKET
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: OP_XOR_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: OP_OR_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: OP_AND_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: OP_MOD_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: OP_DIV_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: OP_MULT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: OP_SUB_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: OP_ADD_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: ASSIGN
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: OPEN_PARENS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: OP_INC
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: OP_DEC
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: INTERR
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: STAR
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: DIV
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: PERCENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: OP_LEFT_SHIFT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: RIGHT_SHIFT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: OP_EQ
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: OP_NE
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: CARET
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: OP_AND
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: OP_OR
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: BITWISE_OR
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: AMP
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: AS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: IS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: OP_GE
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: OP_LE
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: GT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: LT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: MINUS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: PLUS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: IDENTIFIER
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: COMMA
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 272, token: SEMICOLON
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 303, token: CLOSE_PARENS
  reduce by rule: boolean-expression -> expression
  reduce by rule: boolean-expression -> expression
Conflict at state: 303, token: SEMICOLON
  reduce by rule: boolean-expression -> expression
  reduce by rule: boolean-expression -> expression
Conflict at state: 377, token: ASSIGN
  reduce by rule: simple-name -> IDENTIFIER
  shift token (then go to state 455)
Conflict at state: 462, token: ELSE
  reduce by rule: if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
  shift token (then go to state 490)

377 Conflict(s) found in grammar.
Done.
