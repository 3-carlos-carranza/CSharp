Processing grammar.
$accept(0)
$end(1)
error(2)
compilationUnit(3)
compilation-unit(4)
EOF(5)
es(6)
e(7)
declaration-statement(8)
COLON_IDENTIFIER(9)
COLON(10)
IDENTIFIER_WITH_TEMPLATE(11)
BOOLEAN_LITERAL(12)
TRUE(13)
FALSE(14)
literal(15)
REAL_LITERAL(16)
INTEGER_LITERAL(17)
STRING_LITERAL(18)
CHARACTER_LITERAL(19)
NULL(20)
namespace-name(21)
namespace-or-type-name(22)
type-name(23)
DOUBLE_COLON(24)
IDENTIFIER_WITH_KEYWORD(25)
DOT(26)
IDENTIFIER(27)
TEMPLATE(28)
EMPTY_TEMPLATE(29)
LT(30)
GT(31)
STARS(32)
STAR(33)
type(34)
non-array-type(35)
array-type(36)
type-with-interr(37)
INTERR(38)
SBYTE(39)
BYTE(40)
SHORT(41)
USHORT(42)
INT(43)
UINT(44)
LONG(45)
ULONG(46)
CHAR(47)
FLOAT(48)
DOUBLE(49)
DECIMAL(50)
BOOL(51)
OBJECT(52)
STRING(53)
VOID(54)
rank-specifiers(55)
rank-specifier(56)
OPEN_BRACKET(57)
dim-separators(58)
CLOSE_BRACKET(59)
COMMA(60)
variable-reference(61)
expression(62)
argument-list(63)
argument(64)
REF(65)
OUT(66)
primary-expression(67)
primary-no-array-creation-expression(68)
array-creation-expression(69)
lambda-expression(70)
cast-expression(71)
parenthesized-expression(72)
double-colon-access(73)
member-access(74)
invocation-expressions(75)
element-access(76)
this-access(77)
base-access(78)
post-increment-expression(79)
post-decrement-expression(80)
delegate-creation-expression(81)
object-creation-expression(82)
typeof-expression(83)
sizeof-expression(84)
checked-expression(85)
unchecked-expression(86)
OP_DBLPTR(87)
block(88)
DELEGATE(89)
delegate-expression(90)
id-list(91)
type-expression-list(92)
dbl-expression-list(93)
OPEN_PARENS(94)
CLOSE_PARENS(95)
expression-list(96)
formal-parameter-list(97)
simple-name(98)
OP_PTR(99)
keyword-invocation(100)
DEFAULT(101)
invocation-expression(102)
AWAIT(103)
THIS(104)
BASE(105)
OP_INC(106)
OP_DEC(107)
type-with-identifier(108)
NEW(109)
IDENTIFIER_WITH_DOT(110)
block-expression-with-brace(111)
argument-list-with-braces(112)
argument-list-with-brace(113)
OPEN_BRACE(114)
CLOSE_BRACE(115)
STACKALLOC(116)
array-initializer(117)
TYPEOF(118)
SIZEOF(119)
CHECKED(120)
UNCHECKED(121)
unary-expression(122)
pre-increment-expression(123)
pre-decrement-expression(124)
PLUS(125)
OP_COALESCING(126)
MINUS(127)
BANG(128)
TILDE(129)
expression-with-comma(130)
multiplicative-expression(131)
DIV(132)
PERCENT(133)
additive-expression(134)
shift-expression(135)
OP_LEFT_SHIFT(136)
RIGHT_SHIFT(137)
relational-expression(138)
OP_LE(139)
OP_GE(140)
IS(141)
AS(142)
equality-expression(143)
OP_EQ(144)
OP_NE(145)
and-expression(146)
AMP(147)
exclusive-or-expression(148)
CARET(149)
inclusive-or-expression(150)
BITWISE_OR(151)
conditional-and-expression(152)
OP_AND(153)
conditional-or-expression(154)
OP_OR(155)
conditional-expression(156)
assignment(157)
assignment-operator(158)
block-expression(159)
block-expression-list-unit(160)
block-expression-list(161)
ASSIGN(162)
OP_ADD_ASSIGNMENT(163)
OP_SUB_ASSIGNMENT(164)
OP_MULT_ASSIGNMENT(165)
OP_DIV_ASSIGNMENT(166)
OP_MOD_ASSIGNMENT(167)
OP_AND_ASSIGNMENT(168)
OP_OR_ASSIGNMENT(169)
OP_XOR_ASSIGNMENT(170)
OP_LEFT_SHIFT_ASSIGNMENT(171)
RIGHT_SHIFT_ASSIGNMENT(172)
constant-expression(173)
boolean-expression(174)
statement(175)
labeled-statement(176)
embedded-statement(177)
empty-statement(178)
statement-expression(179)
SEMICOLON(180)
selection-statement(181)
iteration-statement(182)
jump-statement(183)
try-statement(184)
checked-statement(185)
unchecked-statement(186)
lock-statement(187)
using-statement(188)
unsafe-statement(189)
fixed-statement(190)
modifiers(191)
FIXED(192)
local-variable-declarators(193)
UNSAFE(194)
statement-list(195)
switch-labels(196)
local-variable-declaration(197)
local-constant-declaration(198)
local-variable-declarator(199)
local-variable(200)
local-variable-initializer(201)
CONST(202)
constant-declarators(203)
constant-declarator(204)
if-statement(205)
switch-statement(206)
IF(207)
ELSE(208)
SWITCH(209)
switch-block(210)
switch-sections(211)
switch-section(212)
switch-label(213)
CASE(214)
while-statement(215)
do-statement(216)
for-statement(217)
foreach-statement(218)
WHILE(219)
DO(220)
FOR(221)
for-initializer(222)
for-condition(223)
for-iterator(224)
statement-expression-list(225)
FOREACH(226)
IN(227)
break-statement(228)
continue-statement(229)
goto-statement(230)
return-statement(231)
throw-statement(232)
YIELD(233)
BREAK(234)
CONTINUE(235)
GOTO(236)
RETURN(237)
THROW(238)
TRY(239)
catch-clauses(240)
finally-clause(241)
specific-catch-clauses(242)
general-catch-clause(243)
specific-catch-clause(244)
CATCH(245)
FINALLY(246)
LOCK(247)
USING(248)
resource-acquisition(249)
variable-initializer-list(250)
variable-initializer(251)
global-attributes(252)
global-attribute-sections(253)
global-attribute-section(254)
global-attribute-target-specifier(255)
attribute-list(256)
global-attribute-target(257)
ASSEMBLY(258)
MODULE(259)
attributes(260)
attribute-sections(261)
attribute-section(262)
attribute-target-specifier(263)
attribute-target(264)
FIELD(265)
EVENT(266)
METHOD(267)
PARAM(268)
PROPERTY(269)
TYPE(270)
attribute(271)
attribute-name(272)
attribute-arguments(273)
positional-argument-list(274)
named-argument-list(275)
positional-argument(276)
attribute-argument-expression(277)
named-argument(278)
delegate-declaration(279)
where-base(280)
enum-declaration(281)
ENUM(282)
enum-body(283)
enum-base(284)
enum-member-declarations(285)
enum-modifiers(286)
enum-modifier(287)
PUBLIC(288)
PROTECTED(289)
INTERNAL(290)
PRIVATE(291)
enum-member-declaration(292)
interface-declaration(293)
INTERFACE(294)
interface-body(295)
interface-base(296)
interface-type-list(297)
interface-member-declarations(298)
interface-member-declaration(299)
interface-method-declaration(300)
interface-property-declaration(301)
interface-event-declaration(302)
interface-indexer-declaration(303)
interface-accessors(304)
GET(305)
SET(306)
struct-declaration(307)
STRUCT(308)
struct-body(309)
struct-interfaces(310)
struct-member-declarations(311)
struct-member-declaration(312)
constant-declaration(313)
field-declaration(314)
method-declaration(315)
property-declaration(316)
event-declaration(317)
indexer-declaration(318)
operator-declaration(319)
constructor-declaration(320)
static-constructor-declaration(321)
type-declaration(322)
using-directives(323)
namespace-member-declarations(324)
namespace-declaration(325)
NAMESPACE(326)
namespace-body(327)
using-directive(328)
using-alias-directive(329)
using-namespace-directive(330)
namespace-member-declaration(331)
class-declaration(332)
modifier(333)
ASYNC(334)
PARTIAL(335)
ABSTRACT(336)
SEALED(337)
STATIC(338)
READONLY(339)
VOLATILE(340)
VIRTUAL(341)
OVERRIDE(342)
EXTERN(343)
CLASS(344)
class-body(345)
class-base(346)
class-modifiers(347)
class-modifier(348)
where-units(349)
where-unit(350)
where-names(351)
where-name(352)
WHERE(353)
class-member-declarations(354)
class-member-declaration(355)
destructor-declaration(356)
member-name(357)
field-modifiers(358)
field-modifier(359)
variable-declarators(360)
variable-declarator(361)
method-header(362)
method-modifier(363)
method-body(364)
fixed-parameters(365)
parameter-array(366)
fixed-parameter(367)
ADD(368)
REMOVE(369)
PARAMS(370)
parameter-modifier(371)
accessor-declarations(372)
get-accessor-declaration(373)
set-accessor-declaration(374)
event-accessor-declarations(375)
add-accessor-declaration(376)
remove-accessor-declaration(377)
indexer-declarator(378)
operator-declarator(379)
operator-modifiers(380)
operator-modifier(381)
unary-operator-declarator(382)
binary-operator-declarator(383)
conversion-operator-declarator(384)
OPERATOR(385)
overloadable-operator(386)
overloadable-unary-operator(387)
overloadable-binary-operator(388)
IMPLICIT(389)
EXPLICIT(390)
constructor-declarator(391)
constructor-initializer(392)
static-constructor-modifiers(393)

Item sets
------

item set 0 
$accept -> .compilationUnit $end #lookaheads= $end
compilationUnit -> .compilation-unit EOF
compilation-unit -> .
compilation-unit -> .using-directives
compilation-unit -> .global-attributes
compilation-unit -> .namespace-member-declarations
compilation-unit -> .global-attributes namespace-member-declarations
compilation-unit -> .using-directives namespace-member-declarations
compilation-unit -> .using-directives global-attributes
compilation-unit -> .using-directives global-attributes namespace-member-declarations
using-directives -> .using-directive
using-directives -> .using-directives using-directive
global-attributes -> .global-attribute-sections
namespace-member-declarations -> .namespace-member-declaration
namespace-member-declarations -> .namespace-member-declarations namespace-member-declaration
using-directive -> .using-alias-directive
using-directive -> .using-namespace-directive
global-attribute-sections -> .global-attribute-section
global-attribute-sections -> .global-attribute-sections global-attribute-section
namespace-member-declaration -> .namespace-declaration
namespace-member-declaration -> .type-declaration
using-alias-directive -> .USING IDENTIFIER_WITH_TEMPLATE ASSIGN namespace-or-type-name SEMICOLON
using-namespace-directive -> .USING namespace-name SEMICOLON
global-attribute-section -> .OPEN_BRACKET global-attribute-target-specifier attribute-list CLOSE_BRACKET
global-attribute-section -> .OPEN_BRACKET global-attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body SEMICOLON
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"compilationUnit":1,"compilation-unit":2,"using-directives":3,"global-attributes":4,"namespace-member-declarations":5,"using-directive":6,"global-attribute-sections":7,"namespace-member-declaration":8,"using-alias-directive":9,"using-namespace-directive":10,"global-attribute-section":11,"namespace-declaration":12,"type-declaration":13,"USING":14,"OPEN_BRACKET":15,"NAMESPACE":16,"class-declaration":17,"struct-declaration":18,"interface-declaration":19,"enum-declaration":20,"delegate-declaration":21,"CLASS":22,"attributes":23,"modifiers":24,"STRUCT":25,"INTERFACE":26,"ENUM":27,"DELEGATE":28,"attribute-sections":29,"modifier":30,"attribute-section":31,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47}

item set 1 
$accept -> compilationUnit .$end #lookaheads= $end 
transitions ->  {}

item set 2 
compilationUnit -> compilation-unit .EOF 
transitions ->  {"EOF":48}

item set 3 
compilation-unit -> using-directives .
compilation-unit -> using-directives .namespace-member-declarations
compilation-unit -> using-directives .global-attributes
compilation-unit -> using-directives .global-attributes namespace-member-declarations
using-directives -> using-directives .using-directive
namespace-member-declarations -> .namespace-member-declaration
namespace-member-declarations -> .namespace-member-declarations namespace-member-declaration
global-attributes -> .global-attribute-sections
using-directive -> .using-alias-directive
using-directive -> .using-namespace-directive
namespace-member-declaration -> .namespace-declaration
namespace-member-declaration -> .type-declaration
global-attribute-sections -> .global-attribute-section
global-attribute-sections -> .global-attribute-sections global-attribute-section
using-alias-directive -> .USING IDENTIFIER_WITH_TEMPLATE ASSIGN namespace-or-type-name SEMICOLON
using-namespace-directive -> .USING namespace-name SEMICOLON
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body SEMICOLON
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
global-attribute-section -> .OPEN_BRACKET global-attribute-target-specifier attribute-list CLOSE_BRACKET
global-attribute-section -> .OPEN_BRACKET global-attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"namespace-member-declarations":49,"global-attributes":50,"using-directive":51,"namespace-member-declaration":8,"global-attribute-sections":7,"using-alias-directive":9,"using-namespace-directive":10,"namespace-declaration":12,"type-declaration":13,"global-attribute-section":11,"USING":14,"NAMESPACE":16,"class-declaration":17,"struct-declaration":18,"interface-declaration":19,"enum-declaration":20,"delegate-declaration":21,"OPEN_BRACKET":15,"CLASS":22,"attributes":23,"modifiers":24,"STRUCT":25,"INTERFACE":26,"ENUM":27,"DELEGATE":28,"attribute-sections":29,"modifier":30,"attribute-section":31,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47}

item set 4 
compilation-unit -> global-attributes .
compilation-unit -> global-attributes .namespace-member-declarations
namespace-member-declarations -> .namespace-member-declaration
namespace-member-declarations -> .namespace-member-declarations namespace-member-declaration
namespace-member-declaration -> .namespace-declaration
namespace-member-declaration -> .type-declaration
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body SEMICOLON
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"namespace-member-declarations":52,"namespace-member-declaration":8,"namespace-declaration":12,"type-declaration":13,"NAMESPACE":16,"class-declaration":17,"struct-declaration":18,"interface-declaration":19,"enum-declaration":20,"delegate-declaration":21,"CLASS":22,"attributes":23,"modifiers":24,"STRUCT":25,"INTERFACE":26,"ENUM":27,"DELEGATE":28,"attribute-sections":29,"modifier":30,"attribute-section":31,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47,"OPEN_BRACKET":53}

item set 5 
compilation-unit -> namespace-member-declarations .
namespace-member-declarations -> namespace-member-declarations .namespace-member-declaration
namespace-member-declaration -> .namespace-declaration
namespace-member-declaration -> .type-declaration
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body SEMICOLON
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"namespace-member-declaration":54,"namespace-declaration":12,"type-declaration":13,"NAMESPACE":16,"class-declaration":17,"struct-declaration":18,"interface-declaration":19,"enum-declaration":20,"delegate-declaration":21,"CLASS":22,"attributes":23,"modifiers":24,"STRUCT":25,"INTERFACE":26,"ENUM":27,"DELEGATE":28,"attribute-sections":29,"modifier":30,"attribute-section":31,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47,"OPEN_BRACKET":53}

item set 6 
using-directives -> using-directive . 
transitions ->  {}

item set 7 
global-attributes -> global-attribute-sections .
global-attribute-sections -> global-attribute-sections .global-attribute-section
global-attribute-section -> .OPEN_BRACKET global-attribute-target-specifier attribute-list CLOSE_BRACKET
global-attribute-section -> .OPEN_BRACKET global-attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"global-attribute-section":55,"OPEN_BRACKET":56}

item set 8 
namespace-member-declarations -> namespace-member-declaration . 
transitions ->  {}

item set 9 
using-directive -> using-alias-directive . 
transitions ->  {}

item set 10 
using-directive -> using-namespace-directive . 
transitions ->  {}

item set 11 
global-attribute-sections -> global-attribute-section . 
transitions ->  {}

item set 12 
namespace-member-declaration -> namespace-declaration . 
transitions ->  {}

item set 13 
namespace-member-declaration -> type-declaration . 
transitions ->  {}

item set 14 
using-alias-directive -> USING .IDENTIFIER_WITH_TEMPLATE ASSIGN namespace-or-type-name SEMICOLON
using-namespace-directive -> USING .namespace-name SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":57,"namespace-name":58,"IDENTIFIER":59,"namespace-or-type-name":60,"IDENTIFIER_WITH_KEYWORD":61,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76}

item set 15 
global-attribute-section -> OPEN_BRACKET .global-attribute-target-specifier attribute-list CLOSE_BRACKET
global-attribute-section -> OPEN_BRACKET .global-attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-list COMMA CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
global-attribute-target-specifier -> .global-attribute-target COLON
attribute-list -> .attribute
attribute-list -> .attribute-list COMMA attribute
attribute-target-specifier -> .attribute-target COLON
global-attribute-target -> .ASSEMBLY
global-attribute-target -> .MODULE
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-target -> .FIELD
attribute-target -> .EVENT
attribute-target -> .METHOD
attribute-target -> .PARAM
attribute-target -> .PROPERTY
attribute-target -> .RETURN
attribute-target -> .TYPE
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"global-attribute-target-specifier":77,"attribute-list":78,"attribute-target-specifier":79,"global-attribute-target":80,"attribute":81,"attribute-target":82,"ASSEMBLY":83,"MODULE":84,"attribute-name":85,"FIELD":86,"EVENT":87,"METHOD":88,"PARAM":89,"PROPERTY":90,"RETURN":91,"TYPE":92,"type-name":93,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 16 
namespace-declaration -> NAMESPACE .namespace-or-type-name namespace-body
namespace-declaration -> NAMESPACE .namespace-or-type-name namespace-body SEMICOLON
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"namespace-or-type-name":96,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 17 
type-declaration -> class-declaration . 
transitions ->  {}

item set 18 
type-declaration -> struct-declaration . 
transitions ->  {}

item set 19 
type-declaration -> interface-declaration . 
transitions ->  {}

item set 20 
type-declaration -> enum-declaration . 
transitions ->  {}

item set 21 
type-declaration -> delegate-declaration . 
transitions ->  {}

item set 22 
class-declaration -> CLASS .IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> CLASS .IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> CLASS .IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> CLASS .IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":97,"IDENTIFIER":59}

item set 23 
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"CLASS":98,"modifiers":99,"STRUCT":100,"INTERFACE":101,"ENUM":102,"DELEGATE":103,"modifier":30,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47}

item set 24 
class-declaration -> modifiers .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> modifiers .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> modifiers .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> modifiers .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"CLASS":104,"STRUCT":105,"INTERFACE":106,"ENUM":107,"DELEGATE":108,"modifier":109,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47}

item set 25 
struct-declaration -> STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":110,"IDENTIFIER":59}

item set 26 
interface-declaration -> INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":111,"IDENTIFIER":59}

item set 27 
enum-declaration -> ENUM .IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> ENUM .IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":112,"IDENTIFIER":59}

item set 28 
delegate-declaration -> DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":113,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 29 
attributes -> attribute-sections .
attribute-sections -> attribute-sections .attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attribute-section":134,"OPEN_BRACKET":53}

item set 30 
modifiers -> modifier . 
transitions ->  {}

item set 31 
attribute-sections -> attribute-section . 
transitions ->  {}

item set 32 
modifier -> UNSAFE . 
transitions ->  {}

item set 33 
modifier -> ASYNC . 
transitions ->  {}

item set 34 
modifier -> PUBLIC . 
transitions ->  {}

item set 35 
modifier -> PARTIAL . 
transitions ->  {}

item set 36 
modifier -> PROTECTED . 
transitions ->  {}

item set 37 
modifier -> INTERNAL . 
transitions ->  {}

item set 38 
modifier -> PRIVATE . 
transitions ->  {}

item set 39 
modifier -> ABSTRACT . 
transitions ->  {}

item set 40 
modifier -> SEALED . 
transitions ->  {}

item set 41 
modifier -> STATIC . 
transitions ->  {}

item set 42 
modifier -> READONLY . 
transitions ->  {}

item set 43 
modifier -> VOLATILE . 
transitions ->  {}

item set 44 
modifier -> VIRTUAL . 
transitions ->  {}

item set 45 
modifier -> OVERRIDE . 
transitions ->  {}

item set 46 
modifier -> EXTERN . 
transitions ->  {}

item set 47 
modifier -> NEW . 
transitions ->  {}

item set 48 
compilationUnit -> compilation-unit EOF . 
transitions ->  {}

item set 49 
compilation-unit -> using-directives namespace-member-declarations .
namespace-member-declarations -> namespace-member-declarations .namespace-member-declaration
namespace-member-declaration -> .namespace-declaration
namespace-member-declaration -> .type-declaration
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body SEMICOLON
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"namespace-member-declaration":54,"namespace-declaration":12,"type-declaration":13,"NAMESPACE":16,"class-declaration":17,"struct-declaration":18,"interface-declaration":19,"enum-declaration":20,"delegate-declaration":21,"CLASS":22,"attributes":23,"modifiers":24,"STRUCT":25,"INTERFACE":26,"ENUM":27,"DELEGATE":28,"attribute-sections":29,"modifier":30,"attribute-section":31,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47,"OPEN_BRACKET":53}

item set 50 
compilation-unit -> using-directives global-attributes .
compilation-unit -> using-directives global-attributes .namespace-member-declarations
namespace-member-declarations -> .namespace-member-declaration
namespace-member-declarations -> .namespace-member-declarations namespace-member-declaration
namespace-member-declaration -> .namespace-declaration
namespace-member-declaration -> .type-declaration
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body SEMICOLON
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"namespace-member-declarations":135,"namespace-member-declaration":8,"namespace-declaration":12,"type-declaration":13,"NAMESPACE":16,"class-declaration":17,"struct-declaration":18,"interface-declaration":19,"enum-declaration":20,"delegate-declaration":21,"CLASS":22,"attributes":23,"modifiers":24,"STRUCT":25,"INTERFACE":26,"ENUM":27,"DELEGATE":28,"attribute-sections":29,"modifier":30,"attribute-section":31,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47,"OPEN_BRACKET":53}

item set 51 
using-directives -> using-directives using-directive . 
transitions ->  {}

item set 52 
compilation-unit -> global-attributes namespace-member-declarations .
namespace-member-declarations -> namespace-member-declarations .namespace-member-declaration
namespace-member-declaration -> .namespace-declaration
namespace-member-declaration -> .type-declaration
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body SEMICOLON
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"namespace-member-declaration":54,"namespace-declaration":12,"type-declaration":13,"NAMESPACE":16,"class-declaration":17,"struct-declaration":18,"interface-declaration":19,"enum-declaration":20,"delegate-declaration":21,"CLASS":22,"attributes":23,"modifiers":24,"STRUCT":25,"INTERFACE":26,"ENUM":27,"DELEGATE":28,"attribute-sections":29,"modifier":30,"attribute-section":31,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47,"OPEN_BRACKET":53}

item set 53 
attribute-section -> OPEN_BRACKET .attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-list COMMA CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
attribute-list -> .attribute
attribute-list -> .attribute-list COMMA attribute
attribute-target-specifier -> .attribute-target COLON
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-target -> .FIELD
attribute-target -> .EVENT
attribute-target -> .METHOD
attribute-target -> .PARAM
attribute-target -> .PROPERTY
attribute-target -> .RETURN
attribute-target -> .TYPE
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"attribute-list":78,"attribute-target-specifier":79,"attribute":81,"attribute-target":82,"attribute-name":85,"FIELD":86,"EVENT":87,"METHOD":88,"PARAM":89,"PROPERTY":90,"RETURN":91,"TYPE":92,"type-name":93,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"ASSEMBLY":69,"MODULE":71,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 54 
namespace-member-declarations -> namespace-member-declarations namespace-member-declaration . 
transitions ->  {}

item set 55 
global-attribute-sections -> global-attribute-sections global-attribute-section . 
transitions ->  {}

item set 56 
global-attribute-section -> OPEN_BRACKET .global-attribute-target-specifier attribute-list CLOSE_BRACKET
global-attribute-section -> OPEN_BRACKET .global-attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
global-attribute-target-specifier -> .global-attribute-target COLON
global-attribute-target -> .ASSEMBLY
global-attribute-target -> .MODULE 
transitions ->  {"global-attribute-target-specifier":77,"global-attribute-target":80,"ASSEMBLY":136,"MODULE":137}

item set 57 
using-alias-directive -> USING IDENTIFIER_WITH_TEMPLATE .ASSIGN namespace-or-type-name SEMICOLON
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"ASSIGN":138}

item set 58 
using-namespace-directive -> USING namespace-name .SEMICOLON 
transitions ->  {"SEMICOLON":139}

item set 59 
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER .TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER . 
transitions ->  {"TEMPLATE":140}

item set 60 
namespace-name -> namespace-or-type-name .
namespace-or-type-name -> namespace-or-type-name .DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> namespace-or-type-name .DOT IDENTIFIER_WITH_KEYWORD 
transitions ->  {"DOUBLE_COLON":141,"DOT":142}

item set 61 
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 62 
IDENTIFIER_WITH_KEYWORD -> ADD . 
transitions ->  {}

item set 63 
IDENTIFIER_WITH_KEYWORD -> REMOVE . 
transitions ->  {}

item set 64 
IDENTIFIER_WITH_KEYWORD -> SET . 
transitions ->  {}

item set 65 
IDENTIFIER_WITH_KEYWORD -> PARAMS . 
transitions ->  {}

item set 66 
IDENTIFIER_WITH_KEYWORD -> DEFAULT . 
transitions ->  {}

item set 67 
IDENTIFIER_WITH_KEYWORD -> METHOD . 
transitions ->  {}

item set 68 
IDENTIFIER_WITH_KEYWORD -> PARAM . 
transitions ->  {}

item set 69 
IDENTIFIER_WITH_KEYWORD -> ASSEMBLY . 
transitions ->  {}

item set 70 
IDENTIFIER_WITH_KEYWORD -> PROPERTY . 
transitions ->  {}

item set 71 
IDENTIFIER_WITH_KEYWORD -> MODULE . 
transitions ->  {}

item set 72 
IDENTIFIER_WITH_KEYWORD -> FIELD . 
transitions ->  {}

item set 73 
IDENTIFIER_WITH_KEYWORD -> TYPE . 
transitions ->  {}

item set 74 
IDENTIFIER_WITH_KEYWORD -> THIS . 
transitions ->  {}

item set 75 
IDENTIFIER_WITH_KEYWORD -> ASYNC . 
transitions ->  {}

item set 76 
IDENTIFIER_WITH_KEYWORD -> WHERE . 
transitions ->  {}

item set 77 
global-attribute-section -> OPEN_BRACKET global-attribute-target-specifier .attribute-list CLOSE_BRACKET
global-attribute-section -> OPEN_BRACKET global-attribute-target-specifier .attribute-list COMMA CLOSE_BRACKET
attribute-list -> .attribute
attribute-list -> .attribute-list COMMA attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"attribute-list":143,"attribute":81,"attribute-name":85,"type-name":93,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 78 
attribute-section -> OPEN_BRACKET attribute-list .CLOSE_BRACKET
attribute-section -> OPEN_BRACKET attribute-list .COMMA CLOSE_BRACKET
attribute-list -> attribute-list .COMMA attribute 
transitions ->  {"CLOSE_BRACKET":144,"COMMA":145}

item set 79 
attribute-section -> OPEN_BRACKET attribute-target-specifier .attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET attribute-target-specifier .attribute-list COMMA CLOSE_BRACKET
attribute-list -> .attribute
attribute-list -> .attribute-list COMMA attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"attribute-list":146,"attribute":81,"attribute-name":85,"type-name":93,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 80 
global-attribute-target-specifier -> global-attribute-target .COLON 
transitions ->  {"COLON":147}

item set 81 
attribute-list -> attribute . 
transitions ->  {}

item set 82 
attribute-target-specifier -> attribute-target .COLON 
transitions ->  {"COLON":148}

item set 83 
global-attribute-target -> ASSEMBLY .
IDENTIFIER_WITH_KEYWORD -> ASSEMBLY . 
transitions ->  {}

item set 84 
global-attribute-target -> MODULE .
IDENTIFIER_WITH_KEYWORD -> MODULE . 
transitions ->  {}

item set 85 
attribute -> attribute-name .
attribute -> attribute-name .attribute-arguments
attribute-arguments -> .OPEN_PARENS CLOSE_PARENS
attribute-arguments -> .OPEN_PARENS positional-argument-list CLOSE_PARENS
attribute-arguments -> .OPEN_PARENS positional-argument-list COMMA named-argument-list CLOSE_PARENS
attribute-arguments -> .OPEN_PARENS named-argument-list CLOSE_PARENS 
transitions ->  {"attribute-arguments":149,"OPEN_PARENS":150}

item set 86 
attribute-target -> FIELD .
IDENTIFIER_WITH_KEYWORD -> FIELD . 
transitions ->  {}

item set 87 
attribute-target -> EVENT . 
transitions ->  {}

item set 88 
attribute-target -> METHOD .
IDENTIFIER_WITH_KEYWORD -> METHOD . 
transitions ->  {}

item set 89 
attribute-target -> PARAM .
IDENTIFIER_WITH_KEYWORD -> PARAM . 
transitions ->  {}

item set 90 
attribute-target -> PROPERTY .
IDENTIFIER_WITH_KEYWORD -> PROPERTY . 
transitions ->  {}

item set 91 
attribute-target -> RETURN . 
transitions ->  {}

item set 92 
attribute-target -> TYPE .
IDENTIFIER_WITH_KEYWORD -> TYPE . 
transitions ->  {}

item set 93 
attribute-name -> type-name . 
transitions ->  {}

item set 94 
type-name -> namespace-or-type-name .
namespace-or-type-name -> namespace-or-type-name .DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> namespace-or-type-name .DOT IDENTIFIER_WITH_KEYWORD 
transitions ->  {"DOUBLE_COLON":141,"DOT":142}

item set 95 
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {}

item set 96 
namespace-declaration -> NAMESPACE namespace-or-type-name .namespace-body
namespace-declaration -> NAMESPACE namespace-or-type-name .namespace-body SEMICOLON
namespace-or-type-name -> namespace-or-type-name .DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> namespace-or-type-name .DOT IDENTIFIER_WITH_KEYWORD
namespace-body -> .OPEN_BRACE CLOSE_BRACE
namespace-body -> .OPEN_BRACE using-directives CLOSE_BRACE
namespace-body -> .OPEN_BRACE namespace-member-declarations CLOSE_BRACE
namespace-body -> .OPEN_BRACE using-directives namespace-member-declarations CLOSE_BRACE 
transitions ->  {"namespace-body":151,"DOUBLE_COLON":141,"DOT":142,"OPEN_BRACE":152}

item set 97 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE .where-base class-body
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE .class-base where-base class-body
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE .where-base class-body SEMICOLON
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE .class-base where-base class-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
class-base -> .COLON type-with-interr
class-base -> .COLON interface-type-list
class-base -> .COLON type-with-interr COMMA interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":153,"class-base":154,"where-units":155,"COLON":156,"where-unit":157,"WHERE":158}

item set 98 
class-declaration -> attributes CLASS .IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes CLASS .IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes CLASS .IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes CLASS .IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":159,"IDENTIFIER":59}

item set 99 
class-declaration -> attributes modifiers .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes modifiers .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes modifiers .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes modifiers .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> attributes modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"CLASS":160,"STRUCT":161,"INTERFACE":162,"ENUM":163,"DELEGATE":164,"modifier":109,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47}

item set 100 
struct-declaration -> attributes STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":165,"IDENTIFIER":59}

item set 101 
interface-declaration -> attributes INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":166,"IDENTIFIER":59}

item set 102 
enum-declaration -> attributes ENUM .IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes ENUM .IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":167,"IDENTIFIER":59}

item set 103 
delegate-declaration -> attributes DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":168,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 104 
class-declaration -> modifiers CLASS .IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> modifiers CLASS .IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> modifiers CLASS .IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> modifiers CLASS .IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":169,"IDENTIFIER":59}

item set 105 
struct-declaration -> modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":170,"IDENTIFIER":59}

item set 106 
interface-declaration -> modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":171,"IDENTIFIER":59}

item set 107 
enum-declaration -> modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":172,"IDENTIFIER":59}

item set 108 
delegate-declaration -> modifiers DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":173,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 109 
modifiers -> modifiers modifier . 
transitions ->  {}

item set 110 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body SEMICOLON
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
struct-interfaces -> .COLON interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":174,"struct-interfaces":175,"where-units":155,"COLON":176,"where-unit":157,"WHERE":158}

item set 111 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body SEMICOLON
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
interface-base -> .COLON interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":177,"interface-base":178,"where-units":155,"COLON":179,"where-unit":157,"WHERE":158}

item set 112 
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE .enum-body
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE .enum-body SEMICOLON
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON type-with-interr 
transitions ->  {"enum-body":180,"enum-base":181,"OPEN_BRACE":182,"COLON":183}

item set 113 
delegate-declaration -> DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":184,"IDENTIFIER":59}

item set 114 
type-with-interr -> type .INTERR
type-with-interr -> type .
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"INTERR":185,"rank-specifiers":186,"rank-specifier":187,"OPEN_BRACKET":188}

item set 115 
type -> non-array-type .STARS
type -> non-array-type .
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"STARS":189,"STAR":190}

item set 116 
type -> array-type .STARS
type -> array-type .
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"STARS":191,"STAR":190}

item set 117 
non-array-type -> type-name . 
transitions ->  {}

item set 118 
non-array-type -> SBYTE . 
transitions ->  {}

item set 119 
non-array-type -> BYTE . 
transitions ->  {}

item set 120 
non-array-type -> SHORT . 
transitions ->  {}

item set 121 
non-array-type -> USHORT . 
transitions ->  {}

item set 122 
non-array-type -> INT . 
transitions ->  {}

item set 123 
non-array-type -> UINT . 
transitions ->  {}

item set 124 
non-array-type -> LONG . 
transitions ->  {}

item set 125 
non-array-type -> ULONG . 
transitions ->  {}

item set 126 
non-array-type -> CHAR . 
transitions ->  {}

item set 127 
non-array-type -> FLOAT . 
transitions ->  {}

item set 128 
non-array-type -> DOUBLE . 
transitions ->  {}

item set 129 
non-array-type -> DECIMAL . 
transitions ->  {}

item set 130 
non-array-type -> BOOL . 
transitions ->  {}

item set 131 
non-array-type -> OBJECT . 
transitions ->  {}

item set 132 
non-array-type -> STRING . 
transitions ->  {}

item set 133 
non-array-type -> VOID . 
transitions ->  {}

item set 134 
attribute-sections -> attribute-sections attribute-section . 
transitions ->  {}

item set 135 
compilation-unit -> using-directives global-attributes namespace-member-declarations .
namespace-member-declarations -> namespace-member-declarations .namespace-member-declaration
namespace-member-declaration -> .namespace-declaration
namespace-member-declaration -> .type-declaration
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body SEMICOLON
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"namespace-member-declaration":54,"namespace-declaration":12,"type-declaration":13,"NAMESPACE":16,"class-declaration":17,"struct-declaration":18,"interface-declaration":19,"enum-declaration":20,"delegate-declaration":21,"CLASS":22,"attributes":23,"modifiers":24,"STRUCT":25,"INTERFACE":26,"ENUM":27,"DELEGATE":28,"attribute-sections":29,"modifier":30,"attribute-section":31,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47,"OPEN_BRACKET":53}

item set 136 
global-attribute-target -> ASSEMBLY . 
transitions ->  {}

item set 137 
global-attribute-target -> MODULE . 
transitions ->  {}

item set 138 
using-alias-directive -> USING IDENTIFIER_WITH_TEMPLATE ASSIGN .namespace-or-type-name SEMICOLON
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"namespace-or-type-name":192,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 139 
using-namespace-directive -> USING namespace-name SEMICOLON . 
transitions ->  {}

item set 140 
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE . 
transitions ->  {}

item set 141 
namespace-or-type-name -> namespace-or-type-name DOUBLE_COLON .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":193,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 142 
namespace-or-type-name -> namespace-or-type-name DOT .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":194,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 143 
global-attribute-section -> OPEN_BRACKET global-attribute-target-specifier attribute-list .CLOSE_BRACKET
global-attribute-section -> OPEN_BRACKET global-attribute-target-specifier attribute-list .COMMA CLOSE_BRACKET
attribute-list -> attribute-list .COMMA attribute 
transitions ->  {"CLOSE_BRACKET":195,"COMMA":196}

item set 144 
attribute-section -> OPEN_BRACKET attribute-list CLOSE_BRACKET . 
transitions ->  {}

item set 145 
attribute-section -> OPEN_BRACKET attribute-list COMMA .CLOSE_BRACKET
attribute-list -> attribute-list COMMA .attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_BRACKET":197,"attribute":198,"attribute-name":85,"type-name":93,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 146 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list .CLOSE_BRACKET
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list .COMMA CLOSE_BRACKET
attribute-list -> attribute-list .COMMA attribute 
transitions ->  {"CLOSE_BRACKET":199,"COMMA":200}

item set 147 
global-attribute-target-specifier -> global-attribute-target COLON . 
transitions ->  {}

item set 148 
attribute-target-specifier -> attribute-target COLON . 
transitions ->  {}

item set 149 
attribute -> attribute-name attribute-arguments . 
transitions ->  {}

item set 150 
attribute-arguments -> OPEN_PARENS .CLOSE_PARENS
attribute-arguments -> OPEN_PARENS .positional-argument-list CLOSE_PARENS
attribute-arguments -> OPEN_PARENS .positional-argument-list COMMA named-argument-list CLOSE_PARENS
attribute-arguments -> OPEN_PARENS .named-argument-list CLOSE_PARENS
positional-argument-list -> .positional-argument
positional-argument-list -> .positional-argument-list COMMA positional-argument
named-argument-list -> .named-argument
named-argument-list -> .named-argument-list COMMA named-argument
positional-argument -> .attribute-argument-expression
named-argument -> .IDENTIFIER_WITH_TEMPLATE ASSIGN attribute-argument-expression
attribute-argument-expression -> .expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":201,"positional-argument-list":202,"named-argument-list":203,"positional-argument":204,"named-argument":205,"attribute-argument-expression":206,"IDENTIFIER_WITH_TEMPLATE":207,"expression":208,"IDENTIFIER":59,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 151 
namespace-declaration -> NAMESPACE namespace-or-type-name namespace-body .
namespace-declaration -> NAMESPACE namespace-or-type-name namespace-body .SEMICOLON 
transitions ->  {"SEMICOLON":277}

item set 152 
namespace-body -> OPEN_BRACE .CLOSE_BRACE
namespace-body -> OPEN_BRACE .using-directives CLOSE_BRACE
namespace-body -> OPEN_BRACE .namespace-member-declarations CLOSE_BRACE
namespace-body -> OPEN_BRACE .using-directives namespace-member-declarations CLOSE_BRACE
using-directives -> .using-directive
using-directives -> .using-directives using-directive
namespace-member-declarations -> .namespace-member-declaration
namespace-member-declarations -> .namespace-member-declarations namespace-member-declaration
using-directive -> .using-alias-directive
using-directive -> .using-namespace-directive
namespace-member-declaration -> .namespace-declaration
namespace-member-declaration -> .type-declaration
using-alias-directive -> .USING IDENTIFIER_WITH_TEMPLATE ASSIGN namespace-or-type-name SEMICOLON
using-namespace-directive -> .USING namespace-name SEMICOLON
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body SEMICOLON
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACE":278,"using-directives":279,"namespace-member-declarations":280,"using-directive":6,"namespace-member-declaration":8,"using-alias-directive":9,"using-namespace-directive":10,"namespace-declaration":12,"type-declaration":13,"USING":14,"NAMESPACE":16,"class-declaration":17,"struct-declaration":18,"interface-declaration":19,"enum-declaration":20,"delegate-declaration":21,"CLASS":22,"attributes":23,"modifiers":24,"STRUCT":25,"INTERFACE":26,"ENUM":27,"DELEGATE":28,"attribute-sections":29,"modifier":30,"attribute-section":31,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47,"OPEN_BRACKET":53}

item set 153 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE where-base .class-body
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE where-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE class-member-declarations CLOSE_BRACE 
transitions ->  {"class-body":281,"OPEN_BRACE":282}

item set 154 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base .where-base class-body
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base .where-base class-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":283,"where-units":155,"where-unit":157,"WHERE":158}

item set 155 
where-base -> where-units .COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> where-units .
where-units -> where-units .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"COMMA":284,"where-unit":285,"WHERE":158}

item set 156 
class-base -> COLON .type-with-interr
class-base -> COLON .interface-type-list
class-base -> COLON .type-with-interr COMMA interface-type-list
type-with-interr -> .type INTERR
type-with-interr -> .type
interface-type-list -> .type-with-interr
interface-type-list -> .interface-type-list COMMA type-with-interr
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":286,"interface-type-list":287,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 157 
where-units -> where-unit . 
transitions ->  {}

item set 158 
where-unit -> WHERE .type-name COLON where-names
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-name":288,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 159 
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE .where-base class-body
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE .class-base where-base class-body
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE .where-base class-body SEMICOLON
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE .class-base where-base class-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
class-base -> .COLON type-with-interr
class-base -> .COLON interface-type-list
class-base -> .COLON type-with-interr COMMA interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":289,"class-base":290,"where-units":155,"COLON":156,"where-unit":157,"WHERE":158}

item set 160 
class-declaration -> attributes modifiers CLASS .IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes modifiers CLASS .IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes modifiers CLASS .IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes modifiers CLASS .IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":291,"IDENTIFIER":59}

item set 161 
struct-declaration -> attributes modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes modifiers STRUCT .IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":292,"IDENTIFIER":59}

item set 162 
interface-declaration -> attributes modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes modifiers INTERFACE .IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":293,"IDENTIFIER":59}

item set 163 
enum-declaration -> attributes modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes modifiers ENUM .IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":294,"IDENTIFIER":59}

item set 164 
delegate-declaration -> attributes modifiers DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers DELEGATE .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":295,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 165 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body SEMICOLON
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
struct-interfaces -> .COLON interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":296,"struct-interfaces":297,"where-units":155,"COLON":176,"where-unit":157,"WHERE":158}

item set 166 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body SEMICOLON
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
interface-base -> .COLON interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":298,"interface-base":299,"where-units":155,"COLON":179,"where-unit":157,"WHERE":158}

item set 167 
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE .enum-body
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE .enum-body SEMICOLON
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON type-with-interr 
transitions ->  {"enum-body":300,"enum-base":301,"OPEN_BRACE":182,"COLON":183}

item set 168 
delegate-declaration -> attributes DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":302,"IDENTIFIER":59}

item set 169 
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE .where-base class-body
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE .class-base where-base class-body
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE .where-base class-body SEMICOLON
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE .class-base where-base class-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
class-base -> .COLON type-with-interr
class-base -> .COLON interface-type-list
class-base -> .COLON type-with-interr COMMA interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":303,"class-base":304,"where-units":155,"COLON":156,"where-unit":157,"WHERE":158}

item set 170 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body SEMICOLON
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
struct-interfaces -> .COLON interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":305,"struct-interfaces":306,"where-units":155,"COLON":176,"where-unit":157,"WHERE":158}

item set 171 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body SEMICOLON
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
interface-base -> .COLON interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":307,"interface-base":308,"where-units":155,"COLON":179,"where-unit":157,"WHERE":158}

item set 172 
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-body
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-body SEMICOLON
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON type-with-interr 
transitions ->  {"enum-body":309,"enum-base":310,"OPEN_BRACE":182,"COLON":183}

item set 173 
delegate-declaration -> modifiers DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":311,"IDENTIFIER":59}

item set 174 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":312,"OPEN_BRACE":313}

item set 175 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":314,"where-units":155,"where-unit":157,"WHERE":158}

item set 176 
struct-interfaces -> COLON .interface-type-list
interface-type-list -> .type-with-interr
interface-type-list -> .interface-type-list COMMA type-with-interr
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"interface-type-list":315,"type-with-interr":316,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 177 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":317,"OPEN_BRACE":318}

item set 178 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":319,"where-units":155,"where-unit":157,"WHERE":158}

item set 179 
interface-base -> COLON .interface-type-list
interface-type-list -> .type-with-interr
interface-type-list -> .interface-type-list COMMA type-with-interr
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"interface-type-list":320,"type-with-interr":316,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 180 
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-body .
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":321}

item set 181 
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":322,"OPEN_BRACE":182}

item set 182 
enum-body -> OPEN_BRACE .CLOSE_BRACE
enum-body -> OPEN_BRACE .enum-member-declarations CLOSE_BRACE
enum-body -> OPEN_BRACE .enum-member-declarations COMMA CLOSE_BRACE
enum-member-declarations -> .enum-member-declaration
enum-member-declarations -> .enum-member-declarations COMMA enum-member-declaration
enum-member-declaration -> .IDENTIFIER_WITH_TEMPLATE
enum-member-declaration -> .attributes IDENTIFIER_WITH_TEMPLATE
enum-member-declaration -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
enum-member-declaration -> .attributes IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACE":323,"enum-member-declarations":324,"enum-member-declaration":325,"IDENTIFIER_WITH_TEMPLATE":326,"attributes":327,"IDENTIFIER":59,"attribute-sections":29,"attribute-section":31,"OPEN_BRACKET":53}

item set 183 
enum-base -> COLON .type-with-interr
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":328,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 184 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"OPEN_PARENS":329}

item set 185 
type-with-interr -> type INTERR . 
transitions ->  {}

item set 186 
array-type -> type rank-specifiers .
rank-specifiers -> rank-specifiers .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifier":330,"OPEN_BRACKET":188}

item set 187 
rank-specifiers -> rank-specifier . 
transitions ->  {}

item set 188 
rank-specifier -> OPEN_BRACKET .dim-separators CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .CLOSE_BRACKET
dim-separators -> .dim-separators COMMA
dim-separators -> .COMMA 
transitions ->  {"dim-separators":331,"CLOSE_BRACKET":332,"COMMA":333}

item set 189 
type -> non-array-type STARS .
STARS -> STARS .STAR 
transitions ->  {"STAR":334}

item set 190 
STARS -> STAR . 
transitions ->  {}

item set 191 
type -> array-type STARS .
STARS -> STARS .STAR 
transitions ->  {"STAR":334}

item set 192 
using-alias-directive -> USING IDENTIFIER_WITH_TEMPLATE ASSIGN namespace-or-type-name .SEMICOLON
namespace-or-type-name -> namespace-or-type-name .DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> namespace-or-type-name .DOT IDENTIFIER_WITH_KEYWORD 
transitions ->  {"SEMICOLON":335,"DOUBLE_COLON":141,"DOT":142}

item set 193 
namespace-or-type-name -> namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 194 
namespace-or-type-name -> namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 195 
global-attribute-section -> OPEN_BRACKET global-attribute-target-specifier attribute-list CLOSE_BRACKET . 
transitions ->  {}

item set 196 
global-attribute-section -> OPEN_BRACKET global-attribute-target-specifier attribute-list COMMA .CLOSE_BRACKET
attribute-list -> attribute-list COMMA .attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_BRACKET":336,"attribute":198,"attribute-name":85,"type-name":93,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 197 
attribute-section -> OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET . 
transitions ->  {}

item set 198 
attribute-list -> attribute-list COMMA attribute . 
transitions ->  {}

item set 199 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET . 
transitions ->  {}

item set 200 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list COMMA .CLOSE_BRACKET
attribute-list -> attribute-list COMMA .attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_BRACKET":337,"attribute":198,"attribute-name":85,"type-name":93,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 201 
attribute-arguments -> OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 202 
attribute-arguments -> OPEN_PARENS positional-argument-list .CLOSE_PARENS
attribute-arguments -> OPEN_PARENS positional-argument-list .COMMA named-argument-list CLOSE_PARENS
positional-argument-list -> positional-argument-list .COMMA positional-argument 
transitions ->  {"CLOSE_PARENS":338,"COMMA":339}

item set 203 
attribute-arguments -> OPEN_PARENS named-argument-list .CLOSE_PARENS
named-argument-list -> named-argument-list .COMMA named-argument 
transitions ->  {"CLOSE_PARENS":340,"COMMA":341}

item set 204 
positional-argument-list -> positional-argument . 
transitions ->  {}

item set 205 
named-argument-list -> named-argument . 
transitions ->  {}

item set 206 
positional-argument -> attribute-argument-expression . 
transitions ->  {}

item set 207 
named-argument -> IDENTIFIER_WITH_TEMPLATE .ASSIGN attribute-argument-expression
double-colon-access -> IDENTIFIER_WITH_TEMPLATE .DOUBLE_COLON member-access
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"ASSIGN":342,"DOUBLE_COLON":343}

item set 208 
attribute-argument-expression -> expression . 
transitions ->  {}

item set 209 
expression -> conditional-expression . 
transitions ->  {}

item set 210 
expression -> assignment . 
transitions ->  {}

item set 211 
conditional-expression -> conditional-or-expression .
conditional-expression -> conditional-or-expression .INTERR expression
conditional-expression -> conditional-or-expression .INTERR expression COLON expression
conditional-or-expression -> conditional-or-expression .OP_OR conditional-and-expression 
transitions ->  {"INTERR":344,"OP_OR":345}

item set 212 
assignment -> unary-expression .assignment-operator expression
assignment -> unary-expression .assignment-operator block-expression-with-brace
multiplicative-expression -> unary-expression .
assignment-operator -> .ASSIGN
assignment-operator -> .OP_ADD_ASSIGNMENT
assignment-operator -> .OP_SUB_ASSIGNMENT
assignment-operator -> .OP_MULT_ASSIGNMENT
assignment-operator -> .OP_DIV_ASSIGNMENT
assignment-operator -> .OP_MOD_ASSIGNMENT
assignment-operator -> .OP_AND_ASSIGNMENT
assignment-operator -> .OP_OR_ASSIGNMENT
assignment-operator -> .OP_XOR_ASSIGNMENT
assignment-operator -> .OP_LEFT_SHIFT_ASSIGNMENT
assignment-operator -> .RIGHT_SHIFT_ASSIGNMENT 
transitions ->  {"assignment-operator":346,"ASSIGN":347,"OP_ADD_ASSIGNMENT":348,"OP_SUB_ASSIGNMENT":349,"OP_MULT_ASSIGNMENT":350,"OP_DIV_ASSIGNMENT":351,"OP_MOD_ASSIGNMENT":352,"OP_AND_ASSIGNMENT":353,"OP_OR_ASSIGNMENT":354,"OP_XOR_ASSIGNMENT":355,"OP_LEFT_SHIFT_ASSIGNMENT":356,"RIGHT_SHIFT_ASSIGNMENT":357}

item set 213 
conditional-or-expression -> conditional-and-expression .
conditional-and-expression -> conditional-and-expression .OP_AND inclusive-or-expression 
transitions ->  {"OP_AND":358}

item set 214 
unary-expression -> pre-increment-expression . 
transitions ->  {}

item set 215 
unary-expression -> pre-decrement-expression . 
transitions ->  {}

item set 216 
unary-expression -> PLUS .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":359,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 217 
unary-expression -> OP_PTR .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":361,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 218 
unary-expression -> OP_COALESCING .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":362,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 219 
unary-expression -> MINUS .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":363,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 220 
unary-expression -> BANG .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":364,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 221 
unary-expression -> TILDE .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":365,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 222 
unary-expression -> STAR .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":366,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 223 
unary-expression -> primary-expression .
member-access -> primary-expression .DOT IDENTIFIER_WITH_KEYWORD
member-access -> primary-expression .OP_PTR IDENTIFIER_WITH_KEYWORD
post-increment-expression -> primary-expression .OP_INC
post-decrement-expression -> primary-expression .OP_DEC
invocation-expression -> primary-expression .OPEN_PARENS type CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS CLOSE_PARENS 
transitions ->  {"DOT":367,"OP_PTR":368,"OP_INC":369,"OP_DEC":370,"OPEN_PARENS":371}

item set 224 
conditional-and-expression -> inclusive-or-expression .
inclusive-or-expression -> inclusive-or-expression .BITWISE_OR exclusive-or-expression 
transitions ->  {"BITWISE_OR":372}

item set 225 
pre-increment-expression -> OP_INC .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":373,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 226 
pre-decrement-expression -> OP_DEC .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":374,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 227 
primary-expression -> primary-no-array-creation-expression .
element-access -> primary-no-array-creation-expression .OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> primary-no-array-creation-expression .OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> primary-no-array-creation-expression .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"OPEN_BRACKET":375}

item set 228 
primary-expression -> array-creation-expression . 
transitions ->  {}

item set 229 
inclusive-or-expression -> exclusive-or-expression .
exclusive-or-expression -> exclusive-or-expression .CARET and-expression 
transitions ->  {"CARET":376}

item set 230 
primary-no-array-creation-expression -> literal . 
transitions ->  {}

item set 231 
primary-no-array-creation-expression -> lambda-expression . 
transitions ->  {}

item set 232 
primary-no-array-creation-expression -> cast-expression . 
transitions ->  {}

item set 233 
primary-no-array-creation-expression -> parenthesized-expression . 
transitions ->  {}

item set 234 
primary-no-array-creation-expression -> double-colon-access . 
transitions ->  {}

item set 235 
primary-no-array-creation-expression -> member-access . 
transitions ->  {}

item set 236 
primary-no-array-creation-expression -> invocation-expressions .
member-access -> invocation-expressions .DOT IDENTIFIER_WITH_KEYWORD
member-access -> invocation-expressions .OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> invocation-expressions .DOT invocation-expression 
transitions ->  {"DOT":377,"OP_PTR":378}

item set 237 
primary-no-array-creation-expression -> element-access . 
transitions ->  {}

item set 238 
primary-no-array-creation-expression -> this-access . 
transitions ->  {}

item set 239 
primary-no-array-creation-expression -> base-access . 
transitions ->  {}

item set 240 
primary-no-array-creation-expression -> post-increment-expression . 
transitions ->  {}

item set 241 
primary-no-array-creation-expression -> post-decrement-expression . 
transitions ->  {}

item set 242 
primary-no-array-creation-expression -> delegate-creation-expression . 
transitions ->  {}

item set 243 
primary-no-array-creation-expression -> object-creation-expression . 
transitions ->  {}

item set 244 
primary-no-array-creation-expression -> typeof-expression . 
transitions ->  {}

item set 245 
primary-no-array-creation-expression -> sizeof-expression . 
transitions ->  {}

item set 246 
primary-no-array-creation-expression -> checked-expression . 
transitions ->  {}

item set 247 
primary-no-array-creation-expression -> unchecked-expression . 
transitions ->  {}

item set 248 
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"OP_DBLPTR":379}

item set 249 
primary-no-array-creation-expression -> DELEGATE .block
delegate-expression -> DELEGATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> DELEGATE .OPEN_PARENS CLOSE_PARENS block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":380,"OPEN_PARENS":381,"OPEN_BRACE":382}

item set 250 
primary-no-array-creation-expression -> delegate-expression . 
transitions ->  {}

item set 251 
array-creation-expression -> STACKALLOC .non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> STACKALLOC .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> STACKALLOC .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> STACKALLOC .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> STACKALLOC .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> STACKALLOC .array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"non-array-type":383,"array-type":384,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"type":385,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 252 
exclusive-or-expression -> and-expression .
and-expression -> and-expression .AMP equality-expression 
transitions ->  {"AMP":386}

item set 253 
literal -> BOOLEAN_LITERAL . 
transitions ->  {}

item set 254 
literal -> REAL_LITERAL . 
transitions ->  {}

item set 255 
literal -> INTEGER_LITERAL . 
transitions ->  {}

item set 256 
literal -> STRING_LITERAL . 
transitions ->  {}

item set 257 
literal -> CHARACTER_LITERAL . 
transitions ->  {}

item set 258 
literal -> NULL . 
transitions ->  {}

item set 259 
lambda-expression -> OPEN_PARENS .dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS .dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> OPEN_PARENS .type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS .type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> OPEN_PARENS .expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS .expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> OPEN_PARENS .type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> OPEN_PARENS .expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> OPEN_PARENS .expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> OPEN_PARENS .expression CLOSE_PARENS expression
cast-expression -> OPEN_PARENS .type-with-interr CLOSE_PARENS expression
parenthesized-expression -> OPEN_PARENS .expression CLOSE_PARENS
dbl-expression-list -> .dbl-expression-list COMMA expression expression
dbl-expression-list -> .expression expression
type-expression-list -> .type-expression-list COMMA type expression
type-expression-list -> .type expression
expression-list -> .expression
expression-list -> .expression-list COMMA expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
expression -> .conditional-expression
expression -> .assignment
type-with-interr -> .type INTERR
type-with-interr -> .type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
type-name -> .namespace-or-type-name
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"dbl-expression-list":387,"type-expression-list":388,"expression-list":389,"type":390,"expression":391,"type-with-interr":392,"non-array-type":115,"array-type":116,"conditional-expression":209,"assignment":210,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"conditional-or-expression":211,"unary-expression":212,"namespace-or-type-name":94,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"IDENTIFIER_WITH_KEYWORD":248,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"IDENTIFIER_WITH_TEMPLATE":360,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":262,"ASYNC":75,"WHERE":76,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"IDENTIFIER":59,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"invocation-expression":261,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"equality-expression":269,"TRUE":270,"FALSE":271,"AWAIT":272,"relational-expression":273,"shift-expression":274,"additive-expression":275,"multiplicative-expression":276}

item set 260 
member-access -> type .DOT IDENTIFIER_WITH_KEYWORD
member-access -> type .OP_PTR IDENTIFIER_WITH_KEYWORD
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"DOT":393,"OP_PTR":394,"rank-specifiers":186,"rank-specifier":187,"OPEN_BRACKET":188}

item set 261 
invocation-expressions -> invocation-expression . 
transitions ->  {}

item set 262 
this-access -> THIS .
IDENTIFIER_WITH_KEYWORD -> THIS . 
transitions ->  {}

item set 263 
base-access -> BASE .DOT IDENTIFIER_WITH_TEMPLATE
base-access -> BASE .OPEN_BRACKET expression-list CLOSE_BRACKET 
transitions ->  {"DOT":395,"OPEN_BRACKET":396}

item set 264 
delegate-creation-expression -> NEW .type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW .type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> NEW .type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW .type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> NEW .type block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier block-expression-with-brace
object-creation-expression -> NEW .non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW .non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> NEW .type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> NEW .rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .rank-specifiers
object-creation-expression -> NEW .block-expression-with-brace
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type-with-identifier -> .IDENTIFIER TEMPLATE
type-with-identifier -> .non-array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":397,"type-with-identifier":398,"non-array-type":399,"rank-specifiers":400,"block-expression-with-brace":401,"array-type":116,"IDENTIFIER":402,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"rank-specifier":187,"OPEN_BRACE":403,"namespace-or-type-name":94,"OPEN_BRACKET":188,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76}

item set 265 
typeof-expression -> TYPEOF .OPEN_PARENS type-with-interr CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":404}

item set 266 
sizeof-expression -> SIZEOF .OPEN_PARENS type-with-interr CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":405}

item set 267 
checked-expression -> CHECKED .OPEN_PARENS expression CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":406}

item set 268 
unchecked-expression -> UNCHECKED .OPEN_PARENS expression CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":407}

item set 269 
and-expression -> equality-expression .
equality-expression -> equality-expression .OP_EQ relational-expression
equality-expression -> equality-expression .OP_NE relational-expression 
transitions ->  {"OP_EQ":408,"OP_NE":409}

item set 270 
BOOLEAN_LITERAL -> TRUE . 
transitions ->  {}

item set 271 
BOOLEAN_LITERAL -> FALSE . 
transitions ->  {}

item set 272 
invocation-expression -> AWAIT .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> AWAIT .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> AWAIT .primary-expression OPEN_PARENS CLOSE_PARENS
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"primary-expression":410,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 273 
equality-expression -> relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .OP_COALESCING shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":411,"GT":412,"OP_LE":413,"OP_GE":414,"OP_COALESCING":415,"IS":416,"AS":417}

item set 274 
relational-expression -> shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":418,"RIGHT_SHIFT":419}

item set 275 
shift-expression -> additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .OP_PTR multiplicative-expression
additive-expression -> additive-expression .OP_COALESCING multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":420,"OP_PTR":421,"OP_COALESCING":422,"MINUS":423}

item set 276 
additive-expression -> multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":424,"DIV":425,"PERCENT":426}

item set 277 
namespace-declaration -> NAMESPACE namespace-or-type-name namespace-body SEMICOLON . 
transitions ->  {}

item set 278 
namespace-body -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 279 
namespace-body -> OPEN_BRACE using-directives .CLOSE_BRACE
namespace-body -> OPEN_BRACE using-directives .namespace-member-declarations CLOSE_BRACE
using-directives -> using-directives .using-directive
namespace-member-declarations -> .namespace-member-declaration
namespace-member-declarations -> .namespace-member-declarations namespace-member-declaration
using-directive -> .using-alias-directive
using-directive -> .using-namespace-directive
namespace-member-declaration -> .namespace-declaration
namespace-member-declaration -> .type-declaration
using-alias-directive -> .USING IDENTIFIER_WITH_TEMPLATE ASSIGN namespace-or-type-name SEMICOLON
using-namespace-directive -> .USING namespace-name SEMICOLON
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body SEMICOLON
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACE":427,"namespace-member-declarations":428,"using-directive":51,"namespace-member-declaration":8,"using-alias-directive":9,"using-namespace-directive":10,"namespace-declaration":12,"type-declaration":13,"USING":14,"NAMESPACE":16,"class-declaration":17,"struct-declaration":18,"interface-declaration":19,"enum-declaration":20,"delegate-declaration":21,"CLASS":22,"attributes":23,"modifiers":24,"STRUCT":25,"INTERFACE":26,"ENUM":27,"DELEGATE":28,"attribute-sections":29,"modifier":30,"attribute-section":31,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47,"OPEN_BRACKET":53}

item set 280 
namespace-body -> OPEN_BRACE namespace-member-declarations .CLOSE_BRACE
namespace-member-declarations -> namespace-member-declarations .namespace-member-declaration
namespace-member-declaration -> .namespace-declaration
namespace-member-declaration -> .type-declaration
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body SEMICOLON
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACE":429,"namespace-member-declaration":54,"namespace-declaration":12,"type-declaration":13,"NAMESPACE":16,"class-declaration":17,"struct-declaration":18,"interface-declaration":19,"enum-declaration":20,"delegate-declaration":21,"CLASS":22,"attributes":23,"modifiers":24,"STRUCT":25,"INTERFACE":26,"ENUM":27,"DELEGATE":28,"attribute-sections":29,"modifier":30,"attribute-section":31,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47,"OPEN_BRACKET":53}

item set 281 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body .
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":430}

item set 282 
class-body -> OPEN_BRACE .CLOSE_BRACE
class-body -> OPEN_BRACE .class-member-declarations CLOSE_BRACE
class-member-declarations -> .class-member-declaration
class-member-declarations -> .class-member-declarations class-member-declaration
class-member-declaration -> .constant-declaration
class-member-declaration -> .method-declaration
class-member-declaration -> .field-declaration
class-member-declaration -> .property-declaration
class-member-declaration -> .event-declaration
class-member-declaration -> .indexer-declaration
class-member-declaration -> .operator-declaration
class-member-declaration -> .constructor-declaration
class-member-declaration -> .static-constructor-declaration
class-member-declaration -> .destructor-declaration
class-member-declaration -> .type-declaration
constant-declaration -> .CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .modifiers CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes modifiers CONST type-with-interr constant-declarators SEMICOLON
method-declaration -> .method-header block
method-declaration -> .method-header SEMICOLON
field-declaration -> .type-with-interr member-name SEMICOLON
field-declaration -> .attributes type-with-interr member-name SEMICOLON
field-declaration -> .modifiers type-with-interr member-name SEMICOLON
field-declaration -> .attributes modifiers type-with-interr member-name SEMICOLON
property-declaration -> .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> .modifiers operator-declarator method-body
operator-declaration -> .attributes modifiers operator-declarator method-body
constructor-declaration -> .constructor-declarator method-body
constructor-declaration -> .attributes constructor-declarator method-body
constructor-declaration -> .modifiers constructor-declarator method-body
constructor-declaration -> .attributes modifiers constructor-declarator method-body
static-constructor-declaration -> .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
static-constructor-declaration -> .attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .attributes type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .attributes type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .attributes modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .attributes modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CLOSE_BRACE":431,"class-member-declarations":432,"class-member-declaration":433,"constant-declaration":434,"method-declaration":435,"field-declaration":436,"property-declaration":437,"event-declaration":438,"indexer-declaration":439,"operator-declaration":440,"constructor-declaration":441,"static-constructor-declaration":442,"destructor-declaration":443,"type-declaration":444,"CONST":445,"attributes":446,"modifiers":447,"method-header":448,"type-with-interr":449,"EVENT":450,"indexer-declarator":451,"constructor-declarator":452,"TILDE":453,"EXTERN":454,"class-declaration":17,"struct-declaration":18,"interface-declaration":19,"enum-declaration":20,"delegate-declaration":21,"attribute-sections":29,"modifier":30,"type":114,"IDENTIFIER_WITH_TEMPLATE":455,"CLASS":22,"STRUCT":25,"INTERFACE":26,"ENUM":27,"DELEGATE":28,"attribute-section":31,"UNSAFE":32,"ASYNC":456,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"NEW":47,"non-array-type":115,"array-type":116,"IDENTIFIER":59,"OPEN_BRACKET":53,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"WHERE":76}

item set 283 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base .class-body
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE class-member-declarations CLOSE_BRACE 
transitions ->  {"class-body":457,"OPEN_BRACE":282}

item set 284 
where-base -> where-units COMMA .NEW OPEN_PARENS CLOSE_PARENS 
transitions ->  {"NEW":458}

item set 285 
where-units -> where-units where-unit . 
transitions ->  {}

item set 286 
class-base -> COLON type-with-interr .
class-base -> COLON type-with-interr .COMMA interface-type-list
interface-type-list -> type-with-interr . 
transitions ->  {"COMMA":459}

item set 287 
class-base -> COLON interface-type-list .
interface-type-list -> interface-type-list .COMMA type-with-interr 
transitions ->  {"COMMA":460}

item set 288 
where-unit -> WHERE type-name .COLON where-names 
transitions ->  {"COLON":461}

item set 289 
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base .class-body
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE class-member-declarations CLOSE_BRACE 
transitions ->  {"class-body":462,"OPEN_BRACE":282}

item set 290 
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base .where-base class-body
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base .where-base class-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":463,"where-units":155,"where-unit":157,"WHERE":158}

item set 291 
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE .where-base class-body
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE .where-base class-body SEMICOLON
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE .class-base where-base class-body
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE .class-base where-base class-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
class-base -> .COLON type-with-interr
class-base -> .COLON interface-type-list
class-base -> .COLON type-with-interr COMMA interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":464,"class-base":465,"where-units":155,"COLON":156,"where-unit":157,"WHERE":158}

item set 292 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .where-base struct-body SEMICOLON
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE .struct-interfaces where-base struct-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
struct-interfaces -> .COLON interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":466,"struct-interfaces":467,"where-units":155,"COLON":176,"where-unit":157,"WHERE":158}

item set 293 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .where-base interface-body SEMICOLON
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE .interface-base where-base interface-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
interface-base -> .COLON interface-type-list
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":468,"interface-base":469,"where-units":155,"COLON":179,"where-unit":157,"WHERE":158}

item set 294 
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-body
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-body SEMICOLON
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE .enum-base enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE
enum-base -> .COLON type-with-interr 
transitions ->  {"enum-body":470,"enum-base":471,"OPEN_BRACE":182,"COLON":183}

item set 295 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers DELEGATE type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":472,"IDENTIFIER":59}

item set 296 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":473,"OPEN_BRACE":313}

item set 297 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":474,"where-units":155,"where-unit":157,"WHERE":158}

item set 298 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":475,"OPEN_BRACE":318}

item set 299 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":476,"where-units":155,"where-unit":157,"WHERE":158}

item set 300 
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body .
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":477}

item set 301 
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":478,"OPEN_BRACE":182}

item set 302 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"OPEN_PARENS":479}

item set 303 
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base .class-body
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE class-member-declarations CLOSE_BRACE 
transitions ->  {"class-body":480,"OPEN_BRACE":282}

item set 304 
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base .where-base class-body
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base .where-base class-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":481,"where-units":155,"where-unit":157,"WHERE":158}

item set 305 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":482,"OPEN_BRACE":313}

item set 306 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":483,"where-units":155,"where-unit":157,"WHERE":158}

item set 307 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":484,"OPEN_BRACE":318}

item set 308 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":485,"where-units":155,"where-unit":157,"WHERE":158}

item set 309 
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body .
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":486}

item set 310 
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":487,"OPEN_BRACE":182}

item set 311 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"OPEN_PARENS":488}

item set 312 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":489}

item set 313 
struct-body -> OPEN_BRACE .CLOSE_BRACE
struct-body -> OPEN_BRACE .struct-member-declarations CLOSE_BRACE
struct-member-declarations -> .struct-member-declaration
struct-member-declarations -> .struct-member-declarations struct-member-declaration
struct-member-declaration -> .constant-declaration
struct-member-declaration -> .field-declaration
struct-member-declaration -> .method-declaration
struct-member-declaration -> .property-declaration
struct-member-declaration -> .event-declaration
struct-member-declaration -> .indexer-declaration
struct-member-declaration -> .operator-declaration
struct-member-declaration -> .constructor-declaration
struct-member-declaration -> .static-constructor-declaration
struct-member-declaration -> .type-declaration
constant-declaration -> .CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .modifiers CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes modifiers CONST type-with-interr constant-declarators SEMICOLON
field-declaration -> .type-with-interr member-name SEMICOLON
field-declaration -> .attributes type-with-interr member-name SEMICOLON
field-declaration -> .modifiers type-with-interr member-name SEMICOLON
field-declaration -> .attributes modifiers type-with-interr member-name SEMICOLON
method-declaration -> .method-header block
method-declaration -> .method-header SEMICOLON
property-declaration -> .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> .modifiers operator-declarator method-body
operator-declaration -> .attributes modifiers operator-declarator method-body
constructor-declaration -> .constructor-declarator method-body
constructor-declaration -> .attributes constructor-declarator method-body
constructor-declaration -> .modifiers constructor-declarator method-body
constructor-declaration -> .attributes modifiers constructor-declarator method-body
static-constructor-declaration -> .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
static-constructor-declaration -> .attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
type-with-interr -> .type INTERR
type-with-interr -> .type
method-header -> .type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .attributes type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .attributes type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .attributes modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .attributes modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CLOSE_BRACE":490,"struct-member-declarations":491,"struct-member-declaration":492,"constant-declaration":493,"field-declaration":494,"method-declaration":495,"property-declaration":496,"event-declaration":497,"indexer-declaration":498,"operator-declaration":499,"constructor-declaration":500,"static-constructor-declaration":501,"type-declaration":502,"CONST":445,"attributes":503,"modifiers":447,"type-with-interr":449,"method-header":448,"EVENT":450,"indexer-declarator":451,"constructor-declarator":452,"class-declaration":17,"struct-declaration":18,"interface-declaration":19,"enum-declaration":20,"delegate-declaration":21,"attribute-sections":29,"modifier":30,"type":114,"IDENTIFIER_WITH_TEMPLATE":455,"CLASS":22,"STRUCT":25,"INTERFACE":26,"ENUM":27,"DELEGATE":28,"attribute-section":31,"UNSAFE":32,"ASYNC":456,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47,"non-array-type":115,"array-type":116,"IDENTIFIER":59,"OPEN_BRACKET":53,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"WHERE":76}

item set 314 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":504,"OPEN_BRACE":313}

item set 315 
struct-interfaces -> COLON interface-type-list .
interface-type-list -> interface-type-list .COMMA type-with-interr 
transitions ->  {"COMMA":460}

item set 316 
interface-type-list -> type-with-interr . 
transitions ->  {}

item set 317 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":505}

item set 318 
interface-body -> OPEN_BRACE .CLOSE_BRACE
interface-body -> OPEN_BRACE .interface-member-declarations CLOSE_BRACE
interface-member-declarations -> .interface-member-declaration
interface-member-declarations -> .interface-member-declarations interface-member-declaration
interface-member-declaration -> .interface-method-declaration
interface-member-declaration -> .interface-property-declaration
interface-member-declaration -> .interface-event-declaration
interface-member-declaration -> .interface-indexer-declaration
interface-method-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-event-declaration -> .EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> .attributes EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> .NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> .attributes NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-indexer-declaration -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
attributes -> .attribute-sections
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_BRACE":506,"interface-member-declarations":507,"interface-member-declaration":508,"interface-method-declaration":509,"interface-property-declaration":510,"interface-event-declaration":511,"interface-indexer-declaration":512,"type-with-interr":513,"attributes":514,"NEW":515,"EVENT":516,"type":114,"attribute-sections":29,"non-array-type":115,"array-type":116,"attribute-section":31,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"OPEN_BRACKET":53,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 319 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":517,"OPEN_BRACE":318}

item set 320 
interface-base -> COLON interface-type-list .
interface-type-list -> interface-type-list .COMMA type-with-interr 
transitions ->  {"COMMA":460}

item set 321 
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON . 
transitions ->  {}

item set 322 
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":518}

item set 323 
enum-body -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 324 
enum-body -> OPEN_BRACE enum-member-declarations .CLOSE_BRACE
enum-body -> OPEN_BRACE enum-member-declarations .COMMA CLOSE_BRACE
enum-member-declarations -> enum-member-declarations .COMMA enum-member-declaration 
transitions ->  {"CLOSE_BRACE":519,"COMMA":520}

item set 325 
enum-member-declarations -> enum-member-declaration . 
transitions ->  {}

item set 326 
enum-member-declaration -> IDENTIFIER_WITH_TEMPLATE .
enum-member-declaration -> IDENTIFIER_WITH_TEMPLATE .ASSIGN constant-expression 
transitions ->  {"ASSIGN":521}

item set 327 
enum-member-declaration -> attributes .IDENTIFIER_WITH_TEMPLATE
enum-member-declaration -> attributes .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":522,"IDENTIFIER":59}

item set 328 
enum-base -> COLON type-with-interr . 
transitions ->  {}

item set 329 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":523,"formal-parameter-list":524,"fixed-parameters":525,"parameter-array":526,"fixed-parameter":527,"PARAMS":528,"attributes":529,"type-with-interr":530,"THIS":531,"parameter-modifier":532,"attribute-sections":29,"type":114,"REF":533,"OUT":534,"attribute-section":31,"non-array-type":115,"array-type":116,"OPEN_BRACKET":53,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 330 
rank-specifiers -> rank-specifiers rank-specifier . 
transitions ->  {}

item set 331 
rank-specifier -> OPEN_BRACKET dim-separators .CLOSE_BRACKET
dim-separators -> dim-separators .COMMA 
transitions ->  {"CLOSE_BRACKET":535,"COMMA":536}

item set 332 
rank-specifier -> OPEN_BRACKET CLOSE_BRACKET . 
transitions ->  {}

item set 333 
dim-separators -> COMMA . 
transitions ->  {}

item set 334 
STARS -> STARS STAR . 
transitions ->  {}

item set 335 
using-alias-directive -> USING IDENTIFIER_WITH_TEMPLATE ASSIGN namespace-or-type-name SEMICOLON . 
transitions ->  {}

item set 336 
global-attribute-section -> OPEN_BRACKET global-attribute-target-specifier attribute-list COMMA CLOSE_BRACKET . 
transitions ->  {}

item set 337 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET . 
transitions ->  {}

item set 338 
attribute-arguments -> OPEN_PARENS positional-argument-list CLOSE_PARENS . 
transitions ->  {}

item set 339 
attribute-arguments -> OPEN_PARENS positional-argument-list COMMA .named-argument-list CLOSE_PARENS
positional-argument-list -> positional-argument-list COMMA .positional-argument
named-argument-list -> .named-argument
named-argument-list -> .named-argument-list COMMA named-argument
positional-argument -> .attribute-argument-expression
named-argument -> .IDENTIFIER_WITH_TEMPLATE ASSIGN attribute-argument-expression
attribute-argument-expression -> .expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"named-argument-list":537,"positional-argument":538,"named-argument":205,"attribute-argument-expression":206,"IDENTIFIER_WITH_TEMPLATE":207,"expression":208,"IDENTIFIER":59,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 340 
attribute-arguments -> OPEN_PARENS named-argument-list CLOSE_PARENS . 
transitions ->  {}

item set 341 
named-argument-list -> named-argument-list COMMA .named-argument
named-argument -> .IDENTIFIER_WITH_TEMPLATE ASSIGN attribute-argument-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"named-argument":539,"IDENTIFIER_WITH_TEMPLATE":540,"IDENTIFIER":59}

item set 342 
named-argument -> IDENTIFIER_WITH_TEMPLATE ASSIGN .attribute-argument-expression
attribute-argument-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"attribute-argument-expression":541,"expression":208,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 343 
double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON .member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"member-access":542,"invocation-expressions":236,"primary-expression":543,"type":260,"invocation-expression":261,"primary-no-array-creation-expression":227,"array-creation-expression":228,"non-array-type":115,"array-type":116,"AWAIT":272,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"namespace-or-type-name":94,"TRUE":270,"FALSE":271,"IDENTIFIER":59}

item set 344 
conditional-expression -> conditional-or-expression INTERR .expression
conditional-expression -> conditional-or-expression INTERR .expression COLON expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":544,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 345 
conditional-or-expression -> conditional-or-expression OP_OR .conditional-and-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"conditional-and-expression":545,"inclusive-or-expression":224,"exclusive-or-expression":229,"and-expression":252,"equality-expression":269,"relational-expression":273,"shift-expression":274,"additive-expression":275,"multiplicative-expression":276,"unary-expression":546,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 346 
assignment -> unary-expression assignment-operator .expression
assignment -> unary-expression assignment-operator .block-expression-with-brace
expression -> .conditional-expression
expression -> .assignment
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":547,"block-expression-with-brace":548,"conditional-expression":209,"assignment":210,"OPEN_BRACE":403,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 347 
assignment-operator -> ASSIGN . 
transitions ->  {}

item set 348 
assignment-operator -> OP_ADD_ASSIGNMENT . 
transitions ->  {}

item set 349 
assignment-operator -> OP_SUB_ASSIGNMENT . 
transitions ->  {}

item set 350 
assignment-operator -> OP_MULT_ASSIGNMENT . 
transitions ->  {}

item set 351 
assignment-operator -> OP_DIV_ASSIGNMENT . 
transitions ->  {}

item set 352 
assignment-operator -> OP_MOD_ASSIGNMENT . 
transitions ->  {}

item set 353 
assignment-operator -> OP_AND_ASSIGNMENT . 
transitions ->  {}

item set 354 
assignment-operator -> OP_OR_ASSIGNMENT . 
transitions ->  {}

item set 355 
assignment-operator -> OP_XOR_ASSIGNMENT . 
transitions ->  {}

item set 356 
assignment-operator -> OP_LEFT_SHIFT_ASSIGNMENT . 
transitions ->  {}

item set 357 
assignment-operator -> RIGHT_SHIFT_ASSIGNMENT . 
transitions ->  {}

item set 358 
conditional-and-expression -> conditional-and-expression OP_AND .inclusive-or-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"inclusive-or-expression":549,"exclusive-or-expression":229,"and-expression":252,"equality-expression":269,"relational-expression":273,"shift-expression":274,"additive-expression":275,"multiplicative-expression":276,"unary-expression":546,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 359 
unary-expression -> PLUS unary-expression . 
transitions ->  {}

item set 360 
double-colon-access -> IDENTIFIER_WITH_TEMPLATE .DOUBLE_COLON member-access
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"DOUBLE_COLON":343}

item set 361 
unary-expression -> OP_PTR unary-expression . 
transitions ->  {}

item set 362 
unary-expression -> OP_COALESCING unary-expression . 
transitions ->  {}

item set 363 
unary-expression -> MINUS unary-expression . 
transitions ->  {}

item set 364 
unary-expression -> BANG unary-expression . 
transitions ->  {}

item set 365 
unary-expression -> TILDE unary-expression . 
transitions ->  {}

item set 366 
unary-expression -> STAR unary-expression . 
transitions ->  {}

item set 367 
member-access -> primary-expression DOT .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":550,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 368 
member-access -> primary-expression OP_PTR .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":551,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 369 
post-increment-expression -> primary-expression OP_INC . 
transitions ->  {}

item set 370 
post-decrement-expression -> primary-expression OP_DEC . 
transitions ->  {}

item set 371 
invocation-expression -> primary-expression OPEN_PARENS .type CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .argument-list CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .CLOSE_PARENS
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
type-name -> .namespace-or-type-name
expression -> .conditional-expression
expression -> .assignment
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"type":552,"argument-list":553,"CLOSE_PARENS":554,"non-array-type":115,"array-type":116,"argument":555,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"expression":556,"REF":557,"OUT":558,"namespace-or-type-name":94,"conditional-expression":209,"assignment":210,"IDENTIFIER_WITH_KEYWORD":248,"conditional-or-expression":211,"unary-expression":212,"IDENTIFIER_WITH_TEMPLATE":360,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":262,"ASYNC":75,"WHERE":76,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"IDENTIFIER":59,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"invocation-expression":261,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"equality-expression":269,"TRUE":270,"FALSE":271,"AWAIT":272,"relational-expression":273,"shift-expression":274,"additive-expression":275,"multiplicative-expression":276}

item set 372 
inclusive-or-expression -> inclusive-or-expression BITWISE_OR .exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"exclusive-or-expression":559,"and-expression":252,"equality-expression":269,"relational-expression":273,"shift-expression":274,"additive-expression":275,"multiplicative-expression":276,"unary-expression":546,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 373 
pre-increment-expression -> OP_INC unary-expression . 
transitions ->  {}

item set 374 
pre-decrement-expression -> OP_DEC unary-expression . 
transitions ->  {}

item set 375 
element-access -> primary-no-array-creation-expression OPEN_BRACKET .expression-list CLOSE_BRACKET
element-access -> primary-no-array-creation-expression OPEN_BRACKET .dim-separators CLOSE_BRACKET
element-access -> primary-no-array-creation-expression OPEN_BRACKET .CLOSE_BRACKET
expression-list -> .expression
expression-list -> .expression-list COMMA expression
dim-separators -> .dim-separators COMMA
dim-separators -> .COMMA
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression-list":560,"dim-separators":561,"CLOSE_BRACKET":562,"expression":563,"COMMA":333,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 376 
exclusive-or-expression -> exclusive-or-expression CARET .and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"and-expression":564,"equality-expression":269,"relational-expression":273,"shift-expression":274,"additive-expression":275,"multiplicative-expression":276,"unary-expression":546,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 377 
member-access -> invocation-expressions DOT .IDENTIFIER_WITH_KEYWORD
invocation-expressions -> invocation-expressions DOT .invocation-expression
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":565,"invocation-expression":566,"IDENTIFIER_WITH_TEMPLATE":360,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":262,"ASYNC":75,"WHERE":76,"AWAIT":272,"primary-expression":543,"IDENTIFIER":59,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"type":260,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"TRUE":270,"FALSE":271,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 378 
member-access -> invocation-expressions OP_PTR .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":567,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 379 
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD OP_DBLPTR .expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD OP_DBLPTR .block
expression -> .conditional-expression
expression -> .assignment
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":568,"block":569,"conditional-expression":209,"assignment":210,"OPEN_BRACE":382,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 380 
primary-no-array-creation-expression -> DELEGATE block . 
transitions ->  {}

item set 381 
delegate-expression -> DELEGATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS block
delegate-expression -> DELEGATE OPEN_PARENS .CLOSE_PARENS block
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":570,"CLOSE_PARENS":571,"fixed-parameters":525,"parameter-array":526,"fixed-parameter":527,"PARAMS":528,"attributes":529,"type-with-interr":530,"THIS":531,"parameter-modifier":532,"attribute-sections":29,"type":114,"REF":533,"OUT":534,"attribute-section":31,"non-array-type":115,"array-type":116,"OPEN_BRACKET":53,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 382 
block -> OPEN_BRACE .CLOSE_BRACE
block -> OPEN_BRACE .statement-list CLOSE_BRACE
statement-list -> .statement
statement-list -> .statement-list statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_BRACE":572,"statement-list":573,"statement":574,"labeled-statement":575,"declaration-statement":576,"embedded-statement":577,"IDENTIFIER_WITH_KEYWORD":578,"local-variable-declaration":579,"local-constant-declaration":580,"block":581,"empty-statement":582,"statement-expression":583,"selection-statement":584,"iteration-statement":585,"jump-statement":586,"try-statement":587,"checked-statement":588,"unchecked-statement":589,"lock-statement":590,"using-statement":591,"unsafe-statement":592,"fixed-statement":593,"IDENTIFIER_WITH_TEMPLATE":360,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":262,"ASYNC":456,"WHERE":76,"primary-expression":594,"type":595,"CONST":596,"OPEN_BRACE":382,"SEMICOLON":597,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"if-statement":605,"switch-statement":606,"while-statement":607,"do-statement":608,"for-statement":609,"foreach-statement":610,"break-statement":611,"continue-statement":612,"goto-statement":613,"return-statement":614,"throw-statement":615,"TRY":616,"CHECKED":617,"UNCHECKED":618,"LOCK":619,"USING":620,"UNSAFE":621,"modifiers":622,"FIXED":623,"IDENTIFIER":59,"primary-no-array-creation-expression":227,"array-creation-expression":228,"non-array-type":115,"array-type":116,"invocation-expression":261,"NEW":624,"unary-expression":625,"OP_INC":225,"OP_DEC":226,"IF":626,"SWITCH":627,"WHILE":628,"DO":629,"FOR":630,"FOREACH":631,"YIELD":632,"BREAK":633,"CONTINUE":634,"GOTO":635,"RETURN":636,"THROW":637,"modifier":30,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"BASE":263,"TYPEOF":265,"SIZEOF":266,"namespace-or-type-name":94,"TRUE":270,"FALSE":271}

item set 383 
array-creation-expression -> STACKALLOC non-array-type .OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> STACKALLOC non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> STACKALLOC non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> STACKALLOC non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> STACKALLOC non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
type -> non-array-type .STARS
type -> non-array-type .
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"OPEN_BRACKET":638,"STARS":189,"STAR":190}

item set 384 
array-creation-expression -> STACKALLOC array-type .array-initializer
type -> array-type .STARS
type -> array-type .
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"array-initializer":639,"STARS":191,"OPEN_BRACE":640,"STAR":190}

item set 385 
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifiers":186,"rank-specifier":187,"OPEN_BRACKET":188}

item set 386 
and-expression -> and-expression AMP .equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"equality-expression":641,"relational-expression":273,"shift-expression":274,"additive-expression":275,"multiplicative-expression":276,"unary-expression":546,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 387 
lambda-expression -> OPEN_PARENS dbl-expression-list .CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS dbl-expression-list .CLOSE_PARENS OP_DBLPTR block
dbl-expression-list -> dbl-expression-list .COMMA expression expression 
transitions ->  {"CLOSE_PARENS":642,"COMMA":643}

item set 388 
lambda-expression -> OPEN_PARENS type-expression-list .CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS type-expression-list .CLOSE_PARENS OP_DBLPTR block
type-expression-list -> type-expression-list .COMMA type expression 
transitions ->  {"CLOSE_PARENS":644,"COMMA":645}

item set 389 
lambda-expression -> OPEN_PARENS expression-list .CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> OPEN_PARENS expression-list .CLOSE_PARENS OP_DBLPTR block
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_PARENS":646,"COMMA":647}

item set 390 
cast-expression -> OPEN_PARENS type .expression CLOSE_PARENS OP_DBLPTR expression block
type-expression-list -> type .expression
type-with-interr -> type .INTERR
type-with-interr -> type .
array-type -> type .rank-specifiers
member-access -> type .DOT IDENTIFIER_WITH_KEYWORD
member-access -> type .OP_PTR IDENTIFIER_WITH_KEYWORD
expression -> .conditional-expression
expression -> .assignment
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":648,"INTERR":185,"rank-specifiers":186,"DOT":393,"OP_PTR":649,"conditional-expression":209,"assignment":210,"rank-specifier":187,"conditional-or-expression":211,"unary-expression":212,"OPEN_BRACKET":188,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 391 
cast-expression -> OPEN_PARENS expression .CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> OPEN_PARENS expression .CLOSE_PARENS OP_DBLPTR expression
cast-expression -> OPEN_PARENS expression .CLOSE_PARENS expression
parenthesized-expression -> OPEN_PARENS expression .CLOSE_PARENS
dbl-expression-list -> expression .expression
expression-list -> expression .
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":650,"expression":651,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 392 
cast-expression -> OPEN_PARENS type-with-interr .CLOSE_PARENS expression 
transitions ->  {"CLOSE_PARENS":652}

item set 393 
member-access -> type DOT .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":653,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 394 
member-access -> type OP_PTR .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":654,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 395 
base-access -> BASE DOT .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":655,"IDENTIFIER":59}

item set 396 
base-access -> BASE OPEN_BRACKET .expression-list CLOSE_BRACKET
expression-list -> .expression
expression-list -> .expression-list COMMA expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression-list":656,"expression":563,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 397 
delegate-creation-expression -> NEW type .OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW type .OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> NEW type .OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW type .OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> NEW type .block-expression-with-brace
array-type -> type .rank-specifiers
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"OPEN_PARENS":657,"block-expression-with-brace":658,"rank-specifiers":186,"OPEN_BRACE":403,"rank-specifier":187,"OPEN_BRACKET":188}

item set 398 
object-creation-expression -> NEW type-with-identifier .OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW type-with-identifier .OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW type-with-identifier .OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .rank-specifiers block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW type-with-identifier .OPEN_BRACKET argument-list CLOSE_BRACKET
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"OPEN_PARENS":659,"block-expression-with-brace":660,"rank-specifiers":661,"OPEN_BRACKET":662,"OPEN_BRACE":403,"rank-specifier":187}

item set 399 
object-creation-expression -> NEW non-array-type .rank-specifiers block-expression-with-brace
object-creation-expression -> NEW non-array-type .OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW non-array-type .OPEN_BRACKET argument-list CLOSE_BRACKET
type -> non-array-type .STARS
type -> non-array-type .
type-with-identifier -> non-array-type .
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
STARS -> .STARS STAR
STARS -> .STAR
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifiers":663,"OPEN_BRACKET":664,"STARS":189,"rank-specifier":187,"STAR":190}

item set 400 
object-creation-expression -> NEW rank-specifiers .block-expression-with-brace
object-creation-expression -> NEW rank-specifiers .
rank-specifiers -> rank-specifiers .rank-specifier
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"block-expression-with-brace":665,"rank-specifier":330,"OPEN_BRACE":403,"OPEN_BRACKET":188}

item set 401 
object-creation-expression -> NEW block-expression-with-brace . 
transitions ->  {}

item set 402 
type-with-identifier -> IDENTIFIER .TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER .TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER . 
transitions ->  {"TEMPLATE":666}

item set 403 
block-expression-with-brace -> OPEN_BRACE .block-expression-list CLOSE_BRACE
block-expression-list -> .block-expression-list COMMA block-expression-list-unit
block-expression-list -> .block-expression-list-unit
block-expression-list-unit -> .block-expression-with-brace
block-expression-list-unit -> .expression
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"block-expression-list":667,"block-expression-list-unit":668,"block-expression-with-brace":669,"expression":670,"OPEN_BRACE":403,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 404 
typeof-expression -> TYPEOF OPEN_PARENS .type-with-interr CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":671,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 405 
sizeof-expression -> SIZEOF OPEN_PARENS .type-with-interr CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":672,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 406 
checked-expression -> CHECKED OPEN_PARENS .expression CLOSE_PARENS
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":673,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 407 
unchecked-expression -> UNCHECKED OPEN_PARENS .expression CLOSE_PARENS
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":674,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 408 
equality-expression -> equality-expression OP_EQ .relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"relational-expression":675,"shift-expression":274,"additive-expression":275,"multiplicative-expression":276,"unary-expression":546,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 409 
equality-expression -> equality-expression OP_NE .relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"relational-expression":676,"shift-expression":274,"additive-expression":275,"multiplicative-expression":276,"unary-expression":546,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 410 
invocation-expression -> AWAIT primary-expression .OPEN_PARENS type CLOSE_PARENS
invocation-expression -> AWAIT primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> AWAIT primary-expression .OPEN_PARENS CLOSE_PARENS
member-access -> primary-expression .DOT IDENTIFIER_WITH_KEYWORD
member-access -> primary-expression .OP_PTR IDENTIFIER_WITH_KEYWORD
post-increment-expression -> primary-expression .OP_INC
post-decrement-expression -> primary-expression .OP_DEC
invocation-expression -> primary-expression .OPEN_PARENS type CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":677,"DOT":367,"OP_PTR":368,"OP_INC":369,"OP_DEC":370}

item set 411 
relational-expression -> relational-expression LT .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"shift-expression":678,"additive-expression":275,"multiplicative-expression":276,"unary-expression":546,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 412 
relational-expression -> relational-expression GT .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"shift-expression":679,"additive-expression":275,"multiplicative-expression":276,"unary-expression":546,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 413 
relational-expression -> relational-expression OP_LE .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"shift-expression":680,"additive-expression":275,"multiplicative-expression":276,"unary-expression":546,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 414 
relational-expression -> relational-expression OP_GE .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"shift-expression":681,"additive-expression":275,"multiplicative-expression":276,"unary-expression":546,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 415 
relational-expression -> relational-expression OP_COALESCING .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"shift-expression":682,"additive-expression":275,"multiplicative-expression":276,"unary-expression":546,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 416 
relational-expression -> relational-expression IS .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":683,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 417 
relational-expression -> relational-expression AS .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":684,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 418 
shift-expression -> shift-expression OP_LEFT_SHIFT .additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"additive-expression":685,"multiplicative-expression":276,"unary-expression":546,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 419 
shift-expression -> shift-expression RIGHT_SHIFT .additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"additive-expression":686,"multiplicative-expression":276,"unary-expression":546,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 420 
additive-expression -> additive-expression PLUS .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"multiplicative-expression":687,"unary-expression":546,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 421 
additive-expression -> additive-expression OP_PTR .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"multiplicative-expression":688,"unary-expression":546,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 422 
additive-expression -> additive-expression OP_COALESCING .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"multiplicative-expression":689,"unary-expression":546,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 423 
additive-expression -> additive-expression MINUS .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"multiplicative-expression":690,"unary-expression":546,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 424 
multiplicative-expression -> multiplicative-expression STAR .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":691,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 425 
multiplicative-expression -> multiplicative-expression DIV .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":692,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 426 
multiplicative-expression -> multiplicative-expression PERCENT .unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"unary-expression":693,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 427 
namespace-body -> OPEN_BRACE using-directives CLOSE_BRACE . 
transitions ->  {}

item set 428 
namespace-body -> OPEN_BRACE using-directives namespace-member-declarations .CLOSE_BRACE
namespace-member-declarations -> namespace-member-declarations .namespace-member-declaration
namespace-member-declaration -> .namespace-declaration
namespace-member-declaration -> .type-declaration
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body
namespace-declaration -> .NAMESPACE namespace-or-type-name namespace-body SEMICOLON
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACE":694,"namespace-member-declaration":54,"namespace-declaration":12,"type-declaration":13,"NAMESPACE":16,"class-declaration":17,"struct-declaration":18,"interface-declaration":19,"enum-declaration":20,"delegate-declaration":21,"CLASS":22,"attributes":23,"modifiers":24,"STRUCT":25,"INTERFACE":26,"ENUM":27,"DELEGATE":28,"attribute-sections":29,"modifier":30,"attribute-section":31,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47,"OPEN_BRACKET":53}

item set 429 
namespace-body -> OPEN_BRACE namespace-member-declarations CLOSE_BRACE . 
transitions ->  {}

item set 430 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON . 
transitions ->  {}

item set 431 
class-body -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 432 
class-body -> OPEN_BRACE class-member-declarations .CLOSE_BRACE
class-member-declarations -> class-member-declarations .class-member-declaration
class-member-declaration -> .constant-declaration
class-member-declaration -> .method-declaration
class-member-declaration -> .field-declaration
class-member-declaration -> .property-declaration
class-member-declaration -> .event-declaration
class-member-declaration -> .indexer-declaration
class-member-declaration -> .operator-declaration
class-member-declaration -> .constructor-declaration
class-member-declaration -> .static-constructor-declaration
class-member-declaration -> .destructor-declaration
class-member-declaration -> .type-declaration
constant-declaration -> .CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .modifiers CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes modifiers CONST type-with-interr constant-declarators SEMICOLON
method-declaration -> .method-header block
method-declaration -> .method-header SEMICOLON
field-declaration -> .type-with-interr member-name SEMICOLON
field-declaration -> .attributes type-with-interr member-name SEMICOLON
field-declaration -> .modifiers type-with-interr member-name SEMICOLON
field-declaration -> .attributes modifiers type-with-interr member-name SEMICOLON
property-declaration -> .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> .modifiers operator-declarator method-body
operator-declaration -> .attributes modifiers operator-declarator method-body
constructor-declaration -> .constructor-declarator method-body
constructor-declaration -> .attributes constructor-declarator method-body
constructor-declaration -> .modifiers constructor-declarator method-body
constructor-declaration -> .attributes modifiers constructor-declarator method-body
static-constructor-declaration -> .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
static-constructor-declaration -> .attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> .attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
method-header -> .type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .attributes type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .attributes type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .attributes modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .attributes modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CLOSE_BRACE":695,"class-member-declaration":696,"constant-declaration":434,"method-declaration":435,"field-declaration":436,"property-declaration":437,"event-declaration":438,"indexer-declaration":439,"operator-declaration":440,"constructor-declaration":441,"static-constructor-declaration":442,"destructor-declaration":443,"type-declaration":444,"CONST":445,"attributes":446,"modifiers":447,"method-header":448,"type-with-interr":449,"EVENT":450,"indexer-declarator":451,"constructor-declarator":452,"TILDE":453,"EXTERN":454,"class-declaration":17,"struct-declaration":18,"interface-declaration":19,"enum-declaration":20,"delegate-declaration":21,"attribute-sections":29,"modifier":30,"type":114,"IDENTIFIER_WITH_TEMPLATE":455,"CLASS":22,"STRUCT":25,"INTERFACE":26,"ENUM":27,"DELEGATE":28,"attribute-section":31,"UNSAFE":32,"ASYNC":456,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"NEW":47,"non-array-type":115,"array-type":116,"IDENTIFIER":59,"OPEN_BRACKET":53,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"WHERE":76}

item set 433 
class-member-declarations -> class-member-declaration . 
transitions ->  {}

item set 434 
class-member-declaration -> constant-declaration . 
transitions ->  {}

item set 435 
class-member-declaration -> method-declaration . 
transitions ->  {}

item set 436 
class-member-declaration -> field-declaration . 
transitions ->  {}

item set 437 
class-member-declaration -> property-declaration . 
transitions ->  {}

item set 438 
class-member-declaration -> event-declaration . 
transitions ->  {}

item set 439 
class-member-declaration -> indexer-declaration . 
transitions ->  {}

item set 440 
class-member-declaration -> operator-declaration . 
transitions ->  {}

item set 441 
class-member-declaration -> constructor-declaration . 
transitions ->  {}

item set 442 
class-member-declaration -> static-constructor-declaration . 
transitions ->  {}

item set 443 
class-member-declaration -> destructor-declaration . 
transitions ->  {}

item set 444 
class-member-declaration -> type-declaration . 
transitions ->  {}

item set 445 
constant-declaration -> CONST .type-with-interr constant-declarators SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":697,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 446 
constant-declaration -> attributes .CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> attributes .modifiers CONST type-with-interr constant-declarators SEMICOLON
field-declaration -> attributes .type-with-interr member-name SEMICOLON
field-declaration -> attributes .modifiers type-with-interr member-name SEMICOLON
property-declaration -> attributes .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> attributes .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> attributes .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes .modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> attributes .modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> attributes .modifiers operator-declarator method-body
constructor-declaration -> attributes .constructor-declarator method-body
constructor-declaration -> attributes .modifiers constructor-declarator method-body
static-constructor-declaration -> attributes .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> attributes .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
destructor-declaration -> attributes .EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
method-header -> attributes .type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> attributes .type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> attributes .modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> attributes .modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CONST":698,"modifiers":699,"type-with-interr":700,"EVENT":701,"indexer-declarator":702,"constructor-declarator":703,"TILDE":704,"EXTERN":705,"CLASS":98,"STRUCT":100,"INTERFACE":101,"ENUM":102,"DELEGATE":103,"modifier":30,"type":114,"IDENTIFIER_WITH_TEMPLATE":455,"UNSAFE":32,"ASYNC":456,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"NEW":47,"non-array-type":115,"array-type":116,"IDENTIFIER":59,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"WHERE":76}

item set 447 
constant-declaration -> modifiers .CONST type-with-interr constant-declarators SEMICOLON
field-declaration -> modifiers .type-with-interr member-name SEMICOLON
property-declaration -> modifiers .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> modifiers .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> modifiers .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> modifiers .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> modifiers .operator-declarator method-body
constructor-declaration -> modifiers .constructor-declarator method-body
static-constructor-declaration -> modifiers .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
modifiers -> modifiers .modifier
method-header -> modifiers .type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> modifiers .type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
class-declaration -> modifiers .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> modifiers .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> modifiers .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> modifiers .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
operator-declarator -> .unary-operator-declarator
operator-declarator -> .binary-operator-declarator
operator-declarator -> .conversion-operator-declarator
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
unary-operator-declarator -> .type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> .type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
conversion-operator-declarator -> .EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CONST":706,"type-with-interr":707,"EVENT":708,"indexer-declarator":709,"operator-declarator":710,"constructor-declarator":711,"IDENTIFIER_WITH_TEMPLATE":712,"modifier":109,"CLASS":104,"STRUCT":105,"INTERFACE":106,"ENUM":107,"DELEGATE":108,"type":114,"unary-operator-declarator":713,"binary-operator-declarator":714,"conversion-operator-declarator":715,"IDENTIFIER":59,"UNSAFE":32,"ASYNC":456,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47,"non-array-type":115,"array-type":116,"IMPLICIT":716,"EXPLICIT":717,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"WHERE":76}

item set 448 
method-declaration -> method-header .block
method-declaration -> method-header .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":718,"SEMICOLON":719,"OPEN_BRACE":382}

item set 449 
field-declaration -> type-with-interr .member-name SEMICOLON
property-declaration -> type-with-interr .member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
method-header -> type-with-interr .member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> type-with-interr .member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> type-with-interr .member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name":720,"THIS":721,"variable-declarators":722,"variable-declarator":723,"type-name":724,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 450 
event-declaration -> EVENT .type-with-interr variable-declarators SEMICOLON
event-declaration -> EVENT .type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":725,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 451 
indexer-declaration -> indexer-declarator .OPEN_BRACE accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":726}

item set 452 
constructor-declaration -> constructor-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":727,"block":728,"SEMICOLON":729,"OPEN_BRACE":382}

item set 453 
destructor-declaration -> TILDE .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":730,"IDENTIFIER":59}

item set 454 
destructor-declaration -> EXTERN .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
modifier -> EXTERN . 
transitions ->  {"TILDE":731}

item set 455 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"OPEN_PARENS":732}

item set 456 
modifier -> ASYNC .
IDENTIFIER_WITH_KEYWORD -> ASYNC . 
transitions ->  {}

item set 457 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body .
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":733}

item set 458 
where-base -> where-units COMMA NEW .OPEN_PARENS CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":734}

item set 459 
class-base -> COLON type-with-interr COMMA .interface-type-list
interface-type-list -> .type-with-interr
interface-type-list -> .interface-type-list COMMA type-with-interr
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"interface-type-list":735,"type-with-interr":316,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 460 
interface-type-list -> interface-type-list COMMA .type-with-interr
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":736,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 461 
where-unit -> WHERE type-name COLON .where-names
where-names -> .where-names COMMA where-name
where-names -> .where-name
where-name -> .type-name
where-name -> .type
where-name -> .CLASS
where-name -> .STRUCT
where-name -> .NEW OPEN_PARENS CLOSE_PARENS
type-name -> .namespace-or-type-name
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"where-names":737,"where-name":738,"type-name":739,"type":740,"CLASS":741,"STRUCT":742,"NEW":743,"namespace-or-type-name":94,"non-array-type":115,"array-type":116,"IDENTIFIER_WITH_KEYWORD":61,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 462 
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body .
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":744}

item set 463 
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base .class-body
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE class-member-declarations CLOSE_BRACE 
transitions ->  {"class-body":745,"OPEN_BRACE":282}

item set 464 
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base .class-body
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE class-member-declarations CLOSE_BRACE 
transitions ->  {"class-body":746,"OPEN_BRACE":282}

item set 465 
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base .where-base class-body
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base .where-base class-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":747,"where-units":155,"where-unit":157,"WHERE":158}

item set 466 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":748,"OPEN_BRACE":313}

item set 467 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces .where-base struct-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":749,"where-units":155,"where-unit":157,"WHERE":158}

item set 468 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":750,"OPEN_BRACE":318}

item set 469 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base .where-base interface-body SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":751,"where-units":155,"where-unit":157,"WHERE":158}

item set 470 
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body .
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":752}

item set 471 
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base .enum-body SEMICOLON
enum-body -> .OPEN_BRACE CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations CLOSE_BRACE
enum-body -> .OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE 
transitions ->  {"enum-body":753,"OPEN_BRACE":182}

item set 472 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"OPEN_PARENS":754}

item set 473 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":755}

item set 474 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":756,"OPEN_BRACE":313}

item set 475 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":757}

item set 476 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":758,"OPEN_BRACE":318}

item set 477 
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON . 
transitions ->  {}

item set 478 
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":759}

item set 479 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":760,"formal-parameter-list":761,"fixed-parameters":525,"parameter-array":526,"fixed-parameter":527,"PARAMS":528,"attributes":529,"type-with-interr":530,"THIS":531,"parameter-modifier":532,"attribute-sections":29,"type":114,"REF":533,"OUT":534,"attribute-section":31,"non-array-type":115,"array-type":116,"OPEN_BRACKET":53,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 480 
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body .
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":762}

item set 481 
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base .class-body
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE class-member-declarations CLOSE_BRACE 
transitions ->  {"class-body":763,"OPEN_BRACE":282}

item set 482 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":764}

item set 483 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":765,"OPEN_BRACE":313}

item set 484 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":766}

item set 485 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":767,"OPEN_BRACE":318}

item set 486 
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON . 
transitions ->  {}

item set 487 
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":768}

item set 488 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":769,"formal-parameter-list":770,"fixed-parameters":525,"parameter-array":526,"fixed-parameter":527,"PARAMS":528,"attributes":529,"type-with-interr":530,"THIS":531,"parameter-modifier":532,"attribute-sections":29,"type":114,"REF":533,"OUT":534,"attribute-section":31,"non-array-type":115,"array-type":116,"OPEN_BRACKET":53,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 489 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON . 
transitions ->  {}

item set 490 
struct-body -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 491 
struct-body -> OPEN_BRACE struct-member-declarations .CLOSE_BRACE
struct-member-declarations -> struct-member-declarations .struct-member-declaration
struct-member-declaration -> .constant-declaration
struct-member-declaration -> .field-declaration
struct-member-declaration -> .method-declaration
struct-member-declaration -> .property-declaration
struct-member-declaration -> .event-declaration
struct-member-declaration -> .indexer-declaration
struct-member-declaration -> .operator-declaration
struct-member-declaration -> .constructor-declaration
struct-member-declaration -> .static-constructor-declaration
struct-member-declaration -> .type-declaration
constant-declaration -> .CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .modifiers CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> .attributes modifiers CONST type-with-interr constant-declarators SEMICOLON
field-declaration -> .type-with-interr member-name SEMICOLON
field-declaration -> .attributes type-with-interr member-name SEMICOLON
field-declaration -> .modifiers type-with-interr member-name SEMICOLON
field-declaration -> .attributes modifiers type-with-interr member-name SEMICOLON
method-declaration -> .method-header block
method-declaration -> .method-header SEMICOLON
property-declaration -> .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> .attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .attributes modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> .attributes modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> .attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> .modifiers operator-declarator method-body
operator-declaration -> .attributes modifiers operator-declarator method-body
constructor-declaration -> .constructor-declarator method-body
constructor-declaration -> .attributes constructor-declarator method-body
constructor-declaration -> .modifiers constructor-declarator method-body
constructor-declaration -> .attributes modifiers constructor-declarator method-body
static-constructor-declaration -> .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
static-constructor-declaration -> .attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
type-declaration -> .class-declaration
type-declaration -> .struct-declaration
type-declaration -> .interface-declaration
type-declaration -> .enum-declaration
type-declaration -> .delegate-declaration
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
type-with-interr -> .type INTERR
type-with-interr -> .type
method-header -> .type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .attributes type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .attributes type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> .attributes modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> .attributes modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> .attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> .attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> .attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> .attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> .attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CLOSE_BRACE":771,"struct-member-declaration":772,"constant-declaration":493,"field-declaration":494,"method-declaration":495,"property-declaration":496,"event-declaration":497,"indexer-declaration":498,"operator-declaration":499,"constructor-declaration":500,"static-constructor-declaration":501,"type-declaration":502,"CONST":445,"attributes":503,"modifiers":447,"type-with-interr":449,"method-header":448,"EVENT":450,"indexer-declarator":451,"constructor-declarator":452,"class-declaration":17,"struct-declaration":18,"interface-declaration":19,"enum-declaration":20,"delegate-declaration":21,"attribute-sections":29,"modifier":30,"type":114,"IDENTIFIER_WITH_TEMPLATE":455,"CLASS":22,"STRUCT":25,"INTERFACE":26,"ENUM":27,"DELEGATE":28,"attribute-section":31,"UNSAFE":32,"ASYNC":456,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47,"non-array-type":115,"array-type":116,"IDENTIFIER":59,"OPEN_BRACKET":53,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"WHERE":76}

item set 492 
struct-member-declarations -> struct-member-declaration . 
transitions ->  {}

item set 493 
struct-member-declaration -> constant-declaration . 
transitions ->  {}

item set 494 
struct-member-declaration -> field-declaration . 
transitions ->  {}

item set 495 
struct-member-declaration -> method-declaration . 
transitions ->  {}

item set 496 
struct-member-declaration -> property-declaration . 
transitions ->  {}

item set 497 
struct-member-declaration -> event-declaration . 
transitions ->  {}

item set 498 
struct-member-declaration -> indexer-declaration . 
transitions ->  {}

item set 499 
struct-member-declaration -> operator-declaration . 
transitions ->  {}

item set 500 
struct-member-declaration -> constructor-declaration . 
transitions ->  {}

item set 501 
struct-member-declaration -> static-constructor-declaration . 
transitions ->  {}

item set 502 
struct-member-declaration -> type-declaration . 
transitions ->  {}

item set 503 
constant-declaration -> attributes .CONST type-with-interr constant-declarators SEMICOLON
constant-declaration -> attributes .modifiers CONST type-with-interr constant-declarators SEMICOLON
field-declaration -> attributes .type-with-interr member-name SEMICOLON
field-declaration -> attributes .modifiers type-with-interr member-name SEMICOLON
property-declaration -> attributes .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
property-declaration -> attributes .modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> attributes .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes .modifiers EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
event-declaration -> attributes .modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes .modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> attributes .modifiers operator-declarator method-body
constructor-declaration -> attributes .constructor-declarator method-body
constructor-declaration -> attributes .modifiers constructor-declarator method-body
static-constructor-declaration -> attributes .modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
method-header -> attributes .type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> attributes .type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
method-header -> attributes .modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> attributes .modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes .modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes .modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes .modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes .modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes .modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CONST":698,"modifiers":699,"type-with-interr":700,"EVENT":701,"indexer-declarator":702,"constructor-declarator":703,"CLASS":98,"STRUCT":100,"INTERFACE":101,"ENUM":102,"DELEGATE":103,"modifier":30,"type":114,"IDENTIFIER_WITH_TEMPLATE":455,"UNSAFE":32,"ASYNC":456,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47,"non-array-type":115,"array-type":116,"IDENTIFIER":59,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"WHERE":76}

item set 504 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":773}

item set 505 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON . 
transitions ->  {}

item set 506 
interface-body -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 507 
interface-body -> OPEN_BRACE interface-member-declarations .CLOSE_BRACE
interface-member-declarations -> interface-member-declarations .interface-member-declaration
interface-member-declaration -> .interface-method-declaration
interface-member-declaration -> .interface-property-declaration
interface-member-declaration -> .interface-event-declaration
interface-member-declaration -> .interface-indexer-declaration
interface-method-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> .attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-event-declaration -> .EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> .attributes EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> .NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> .attributes NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-indexer-declaration -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> .attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
attributes -> .attribute-sections
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_BRACE":774,"interface-member-declaration":775,"interface-method-declaration":509,"interface-property-declaration":510,"interface-event-declaration":511,"interface-indexer-declaration":512,"type-with-interr":513,"attributes":514,"NEW":515,"EVENT":516,"type":114,"attribute-sections":29,"non-array-type":115,"array-type":116,"attribute-section":31,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"OPEN_BRACKET":53,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 508 
interface-member-declarations -> interface-member-declaration . 
transitions ->  {}

item set 509 
interface-member-declaration -> interface-method-declaration . 
transitions ->  {}

item set 510 
interface-member-declaration -> interface-property-declaration . 
transitions ->  {}

item set 511 
interface-member-declaration -> interface-event-declaration . 
transitions ->  {}

item set 512 
interface-member-declaration -> interface-indexer-declaration . 
transitions ->  {}

item set 513 
interface-method-declaration -> type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":776,"THIS":777,"IDENTIFIER":59}

item set 514 
interface-method-declaration -> attributes .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-property-declaration -> attributes .NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-event-declaration -> attributes .EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-event-declaration -> attributes .NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-indexer-declaration -> attributes .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> attributes .NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":778,"NEW":779,"EVENT":780,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 515 
interface-method-declaration -> NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-event-declaration -> NEW .EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-indexer-declaration -> NEW .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":781,"EVENT":782,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 516 
interface-event-declaration -> EVENT .type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":783,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 517 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":784}

item set 518 
enum-declaration -> ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 519 
enum-body -> OPEN_BRACE enum-member-declarations CLOSE_BRACE . 
transitions ->  {}

item set 520 
enum-body -> OPEN_BRACE enum-member-declarations COMMA .CLOSE_BRACE
enum-member-declarations -> enum-member-declarations COMMA .enum-member-declaration
enum-member-declaration -> .IDENTIFIER_WITH_TEMPLATE
enum-member-declaration -> .attributes IDENTIFIER_WITH_TEMPLATE
enum-member-declaration -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
enum-member-declaration -> .attributes IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACE":785,"enum-member-declaration":786,"IDENTIFIER_WITH_TEMPLATE":326,"attributes":327,"IDENTIFIER":59,"attribute-sections":29,"attribute-section":31,"OPEN_BRACKET":53}

item set 521 
enum-member-declaration -> IDENTIFIER_WITH_TEMPLATE ASSIGN .constant-expression
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":787,"expression":788,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 522 
enum-member-declaration -> attributes IDENTIFIER_WITH_TEMPLATE .
enum-member-declaration -> attributes IDENTIFIER_WITH_TEMPLATE .ASSIGN constant-expression 
transitions ->  {"ASSIGN":789}

item set 523 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":790,"where-units":155,"where-unit":157,"WHERE":158}

item set 524 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":791}

item set 525 
formal-parameter-list -> fixed-parameters .
formal-parameter-list -> fixed-parameters .COMMA parameter-array
fixed-parameters -> fixed-parameters .COMMA fixed-parameter 
transitions ->  {"COMMA":792}

item set 526 
formal-parameter-list -> parameter-array . 
transitions ->  {}

item set 527 
fixed-parameters -> fixed-parameter . 
transitions ->  {}

item set 528 
parameter-array -> PARAMS .array-type IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> PARAMS .
array-type -> .type rank-specifiers
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"array-type":793,"type":385,"non-array-type":115,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 529 
parameter-array -> attributes .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> attributes .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> attributes .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"PARAMS":794,"type-with-interr":795,"parameter-modifier":796,"type":114,"REF":533,"OUT":534,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 530 
fixed-parameter -> type-with-interr .IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> type-with-interr .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":797,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 531 
fixed-parameter -> THIS .type-with-interr IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> THIS .
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":798,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 532 
fixed-parameter -> parameter-modifier .type-with-interr IDENTIFIER_WITH_KEYWORD
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":799,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 533 
parameter-modifier -> REF . 
transitions ->  {}

item set 534 
parameter-modifier -> OUT . 
transitions ->  {}

item set 535 
rank-specifier -> OPEN_BRACKET dim-separators CLOSE_BRACKET . 
transitions ->  {}

item set 536 
dim-separators -> dim-separators COMMA . 
transitions ->  {}

item set 537 
attribute-arguments -> OPEN_PARENS positional-argument-list COMMA named-argument-list .CLOSE_PARENS
named-argument-list -> named-argument-list .COMMA named-argument 
transitions ->  {"CLOSE_PARENS":800,"COMMA":341}

item set 538 
positional-argument-list -> positional-argument-list COMMA positional-argument . 
transitions ->  {}

item set 539 
named-argument-list -> named-argument-list COMMA named-argument . 
transitions ->  {}

item set 540 
named-argument -> IDENTIFIER_WITH_TEMPLATE .ASSIGN attribute-argument-expression 
transitions ->  {"ASSIGN":342}

item set 541 
named-argument -> IDENTIFIER_WITH_TEMPLATE ASSIGN attribute-argument-expression . 
transitions ->  {}

item set 542 
double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access .
primary-no-array-creation-expression -> member-access . 
transitions ->  {}

item set 543 
member-access -> primary-expression .DOT IDENTIFIER_WITH_KEYWORD
member-access -> primary-expression .OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expression -> primary-expression .OPEN_PARENS type CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS CLOSE_PARENS
post-increment-expression -> primary-expression .OP_INC
post-decrement-expression -> primary-expression .OP_DEC 
transitions ->  {"DOT":367,"OP_PTR":368,"OPEN_PARENS":371,"OP_INC":369,"OP_DEC":370}

item set 544 
conditional-expression -> conditional-or-expression INTERR expression .
conditional-expression -> conditional-or-expression INTERR expression .COLON expression 
transitions ->  {"COLON":801}

item set 545 
conditional-or-expression -> conditional-or-expression OP_OR conditional-and-expression .
conditional-and-expression -> conditional-and-expression .OP_AND inclusive-or-expression 
transitions ->  {"OP_AND":358}

item set 546 
multiplicative-expression -> unary-expression . 
transitions ->  {}

item set 547 
assignment -> unary-expression assignment-operator expression . 
transitions ->  {}

item set 548 
assignment -> unary-expression assignment-operator block-expression-with-brace . 
transitions ->  {}

item set 549 
conditional-and-expression -> conditional-and-expression OP_AND inclusive-or-expression .
inclusive-or-expression -> inclusive-or-expression .BITWISE_OR exclusive-or-expression 
transitions ->  {"BITWISE_OR":372}

item set 550 
member-access -> primary-expression DOT IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 551 
member-access -> primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 552 
invocation-expression -> primary-expression OPEN_PARENS type .CLOSE_PARENS
array-type -> type .rank-specifiers
member-access -> type .DOT IDENTIFIER_WITH_KEYWORD
member-access -> type .OP_PTR IDENTIFIER_WITH_KEYWORD
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"CLOSE_PARENS":802,"rank-specifiers":186,"DOT":393,"OP_PTR":394,"rank-specifier":187,"OPEN_BRACKET":188}

item set 553 
invocation-expression -> primary-expression OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":803,"COLON":804,"COMMA":805}

item set 554 
invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 555 
argument-list -> argument . 
transitions ->  {}

item set 556 
argument -> expression . 
transitions ->  {}

item set 557 
argument -> REF .variable-reference
variable-reference -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"variable-reference":806,"expression":807,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 558 
argument -> OUT .variable-reference
variable-reference -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"variable-reference":808,"expression":807,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 559 
inclusive-or-expression -> inclusive-or-expression BITWISE_OR exclusive-or-expression .
exclusive-or-expression -> exclusive-or-expression .CARET and-expression 
transitions ->  {"CARET":376}

item set 560 
element-access -> primary-no-array-creation-expression OPEN_BRACKET expression-list .CLOSE_BRACKET
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":809,"COMMA":647}

item set 561 
element-access -> primary-no-array-creation-expression OPEN_BRACKET dim-separators .CLOSE_BRACKET
dim-separators -> dim-separators .COMMA 
transitions ->  {"CLOSE_BRACKET":810,"COMMA":536}

item set 562 
element-access -> primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET . 
transitions ->  {}

item set 563 
expression-list -> expression . 
transitions ->  {}

item set 564 
exclusive-or-expression -> exclusive-or-expression CARET and-expression .
and-expression -> and-expression .AMP equality-expression 
transitions ->  {"AMP":386}

item set 565 
member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD .
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"OP_DBLPTR":379}

item set 566 
invocation-expressions -> invocation-expressions DOT invocation-expression .
invocation-expressions -> invocation-expression . 
transitions ->  {}

item set 567 
member-access -> invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 568 
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression . 
transitions ->  {}

item set 569 
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD OP_DBLPTR block . 
transitions ->  {}

item set 570 
delegate-expression -> DELEGATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS block 
transitions ->  {"CLOSE_PARENS":811}

item set 571 
delegate-expression -> DELEGATE OPEN_PARENS CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":812,"OPEN_BRACE":382}

item set 572 
block -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 573 
block -> OPEN_BRACE statement-list .CLOSE_BRACE
statement-list -> statement-list .statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_BRACE":813,"statement":814,"labeled-statement":575,"declaration-statement":576,"embedded-statement":577,"IDENTIFIER_WITH_KEYWORD":578,"local-variable-declaration":579,"local-constant-declaration":580,"block":581,"empty-statement":582,"statement-expression":583,"selection-statement":584,"iteration-statement":585,"jump-statement":586,"try-statement":587,"checked-statement":588,"unchecked-statement":589,"lock-statement":590,"using-statement":591,"unsafe-statement":592,"fixed-statement":593,"IDENTIFIER_WITH_TEMPLATE":360,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":262,"ASYNC":456,"WHERE":76,"primary-expression":594,"type":595,"CONST":596,"OPEN_BRACE":382,"SEMICOLON":597,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"if-statement":605,"switch-statement":606,"while-statement":607,"do-statement":608,"for-statement":609,"foreach-statement":610,"break-statement":611,"continue-statement":612,"goto-statement":613,"return-statement":614,"throw-statement":615,"TRY":616,"CHECKED":617,"UNCHECKED":618,"LOCK":619,"USING":620,"UNSAFE":621,"modifiers":622,"FIXED":623,"IDENTIFIER":59,"primary-no-array-creation-expression":227,"array-creation-expression":228,"non-array-type":115,"array-type":116,"invocation-expression":261,"NEW":624,"unary-expression":625,"OP_INC":225,"OP_DEC":226,"IF":626,"SWITCH":627,"WHILE":628,"DO":629,"FOR":630,"FOREACH":631,"YIELD":632,"BREAK":633,"CONTINUE":634,"GOTO":635,"RETURN":636,"THROW":637,"modifier":30,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"BASE":263,"TYPEOF":265,"SIZEOF":266,"namespace-or-type-name":94,"TRUE":270,"FALSE":271}

item set 574 
statement-list -> statement . 
transitions ->  {}

item set 575 
statement -> labeled-statement . 
transitions ->  {}

item set 576 
statement -> declaration-statement . 
transitions ->  {}

item set 577 
statement -> embedded-statement . 
transitions ->  {}

item set 578 
labeled-statement -> IDENTIFIER_WITH_KEYWORD .COLON switch-labels
labeled-statement -> IDENTIFIER_WITH_KEYWORD .COLON statement
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"COLON":815,"OP_DBLPTR":379}

item set 579 
declaration-statement -> local-variable-declaration .SEMICOLON 
transitions ->  {"SEMICOLON":816}

item set 580 
declaration-statement -> local-constant-declaration .SEMICOLON 
transitions ->  {"SEMICOLON":817}

item set 581 
embedded-statement -> block . 
transitions ->  {}

item set 582 
embedded-statement -> empty-statement . 
transitions ->  {}

item set 583 
embedded-statement -> statement-expression .SEMICOLON 
transitions ->  {"SEMICOLON":818}

item set 584 
embedded-statement -> selection-statement . 
transitions ->  {}

item set 585 
embedded-statement -> iteration-statement . 
transitions ->  {}

item set 586 
embedded-statement -> jump-statement . 
transitions ->  {}

item set 587 
embedded-statement -> try-statement . 
transitions ->  {}

item set 588 
embedded-statement -> checked-statement . 
transitions ->  {}

item set 589 
embedded-statement -> unchecked-statement . 
transitions ->  {}

item set 590 
embedded-statement -> lock-statement . 
transitions ->  {}

item set 591 
embedded-statement -> using-statement . 
transitions ->  {}

item set 592 
embedded-statement -> unsafe-statement . 
transitions ->  {}

item set 593 
embedded-statement -> fixed-statement . 
transitions ->  {}

item set 594 
local-variable-declaration -> primary-expression .local-variable-declarators
post-increment-expression -> primary-expression .OP_INC
post-decrement-expression -> primary-expression .OP_DEC
invocation-expression -> primary-expression .OPEN_PARENS type CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS CLOSE_PARENS
unary-expression -> primary-expression .
member-access -> primary-expression .DOT IDENTIFIER_WITH_KEYWORD
member-access -> primary-expression .OP_PTR IDENTIFIER_WITH_KEYWORD
local-variable-declarators -> .local-variable-declarators COMMA local-variable-declarator
local-variable-declarators -> .local-variable-declarator
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"local-variable-declarators":819,"OP_INC":369,"OP_DEC":370,"OPEN_PARENS":371,"DOT":367,"OP_PTR":368,"local-variable-declarator":820,"local-variable":821,"INTERR":822,"STARS":823,"IDENTIFIER_WITH_KEYWORD":824,"STAR":190,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 595 
local-variable-declaration -> type .local-variable-declarators
array-type -> type .rank-specifiers
member-access -> type .DOT IDENTIFIER_WITH_KEYWORD
member-access -> type .OP_PTR IDENTIFIER_WITH_KEYWORD
local-variable-declarators -> .local-variable-declarators COMMA local-variable-declarator
local-variable-declarators -> .local-variable-declarator
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"local-variable-declarators":825,"rank-specifiers":186,"DOT":393,"OP_PTR":394,"local-variable-declarator":820,"rank-specifier":187,"local-variable":821,"OPEN_BRACKET":188,"INTERR":822,"STARS":823,"IDENTIFIER_WITH_KEYWORD":824,"STAR":190,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 596 
local-constant-declaration -> CONST .type constant-declarators
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":826,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 597 
empty-statement -> SEMICOLON . 
transitions ->  {}

item set 598 
statement-expression -> invocation-expressions .
invocation-expressions -> invocation-expressions .DOT invocation-expression
primary-no-array-creation-expression -> invocation-expressions .
member-access -> invocation-expressions .DOT IDENTIFIER_WITH_KEYWORD
member-access -> invocation-expressions .OP_PTR IDENTIFIER_WITH_KEYWORD 
transitions ->  {"DOT":377,"OP_PTR":378}

item set 599 
statement-expression -> object-creation-expression .
primary-no-array-creation-expression -> object-creation-expression . 
transitions ->  {}

item set 600 
statement-expression -> assignment . 
transitions ->  {}

item set 601 
statement-expression -> post-increment-expression .
primary-no-array-creation-expression -> post-increment-expression . 
transitions ->  {}

item set 602 
statement-expression -> post-decrement-expression .
primary-no-array-creation-expression -> post-decrement-expression . 
transitions ->  {}

item set 603 
statement-expression -> pre-increment-expression .
unary-expression -> pre-increment-expression . 
transitions ->  {}

item set 604 
statement-expression -> pre-decrement-expression .
unary-expression -> pre-decrement-expression . 
transitions ->  {}

item set 605 
selection-statement -> if-statement . 
transitions ->  {}

item set 606 
selection-statement -> switch-statement . 
transitions ->  {}

item set 607 
iteration-statement -> while-statement . 
transitions ->  {}

item set 608 
iteration-statement -> do-statement . 
transitions ->  {}

item set 609 
iteration-statement -> for-statement . 
transitions ->  {}

item set 610 
iteration-statement -> foreach-statement . 
transitions ->  {}

item set 611 
jump-statement -> break-statement . 
transitions ->  {}

item set 612 
jump-statement -> continue-statement . 
transitions ->  {}

item set 613 
jump-statement -> goto-statement . 
transitions ->  {}

item set 614 
jump-statement -> return-statement . 
transitions ->  {}

item set 615 
jump-statement -> throw-statement . 
transitions ->  {}

item set 616 
try-statement -> TRY .block catch-clauses
try-statement -> TRY .block finally-clause
try-statement -> TRY .block catch-clauses finally-clause
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":827,"OPEN_BRACE":382}

item set 617 
checked-statement -> CHECKED .block
checked-expression -> CHECKED .OPEN_PARENS expression CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":828,"OPEN_PARENS":406,"OPEN_BRACE":382}

item set 618 
unchecked-statement -> UNCHECKED .block
unchecked-expression -> UNCHECKED .OPEN_PARENS expression CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":829,"OPEN_PARENS":407,"OPEN_BRACE":382}

item set 619 
lock-statement -> LOCK .OPEN_PARENS expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":830}

item set 620 
using-statement -> USING .OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":831}

item set 621 
unsafe-statement -> UNSAFE .block
modifier -> UNSAFE .
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":832,"OPEN_BRACE":382}

item set 622 
fixed-statement -> modifiers .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"FIXED":833,"modifier":109,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47}

item set 623 
fixed-statement -> FIXED .OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":834}

item set 624 
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW .type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier block-expression-with-brace
object-creation-expression -> NEW .non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW .non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> NEW .type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW .type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> NEW .rank-specifiers block-expression-with-brace
object-creation-expression -> NEW .rank-specifiers
object-creation-expression -> NEW .block-expression-with-brace
modifier -> NEW .
delegate-creation-expression -> NEW .type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW .type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> NEW .type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW .type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> NEW .type block-expression-with-brace
type-with-identifier -> .IDENTIFIER TEMPLATE
type-with-identifier -> .non-array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
type-name -> .namespace-or-type-name
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
array-type -> .type rank-specifiers
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-identifier":398,"non-array-type":399,"rank-specifiers":400,"block-expression-with-brace":401,"type":397,"IDENTIFIER":402,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"rank-specifier":187,"OPEN_BRACE":403,"array-type":116,"namespace-or-type-name":94,"OPEN_BRACKET":188,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76}

item set 625 
assignment -> unary-expression .assignment-operator expression
assignment -> unary-expression .assignment-operator block-expression-with-brace
assignment-operator -> .ASSIGN
assignment-operator -> .OP_ADD_ASSIGNMENT
assignment-operator -> .OP_SUB_ASSIGNMENT
assignment-operator -> .OP_MULT_ASSIGNMENT
assignment-operator -> .OP_DIV_ASSIGNMENT
assignment-operator -> .OP_MOD_ASSIGNMENT
assignment-operator -> .OP_AND_ASSIGNMENT
assignment-operator -> .OP_OR_ASSIGNMENT
assignment-operator -> .OP_XOR_ASSIGNMENT
assignment-operator -> .OP_LEFT_SHIFT_ASSIGNMENT
assignment-operator -> .RIGHT_SHIFT_ASSIGNMENT 
transitions ->  {"assignment-operator":346,"ASSIGN":347,"OP_ADD_ASSIGNMENT":348,"OP_SUB_ASSIGNMENT":349,"OP_MULT_ASSIGNMENT":350,"OP_DIV_ASSIGNMENT":351,"OP_MOD_ASSIGNMENT":352,"OP_AND_ASSIGNMENT":353,"OP_OR_ASSIGNMENT":354,"OP_XOR_ASSIGNMENT":355,"OP_LEFT_SHIFT_ASSIGNMENT":356,"RIGHT_SHIFT_ASSIGNMENT":357}

item set 626 
if-statement -> IF .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> IF .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement 
transitions ->  {"OPEN_PARENS":835}

item set 627 
switch-statement -> SWITCH .OPEN_PARENS expression CLOSE_PARENS switch-block 
transitions ->  {"OPEN_PARENS":836}

item set 628 
while-statement -> WHILE .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":837}

item set 629 
do-statement -> DO .embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":838,"block":581,"empty-statement":582,"statement-expression":583,"selection-statement":584,"iteration-statement":585,"jump-statement":586,"try-statement":587,"checked-statement":588,"unchecked-statement":589,"lock-statement":590,"using-statement":591,"unsafe-statement":592,"fixed-statement":593,"OPEN_BRACE":382,"SEMICOLON":597,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"if-statement":605,"switch-statement":606,"while-statement":607,"do-statement":608,"for-statement":609,"foreach-statement":610,"break-statement":611,"continue-statement":612,"goto-statement":613,"return-statement":614,"throw-statement":615,"TRY":616,"CHECKED":617,"UNCHECKED":618,"LOCK":619,"USING":620,"UNSAFE":621,"modifiers":622,"FIXED":623,"invocation-expression":261,"NEW":624,"unary-expression":625,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"IF":626,"SWITCH":627,"WHILE":628,"DO":629,"FOR":630,"FOREACH":631,"YIELD":632,"BREAK":633,"CONTINUE":634,"GOTO":635,"RETURN":636,"THROW":637,"modifier":30,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-no-array-creation-expression":227,"array-creation-expression":228,"ASYNC":456,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"THIS":262,"BASE":263,"TYPEOF":265,"SIZEOF":266,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 630 
for-statement -> FOR .OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":839}

item set 631 
foreach-statement -> FOREACH .OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":840}

item set 632 
break-statement -> YIELD .BREAK SEMICOLON
return-statement -> YIELD .RETURN block-expression-with-brace SEMICOLON
return-statement -> YIELD .RETURN expression SEMICOLON
return-statement -> YIELD .RETURN SEMICOLON 
transitions ->  {"BREAK":841,"RETURN":842}

item set 633 
break-statement -> BREAK .SEMICOLON 
transitions ->  {"SEMICOLON":843}

item set 634 
continue-statement -> CONTINUE .SEMICOLON 
transitions ->  {"SEMICOLON":844}

item set 635 
goto-statement -> GOTO .IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> GOTO .CASE constant-expression SEMICOLON
goto-statement -> GOTO .DEFAULT SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":845,"CASE":846,"DEFAULT":847,"IDENTIFIER":59}

item set 636 
return-statement -> RETURN .block-expression-with-brace SEMICOLON
return-statement -> RETURN .SEMICOLON
return-statement -> RETURN .expression SEMICOLON
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"block-expression-with-brace":848,"SEMICOLON":849,"expression":850,"OPEN_BRACE":403,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 637 
throw-statement -> THROW .SEMICOLON
throw-statement -> THROW .expression SEMICOLON
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":851,"expression":852,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 638 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET .CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET rank-specifiers array-initializer
expression-list -> .expression
expression-list -> .expression-list COMMA expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACKET":853,"expression-list":854,"expression":563,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 639 
array-creation-expression -> STACKALLOC array-type array-initializer . 
transitions ->  {}

item set 640 
array-initializer -> OPEN_BRACE .CLOSE_BRACE
array-initializer -> OPEN_BRACE .variable-initializer-list CLOSE_BRACE
array-initializer -> OPEN_BRACE .variable-initializer-list COMMA CLOSE_BRACE
variable-initializer-list -> .variable-initializer
variable-initializer-list -> .variable-initializer-list COMMA variable-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACE":855,"variable-initializer-list":856,"variable-initializer":857,"expression":858,"array-initializer":859,"conditional-expression":209,"assignment":210,"OPEN_BRACE":640,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 641 
and-expression -> and-expression AMP equality-expression .
equality-expression -> equality-expression .OP_EQ relational-expression
equality-expression -> equality-expression .OP_NE relational-expression 
transitions ->  {"OP_EQ":408,"OP_NE":409}

item set 642 
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS .OP_DBLPTR expression
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS .OP_DBLPTR block 
transitions ->  {"OP_DBLPTR":860}

item set 643 
dbl-expression-list -> dbl-expression-list COMMA .expression expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":861,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 644 
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS .OP_DBLPTR expression
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS .OP_DBLPTR block 
transitions ->  {"OP_DBLPTR":862}

item set 645 
type-expression-list -> type-expression-list COMMA .type expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":863,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 646 
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS .OP_DBLPTR expression
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS .OP_DBLPTR block 
transitions ->  {"OP_DBLPTR":864}

item set 647 
expression-list -> expression-list COMMA .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":865,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 648 
cast-expression -> OPEN_PARENS type expression .CLOSE_PARENS OP_DBLPTR expression block
type-expression-list -> type expression . 
transitions ->  {"CLOSE_PARENS":866}

item set 649 
member-access -> type OP_PTR .IDENTIFIER_WITH_KEYWORD
unary-expression -> OP_PTR .unary-expression
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":867,"unary-expression":361,"IDENTIFIER_WITH_TEMPLATE":360,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":262,"ASYNC":75,"WHERE":76,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"IDENTIFIER":59,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"type":260,"invocation-expression":261,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"TRUE":270,"FALSE":271,"non-array-type":115,"array-type":116,"AWAIT":272,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 650 
cast-expression -> OPEN_PARENS expression CLOSE_PARENS .OP_DBLPTR expression block
cast-expression -> OPEN_PARENS expression CLOSE_PARENS .OP_DBLPTR expression
cast-expression -> OPEN_PARENS expression CLOSE_PARENS .expression
parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS .
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"OP_DBLPTR":868,"expression":869,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 651 
dbl-expression-list -> expression expression . 
transitions ->  {}

item set 652 
cast-expression -> OPEN_PARENS type-with-interr CLOSE_PARENS .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":870,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 653 
member-access -> type DOT IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 654 
member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 655 
base-access -> BASE DOT IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {}

item set 656 
base-access -> BASE OPEN_BRACKET expression-list .CLOSE_BRACKET
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":871,"COMMA":647}

item set 657 
delegate-creation-expression -> NEW type OPEN_PARENS .argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW type OPEN_PARENS .argument-list CLOSE_PARENS
delegate-creation-expression -> NEW type OPEN_PARENS .CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW type OPEN_PARENS .CLOSE_PARENS
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument-list":872,"CLOSE_PARENS":873,"argument":555,"expression":556,"REF":557,"OUT":558,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 658 
delegate-creation-expression -> NEW type block-expression-with-brace . 
transitions ->  {}

item set 659 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS .argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS .argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW type-with-identifier OPEN_PARENS .CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS .CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW type-with-identifier OPEN_PARENS .CLOSE_PARENS block-expression-with-brace
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument-list":874,"CLOSE_PARENS":875,"argument":555,"expression":556,"REF":557,"OUT":558,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 660 
object-creation-expression -> NEW type-with-identifier block-expression-with-brace . 
transitions ->  {}

item set 661 
object-creation-expression -> NEW type-with-identifier rank-specifiers .block-expression-with-brace
rank-specifiers -> rank-specifiers .rank-specifier
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"block-expression-with-brace":876,"rank-specifier":330,"OPEN_BRACE":403,"OPEN_BRACKET":188}

item set 662 
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET .argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET .argument-list CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .dim-separators CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .CLOSE_BRACKET
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
dim-separators -> .dim-separators COMMA
dim-separators -> .COMMA
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument-list":877,"dim-separators":331,"CLOSE_BRACKET":332,"argument":555,"COMMA":333,"expression":556,"REF":557,"OUT":558,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 663 
object-creation-expression -> NEW non-array-type rank-specifiers .block-expression-with-brace
rank-specifiers -> rank-specifiers .rank-specifier
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"block-expression-with-brace":878,"rank-specifier":330,"OPEN_BRACE":403,"OPEN_BRACKET":188}

item set 664 
object-creation-expression -> NEW non-array-type OPEN_BRACKET .argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW non-array-type OPEN_BRACKET .argument-list CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .dim-separators CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .CLOSE_BRACKET
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
dim-separators -> .dim-separators COMMA
dim-separators -> .COMMA
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument-list":879,"dim-separators":331,"CLOSE_BRACKET":332,"argument":555,"COMMA":333,"expression":556,"REF":557,"OUT":558,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 665 
object-creation-expression -> NEW rank-specifiers block-expression-with-brace . 
transitions ->  {}

item set 666 
type-with-identifier -> IDENTIFIER TEMPLATE .
IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE . 
transitions ->  {}

item set 667 
block-expression-with-brace -> OPEN_BRACE block-expression-list .CLOSE_BRACE
block-expression-list -> block-expression-list .COMMA block-expression-list-unit 
transitions ->  {"CLOSE_BRACE":880,"COMMA":881}

item set 668 
block-expression-list -> block-expression-list-unit . 
transitions ->  {}

item set 669 
block-expression-list-unit -> block-expression-with-brace . 
transitions ->  {}

item set 670 
block-expression-list-unit -> expression . 
transitions ->  {}

item set 671 
typeof-expression -> TYPEOF OPEN_PARENS type-with-interr .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":882}

item set 672 
sizeof-expression -> SIZEOF OPEN_PARENS type-with-interr .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":883}

item set 673 
checked-expression -> CHECKED OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":884}

item set 674 
unchecked-expression -> UNCHECKED OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":885}

item set 675 
equality-expression -> equality-expression OP_EQ relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .OP_COALESCING shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":411,"GT":412,"OP_LE":413,"OP_GE":414,"OP_COALESCING":415,"IS":416,"AS":417}

item set 676 
equality-expression -> equality-expression OP_NE relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .OP_COALESCING shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":411,"GT":412,"OP_LE":413,"OP_GE":414,"OP_COALESCING":415,"IS":416,"AS":417}

item set 677 
invocation-expression -> AWAIT primary-expression OPEN_PARENS .type CLOSE_PARENS
invocation-expression -> AWAIT primary-expression OPEN_PARENS .argument-list CLOSE_PARENS
invocation-expression -> AWAIT primary-expression OPEN_PARENS .CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .type CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .argument-list CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .CLOSE_PARENS
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
type-name -> .namespace-or-type-name
expression -> .conditional-expression
expression -> .assignment
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"type":886,"argument-list":887,"CLOSE_PARENS":888,"non-array-type":115,"array-type":116,"argument":555,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"expression":556,"REF":557,"OUT":558,"namespace-or-type-name":94,"conditional-expression":209,"assignment":210,"IDENTIFIER_WITH_KEYWORD":248,"conditional-or-expression":211,"unary-expression":212,"IDENTIFIER_WITH_TEMPLATE":360,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":262,"ASYNC":75,"WHERE":76,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"IDENTIFIER":59,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"invocation-expression":261,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"equality-expression":269,"TRUE":270,"FALSE":271,"AWAIT":272,"relational-expression":273,"shift-expression":274,"additive-expression":275,"multiplicative-expression":276}

item set 678 
relational-expression -> relational-expression LT shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":418,"RIGHT_SHIFT":419}

item set 679 
relational-expression -> relational-expression GT shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":418,"RIGHT_SHIFT":419}

item set 680 
relational-expression -> relational-expression OP_LE shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":418,"RIGHT_SHIFT":419}

item set 681 
relational-expression -> relational-expression OP_GE shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":418,"RIGHT_SHIFT":419}

item set 682 
relational-expression -> relational-expression OP_COALESCING shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":418,"RIGHT_SHIFT":419}

item set 683 
relational-expression -> relational-expression IS type .
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifiers":186,"rank-specifier":187,"OPEN_BRACKET":188}

item set 684 
relational-expression -> relational-expression AS type .
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifiers":186,"rank-specifier":187,"OPEN_BRACKET":188}

item set 685 
shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .OP_PTR multiplicative-expression
additive-expression -> additive-expression .OP_COALESCING multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":420,"OP_PTR":421,"OP_COALESCING":422,"MINUS":423}

item set 686 
shift-expression -> shift-expression RIGHT_SHIFT additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .OP_PTR multiplicative-expression
additive-expression -> additive-expression .OP_COALESCING multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":420,"OP_PTR":421,"OP_COALESCING":422,"MINUS":423}

item set 687 
additive-expression -> additive-expression PLUS multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":424,"DIV":425,"PERCENT":426}

item set 688 
additive-expression -> additive-expression OP_PTR multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":424,"DIV":425,"PERCENT":426}

item set 689 
additive-expression -> additive-expression OP_COALESCING multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":424,"DIV":425,"PERCENT":426}

item set 690 
additive-expression -> additive-expression MINUS multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":424,"DIV":425,"PERCENT":426}

item set 691 
multiplicative-expression -> multiplicative-expression STAR unary-expression . 
transitions ->  {}

item set 692 
multiplicative-expression -> multiplicative-expression DIV unary-expression . 
transitions ->  {}

item set 693 
multiplicative-expression -> multiplicative-expression PERCENT unary-expression . 
transitions ->  {}

item set 694 
namespace-body -> OPEN_BRACE using-directives namespace-member-declarations CLOSE_BRACE . 
transitions ->  {}

item set 695 
class-body -> OPEN_BRACE class-member-declarations CLOSE_BRACE . 
transitions ->  {}

item set 696 
class-member-declarations -> class-member-declarations class-member-declaration . 
transitions ->  {}

item set 697 
constant-declaration -> CONST type-with-interr .constant-declarators SEMICOLON
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"constant-declarators":889,"constant-declarator":890,"IDENTIFIER_WITH_TEMPLATE":891,"IDENTIFIER":59}

item set 698 
constant-declaration -> attributes CONST .type-with-interr constant-declarators SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":892,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 699 
constant-declaration -> attributes modifiers .CONST type-with-interr constant-declarators SEMICOLON
field-declaration -> attributes modifiers .type-with-interr member-name SEMICOLON
property-declaration -> attributes modifiers .type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
event-declaration -> attributes modifiers .EVENT type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes modifiers .EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
indexer-declaration -> attributes modifiers .indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE
operator-declaration -> attributes modifiers .operator-declarator method-body
constructor-declaration -> attributes modifiers .constructor-declarator method-body
static-constructor-declaration -> attributes modifiers .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
method-header -> attributes modifiers .type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> attributes modifiers .type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
class-declaration -> attributes modifiers .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body
class-declaration -> attributes modifiers .CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON
class-declaration -> attributes modifiers .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body
class-declaration -> attributes modifiers .CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body
struct-declaration -> attributes modifiers .STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body
interface-declaration -> attributes modifiers .INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body
enum-declaration -> attributes modifiers .ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON
delegate-declaration -> attributes modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers .DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
modifiers -> modifiers .modifier
type-with-interr -> .type INTERR
type-with-interr -> .type
indexer-declarator -> .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> .type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
operator-declarator -> .unary-operator-declarator
operator-declarator -> .binary-operator-declarator
operator-declarator -> .conversion-operator-declarator
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
unary-operator-declarator -> .type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> .type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
conversion-operator-declarator -> .EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> .EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"CONST":893,"type-with-interr":894,"EVENT":895,"indexer-declarator":896,"operator-declarator":897,"constructor-declarator":898,"IDENTIFIER_WITH_TEMPLATE":899,"CLASS":160,"STRUCT":161,"INTERFACE":162,"ENUM":163,"DELEGATE":164,"modifier":109,"type":114,"unary-operator-declarator":713,"binary-operator-declarator":714,"conversion-operator-declarator":715,"IDENTIFIER":59,"UNSAFE":32,"ASYNC":456,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47,"non-array-type":115,"array-type":116,"IMPLICIT":716,"EXPLICIT":717,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"WHERE":76}

item set 700 
field-declaration -> attributes type-with-interr .member-name SEMICOLON
property-declaration -> attributes type-with-interr .member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
method-header -> attributes type-with-interr .member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> attributes type-with-interr .member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> type-with-interr .member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name":900,"THIS":721,"variable-declarators":722,"variable-declarator":723,"type-name":724,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 701 
event-declaration -> attributes EVENT .type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes EVENT .type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":901,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 702 
indexer-declaration -> attributes indexer-declarator .OPEN_BRACE accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":902}

item set 703 
constructor-declaration -> attributes constructor-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":903,"block":728,"SEMICOLON":729,"OPEN_BRACE":382}

item set 704 
destructor-declaration -> attributes TILDE .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":904,"IDENTIFIER":59}

item set 705 
destructor-declaration -> attributes EXTERN .TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
modifier -> EXTERN . 
transitions ->  {"TILDE":905}

item set 706 
constant-declaration -> modifiers CONST .type-with-interr constant-declarators SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":906,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 707 
field-declaration -> modifiers type-with-interr .member-name SEMICOLON
property-declaration -> modifiers type-with-interr .member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
method-header -> modifiers type-with-interr .member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> modifiers type-with-interr .member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> type-with-interr .member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
unary-operator-declarator -> type-with-interr .OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr .OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name":907,"THIS":721,"OPERATOR":908,"variable-declarators":722,"variable-declarator":723,"type-name":724,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 708 
event-declaration -> modifiers EVENT .type-with-interr variable-declarators SEMICOLON
event-declaration -> modifiers EVENT .type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":909,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 709 
indexer-declaration -> modifiers indexer-declarator .OPEN_BRACE accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":910}

item set 710 
operator-declaration -> modifiers operator-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":911,"block":728,"SEMICOLON":729,"OPEN_BRACE":382}

item set 711 
constructor-declaration -> modifiers constructor-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":912,"block":728,"SEMICOLON":729,"OPEN_BRACE":382}

item set 712 
static-constructor-declaration -> modifiers IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"OPEN_PARENS":913}

item set 713 
operator-declarator -> unary-operator-declarator . 
transitions ->  {}

item set 714 
operator-declarator -> binary-operator-declarator . 
transitions ->  {}

item set 715 
operator-declarator -> conversion-operator-declarator . 
transitions ->  {}

item set 716 
conversion-operator-declarator -> IMPLICIT .OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> IMPLICIT .OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS 
transitions ->  {"OPERATOR":914}

item set 717 
conversion-operator-declarator -> EXPLICIT .OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> EXPLICIT .OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS 
transitions ->  {"OPERATOR":915}

item set 718 
method-declaration -> method-header block . 
transitions ->  {}

item set 719 
method-declaration -> method-header SEMICOLON . 
transitions ->  {}

item set 720 
field-declaration -> type-with-interr member-name .SEMICOLON
property-declaration -> type-with-interr member-name .OPEN_BRACE accessor-declarations CLOSE_BRACE
method-header -> type-with-interr member-name .OPEN_PARENS CLOSE_PARENS where-base
method-header -> type-with-interr member-name .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> type-with-interr member-name .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET 
transitions ->  {"SEMICOLON":916,"OPEN_BRACE":917,"OPEN_PARENS":918,"OPEN_BRACKET":919}

item set 721 
indexer-declarator -> type-with-interr THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
IDENTIFIER_WITH_KEYWORD -> THIS . 
transitions ->  {"OPEN_BRACKET":920}

item set 722 
member-name -> variable-declarators .
variable-declarators -> variable-declarators .COMMA variable-declarator 
transitions ->  {"COMMA":921}

item set 723 
variable-declarators -> variable-declarator . 
transitions ->  {}

item set 724 
variable-declarator -> type-name .ASSIGN variable-initializer
variable-declarator -> type-name . 
transitions ->  {"ASSIGN":922}

item set 725 
event-declaration -> EVENT type-with-interr .variable-declarators SEMICOLON
event-declaration -> EVENT type-with-interr .member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
member-name -> .variable-declarators
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"variable-declarators":923,"member-name":924,"variable-declarator":723,"type-name":724,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 726 
indexer-declaration -> indexer-declarator OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":925,"get-accessor-declaration":926,"set-accessor-declaration":927,"attributes":928,"modifiers":929,"GET":930,"SET":931,"attribute-sections":29,"modifier":30,"attribute-section":31,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47,"OPEN_BRACKET":53}

item set 727 
constructor-declaration -> constructor-declarator method-body . 
transitions ->  {}

item set 728 
method-body -> block . 
transitions ->  {}

item set 729 
method-body -> SEMICOLON . 
transitions ->  {}

item set 730 
destructor-declaration -> TILDE IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body 
transitions ->  {"OPEN_PARENS":932}

item set 731 
destructor-declaration -> EXTERN TILDE .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":933,"IDENTIFIER":59}

item set 732 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS constructor-initializer
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":934,"formal-parameter-list":935,"fixed-parameters":525,"parameter-array":526,"fixed-parameter":527,"PARAMS":528,"attributes":529,"type-with-interr":530,"THIS":531,"parameter-modifier":532,"attribute-sections":29,"type":114,"REF":533,"OUT":534,"attribute-section":31,"non-array-type":115,"array-type":116,"OPEN_BRACKET":53,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 733 
class-declaration -> CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON . 
transitions ->  {}

item set 734 
where-base -> where-units COMMA NEW OPEN_PARENS .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":936}

item set 735 
class-base -> COLON type-with-interr COMMA interface-type-list .
interface-type-list -> interface-type-list .COMMA type-with-interr 
transitions ->  {"COMMA":460}

item set 736 
interface-type-list -> interface-type-list COMMA type-with-interr . 
transitions ->  {}

item set 737 
where-unit -> WHERE type-name COLON where-names .
where-names -> where-names .COMMA where-name 
transitions ->  {"COMMA":937}

item set 738 
where-names -> where-name . 
transitions ->  {}

item set 739 
where-name -> type-name .
non-array-type -> type-name . 
transitions ->  {}

item set 740 
where-name -> type .
array-type -> type .rank-specifiers
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifiers":186,"rank-specifier":187,"OPEN_BRACKET":188}

item set 741 
where-name -> CLASS . 
transitions ->  {}

item set 742 
where-name -> STRUCT . 
transitions ->  {}

item set 743 
where-name -> NEW .OPEN_PARENS CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":938}

item set 744 
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON . 
transitions ->  {}

item set 745 
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body .
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":939}

item set 746 
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body .
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":940}

item set 747 
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base .class-body
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base .class-body SEMICOLON
class-body -> .OPEN_BRACE CLOSE_BRACE
class-body -> .OPEN_BRACE class-member-declarations CLOSE_BRACE 
transitions ->  {"class-body":941,"OPEN_BRACE":282}

item set 748 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":942}

item set 749 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base .struct-body SEMICOLON
struct-body -> .OPEN_BRACE CLOSE_BRACE
struct-body -> .OPEN_BRACE struct-member-declarations CLOSE_BRACE 
transitions ->  {"struct-body":943,"OPEN_BRACE":313}

item set 750 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":944}

item set 751 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base .interface-body SEMICOLON
interface-body -> .OPEN_BRACE CLOSE_BRACE
interface-body -> .OPEN_BRACE interface-member-declarations CLOSE_BRACE 
transitions ->  {"interface-body":945,"OPEN_BRACE":318}

item set 752 
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-body SEMICOLON . 
transitions ->  {}

item set 753 
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body .SEMICOLON 
transitions ->  {"SEMICOLON":946}

item set 754 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":947,"formal-parameter-list":948,"fixed-parameters":525,"parameter-array":526,"fixed-parameter":527,"PARAMS":528,"attributes":529,"type-with-interr":530,"THIS":531,"parameter-modifier":532,"attribute-sections":29,"type":114,"REF":533,"OUT":534,"attribute-section":31,"non-array-type":115,"array-type":116,"OPEN_BRACKET":53,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 755 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON . 
transitions ->  {}

item set 756 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":949}

item set 757 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON . 
transitions ->  {}

item set 758 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":950}

item set 759 
enum-declaration -> attributes ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 760 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":951,"where-units":155,"where-unit":157,"WHERE":158}

item set 761 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":952}

item set 762 
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON . 
transitions ->  {}

item set 763 
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body .
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":953}

item set 764 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON . 
transitions ->  {}

item set 765 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":954}

item set 766 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON . 
transitions ->  {}

item set 767 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":955}

item set 768 
enum-declaration -> modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 769 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":956,"where-units":155,"where-unit":157,"WHERE":158}

item set 770 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":957}

item set 771 
struct-body -> OPEN_BRACE struct-member-declarations CLOSE_BRACE . 
transitions ->  {}

item set 772 
struct-member-declarations -> struct-member-declarations struct-member-declaration . 
transitions ->  {}

item set 773 
struct-declaration -> STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON . 
transitions ->  {}

item set 774 
interface-body -> OPEN_BRACE interface-member-declarations CLOSE_BRACE . 
transitions ->  {}

item set 775 
interface-member-declarations -> interface-member-declarations interface-member-declaration . 
transitions ->  {}

item set 776 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_PARENS":958,"OPEN_BRACE":959}

item set 777 
interface-indexer-declaration -> type-with-interr THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACKET":960}

item set 778 
interface-method-declaration -> attributes type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> attributes type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":961,"THIS":962,"IDENTIFIER":59}

item set 779 
interface-method-declaration -> attributes NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes NEW .type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-event-declaration -> attributes NEW .EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
interface-indexer-declaration -> attributes NEW .type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":963,"EVENT":964,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 780 
interface-event-declaration -> attributes EVENT .type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":965,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 781 
interface-method-declaration -> NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> NEW type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":966,"THIS":967,"IDENTIFIER":59}

item set 782 
interface-event-declaration -> NEW EVENT .type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":968,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 783 
interface-event-declaration -> EVENT type-with-interr .IDENTIFIER_WITH_TEMPLATE SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":969,"IDENTIFIER":59}

item set 784 
interface-declaration -> INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON . 
transitions ->  {}

item set 785 
enum-body -> OPEN_BRACE enum-member-declarations COMMA CLOSE_BRACE . 
transitions ->  {}

item set 786 
enum-member-declarations -> enum-member-declarations COMMA enum-member-declaration . 
transitions ->  {}

item set 787 
enum-member-declaration -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression . 
transitions ->  {}

item set 788 
constant-expression -> expression . 
transitions ->  {}

item set 789 
enum-member-declaration -> attributes IDENTIFIER_WITH_TEMPLATE ASSIGN .constant-expression
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":970,"expression":788,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 790 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":971}

item set 791 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":972,"where-units":155,"where-unit":157,"WHERE":158}

item set 792 
formal-parameter-list -> fixed-parameters COMMA .parameter-array
fixed-parameters -> fixed-parameters COMMA .fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"parameter-array":973,"fixed-parameter":974,"PARAMS":528,"attributes":529,"type-with-interr":530,"THIS":531,"parameter-modifier":532,"attribute-sections":29,"type":114,"REF":533,"OUT":534,"attribute-section":31,"non-array-type":115,"array-type":116,"OPEN_BRACKET":53,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 793 
parameter-array -> PARAMS array-type .IDENTIFIER_WITH_TEMPLATE
type -> array-type .STARS
type -> array-type .
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":975,"STARS":191,"IDENTIFIER":59,"STAR":190}

item set 794 
parameter-array -> attributes PARAMS .array-type IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> PARAMS .
array-type -> .type rank-specifiers
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"array-type":976,"type":385,"non-array-type":115,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 795 
fixed-parameter -> attributes type-with-interr .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":977,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 796 
fixed-parameter -> attributes parameter-modifier .type-with-interr IDENTIFIER_WITH_KEYWORD
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":978,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 797 
fixed-parameter -> type-with-interr IDENTIFIER_WITH_KEYWORD .ASSIGN expression
fixed-parameter -> type-with-interr IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"ASSIGN":979}

item set 798 
fixed-parameter -> THIS type-with-interr .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":980,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 799 
fixed-parameter -> parameter-modifier type-with-interr .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":981,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 800 
attribute-arguments -> OPEN_PARENS positional-argument-list COMMA named-argument-list CLOSE_PARENS . 
transitions ->  {}

item set 801 
conditional-expression -> conditional-or-expression INTERR expression COLON .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":982,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 802 
invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS . 
transitions ->  {}

item set 803 
invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 804 
argument-list -> argument-list COLON .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument":983,"expression":556,"REF":557,"OUT":558,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 805 
argument-list -> argument-list COMMA .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument":984,"expression":556,"REF":557,"OUT":558,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 806 
argument -> REF variable-reference . 
transitions ->  {}

item set 807 
variable-reference -> expression . 
transitions ->  {}

item set 808 
argument -> OUT variable-reference . 
transitions ->  {}

item set 809 
element-access -> primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET . 
transitions ->  {}

item set 810 
element-access -> primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET . 
transitions ->  {}

item set 811 
delegate-expression -> DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":985,"OPEN_BRACE":382}

item set 812 
delegate-expression -> DELEGATE OPEN_PARENS CLOSE_PARENS block . 
transitions ->  {}

item set 813 
block -> OPEN_BRACE statement-list CLOSE_BRACE . 
transitions ->  {}

item set 814 
statement-list -> statement-list statement . 
transitions ->  {}

item set 815 
labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON .switch-labels
labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON .statement
switch-labels -> .switch-labels switch-label
switch-labels -> .switch-label
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"switch-labels":986,"statement":987,"switch-label":988,"labeled-statement":575,"declaration-statement":576,"embedded-statement":577,"CASE":989,"DEFAULT":990,"IDENTIFIER_WITH_KEYWORD":578,"local-variable-declaration":579,"local-constant-declaration":580,"block":581,"empty-statement":582,"statement-expression":583,"selection-statement":584,"iteration-statement":585,"jump-statement":586,"try-statement":587,"checked-statement":588,"unchecked-statement":589,"lock-statement":590,"using-statement":591,"unsafe-statement":592,"fixed-statement":593,"IDENTIFIER_WITH_TEMPLATE":360,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":262,"ASYNC":456,"WHERE":76,"primary-expression":594,"type":595,"CONST":596,"OPEN_BRACE":382,"SEMICOLON":597,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"if-statement":605,"switch-statement":606,"while-statement":607,"do-statement":608,"for-statement":609,"foreach-statement":610,"break-statement":611,"continue-statement":612,"goto-statement":613,"return-statement":614,"throw-statement":615,"TRY":616,"CHECKED":617,"UNCHECKED":618,"LOCK":619,"USING":620,"UNSAFE":621,"modifiers":622,"FIXED":623,"IDENTIFIER":59,"primary-no-array-creation-expression":227,"array-creation-expression":228,"non-array-type":115,"array-type":116,"invocation-expression":261,"NEW":624,"unary-expression":625,"OP_INC":225,"OP_DEC":226,"IF":626,"SWITCH":627,"WHILE":628,"DO":629,"FOR":630,"FOREACH":631,"YIELD":632,"BREAK":633,"CONTINUE":634,"GOTO":635,"RETURN":636,"THROW":637,"modifier":30,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"BASE":263,"TYPEOF":265,"SIZEOF":266,"namespace-or-type-name":94,"TRUE":270,"FALSE":271}

item set 816 
declaration-statement -> local-variable-declaration SEMICOLON . 
transitions ->  {}

item set 817 
declaration-statement -> local-constant-declaration SEMICOLON . 
transitions ->  {}

item set 818 
embedded-statement -> statement-expression SEMICOLON . 
transitions ->  {}

item set 819 
local-variable-declaration -> primary-expression local-variable-declarators .
local-variable-declarators -> local-variable-declarators .COMMA local-variable-declarator 
transitions ->  {"COMMA":991}

item set 820 
local-variable-declarators -> local-variable-declarator . 
transitions ->  {}

item set 821 
local-variable-declarator -> local-variable .
local-variable-declarator -> local-variable .ASSIGN local-variable-initializer 
transitions ->  {"ASSIGN":992}

item set 822 
local-variable -> INTERR .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":993,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 823 
local-variable -> STARS .IDENTIFIER_WITH_KEYWORD
STARS -> STARS .STAR
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":994,"STAR":334,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 824 
local-variable -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 825 
local-variable-declaration -> type local-variable-declarators .
local-variable-declarators -> local-variable-declarators .COMMA local-variable-declarator 
transitions ->  {"COMMA":991}

item set 826 
local-constant-declaration -> CONST type .constant-declarators
array-type -> type .rank-specifiers
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"constant-declarators":995,"rank-specifiers":186,"constant-declarator":890,"rank-specifier":187,"IDENTIFIER_WITH_TEMPLATE":891,"OPEN_BRACKET":188,"IDENTIFIER":59}

item set 827 
try-statement -> TRY block .catch-clauses
try-statement -> TRY block .finally-clause
try-statement -> TRY block .catch-clauses finally-clause
catch-clauses -> .specific-catch-clauses
catch-clauses -> .general-catch-clause
catch-clauses -> .specific-catch-clauses general-catch-clause
finally-clause -> .FINALLY block
specific-catch-clauses -> .specific-catch-clause
specific-catch-clauses -> .specific-catch-clauses specific-catch-clause
general-catch-clause -> .CATCH block
specific-catch-clause -> .CATCH OPEN_PARENS type CLOSE_PARENS block
specific-catch-clause -> .CATCH OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block 
transitions ->  {"catch-clauses":996,"finally-clause":997,"specific-catch-clauses":998,"general-catch-clause":999,"FINALLY":1000,"specific-catch-clause":1001,"CATCH":1002}

item set 828 
checked-statement -> CHECKED block . 
transitions ->  {}

item set 829 
unchecked-statement -> UNCHECKED block . 
transitions ->  {}

item set 830 
lock-statement -> LOCK OPEN_PARENS .expression CLOSE_PARENS embedded-statement
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1003,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 831 
using-statement -> USING OPEN_PARENS .resource-acquisition CLOSE_PARENS embedded-statement
resource-acquisition -> .local-variable-declaration
resource-acquisition -> .expression
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
expression -> .conditional-expression
expression -> .assignment
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"resource-acquisition":1004,"local-variable-declaration":1005,"expression":1006,"primary-expression":594,"type":595,"conditional-expression":209,"assignment":210,"primary-no-array-creation-expression":227,"array-creation-expression":228,"non-array-type":115,"array-type":116,"conditional-or-expression":211,"unary-expression":212,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"namespace-or-type-name":94,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"AWAIT":272,"exclusive-or-expression":229,"and-expression":252,"equality-expression":269,"relational-expression":273,"shift-expression":274,"additive-expression":275,"multiplicative-expression":276}

item set 832 
unsafe-statement -> UNSAFE block . 
transitions ->  {}

item set 833 
fixed-statement -> modifiers FIXED .OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":1007}

item set 834 
fixed-statement -> FIXED OPEN_PARENS .type local-variable-declarators CLOSE_PARENS embedded-statement
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":1008,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 835 
if-statement -> IF OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement
if-statement -> IF OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":1009,"expression":1010,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 836 
switch-statement -> SWITCH OPEN_PARENS .expression CLOSE_PARENS switch-block
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1011,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 837 
while-statement -> WHILE OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":1012,"expression":1010,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 838 
do-statement -> DO embedded-statement .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON 
transitions ->  {"WHILE":1013}

item set 839 
for-statement -> FOR OPEN_PARENS .SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-initializer -> .local-variable-declaration
for-initializer -> .statement-expression-list
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"SEMICOLON":1014,"for-initializer":1015,"local-variable-declaration":1016,"statement-expression-list":1017,"primary-expression":594,"type":595,"statement-expression":1018,"primary-no-array-creation-expression":227,"array-creation-expression":228,"non-array-type":115,"array-type":116,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"invocation-expression":261,"NEW":264,"unary-expression":625,"OP_INC":225,"OP_DEC":226,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"THIS":262,"BASE":263,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"namespace-or-type-name":94,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"TRUE":270,"FALSE":271,"IDENTIFIER":59}

item set 840 
foreach-statement -> FOREACH OPEN_PARENS .type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":1019,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 841 
break-statement -> YIELD BREAK .SEMICOLON 
transitions ->  {"SEMICOLON":1020}

item set 842 
return-statement -> YIELD RETURN .block-expression-with-brace SEMICOLON
return-statement -> YIELD RETURN .expression SEMICOLON
return-statement -> YIELD RETURN .SEMICOLON
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"block-expression-with-brace":1021,"expression":1022,"SEMICOLON":1023,"OPEN_BRACE":403,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 843 
break-statement -> BREAK SEMICOLON . 
transitions ->  {}

item set 844 
continue-statement -> CONTINUE SEMICOLON . 
transitions ->  {}

item set 845 
goto-statement -> GOTO IDENTIFIER_WITH_TEMPLATE .SEMICOLON 
transitions ->  {"SEMICOLON":1024}

item set 846 
goto-statement -> GOTO CASE .constant-expression SEMICOLON
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":1025,"expression":788,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 847 
goto-statement -> GOTO DEFAULT .SEMICOLON 
transitions ->  {"SEMICOLON":1026}

item set 848 
return-statement -> RETURN block-expression-with-brace .SEMICOLON 
transitions ->  {"SEMICOLON":1027}

item set 849 
return-statement -> RETURN SEMICOLON . 
transitions ->  {}

item set 850 
return-statement -> RETURN expression .SEMICOLON 
transitions ->  {"SEMICOLON":1028}

item set 851 
throw-statement -> THROW SEMICOLON . 
transitions ->  {}

item set 852 
throw-statement -> THROW expression .SEMICOLON 
transitions ->  {"SEMICOLON":1029}

item set 853 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET .argument-list-with-brace
argument-list-with-brace -> .OPEN_BRACE argument-list COMMA CLOSE_BRACE
argument-list-with-brace -> .OPEN_BRACE argument-list CLOSE_BRACE
argument-list-with-brace -> .OPEN_BRACE CLOSE_BRACE 
transitions ->  {"argument-list-with-brace":1030,"OPEN_BRACE":1031}

item set 854 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET rank-specifiers
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET array-initializer
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET rank-specifiers array-initializer
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":1032,"COMMA":647}

item set 855 
array-initializer -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 856 
array-initializer -> OPEN_BRACE variable-initializer-list .CLOSE_BRACE
array-initializer -> OPEN_BRACE variable-initializer-list .COMMA CLOSE_BRACE
variable-initializer-list -> variable-initializer-list .COMMA variable-initializer 
transitions ->  {"CLOSE_BRACE":1033,"COMMA":1034}

item set 857 
variable-initializer-list -> variable-initializer . 
transitions ->  {}

item set 858 
variable-initializer -> expression .
variable-initializer -> expression . 
transitions ->  {}

item set 859 
variable-initializer -> array-initializer .
variable-initializer -> array-initializer . 
transitions ->  {}

item set 860 
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR .expression
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR .block
expression -> .conditional-expression
expression -> .assignment
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1035,"block":1036,"conditional-expression":209,"assignment":210,"OPEN_BRACE":382,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 861 
dbl-expression-list -> dbl-expression-list COMMA expression .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1037,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 862 
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR .expression
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR .block
expression -> .conditional-expression
expression -> .assignment
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1038,"block":1039,"conditional-expression":209,"assignment":210,"OPEN_BRACE":382,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 863 
type-expression-list -> type-expression-list COMMA type .expression
array-type -> type .rank-specifiers
expression -> .conditional-expression
expression -> .assignment
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1040,"rank-specifiers":186,"conditional-expression":209,"assignment":210,"rank-specifier":187,"conditional-or-expression":211,"unary-expression":212,"OPEN_BRACKET":188,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 864 
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR .expression
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR .block
expression -> .conditional-expression
expression -> .assignment
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1041,"block":1042,"conditional-expression":209,"assignment":210,"OPEN_BRACE":382,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 865 
expression-list -> expression-list COMMA expression . 
transitions ->  {}

item set 866 
cast-expression -> OPEN_PARENS type expression CLOSE_PARENS .OP_DBLPTR expression block 
transitions ->  {"OP_DBLPTR":1043}

item set 867 
member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD .
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"OP_DBLPTR":379}

item set 868 
cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR .expression block
cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1044,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 869 
cast-expression -> OPEN_PARENS expression CLOSE_PARENS expression . 
transitions ->  {}

item set 870 
cast-expression -> OPEN_PARENS type-with-interr CLOSE_PARENS expression . 
transitions ->  {}

item set 871 
base-access -> BASE OPEN_BRACKET expression-list CLOSE_BRACKET . 
transitions ->  {}

item set 872 
delegate-creation-expression -> NEW type OPEN_PARENS argument-list .CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> NEW type OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":1045,"COLON":804,"COMMA":805}

item set 873 
delegate-creation-expression -> NEW type OPEN_PARENS CLOSE_PARENS .block-expression-with-brace
delegate-creation-expression -> NEW type OPEN_PARENS CLOSE_PARENS .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":1046,"OPEN_BRACE":403}

item set 874 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list .CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list .CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":1047,"COLON":804,"COMMA":805}

item set 875 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS .invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS .invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS .block-expression-with-brace
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"invocation-expressions":1048,"block-expression-with-brace":1049,"invocation-expression":261,"OPEN_BRACE":403,"AWAIT":272,"primary-expression":543,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 876 
object-creation-expression -> NEW type-with-identifier rank-specifiers block-expression-with-brace . 
transitions ->  {}

item set 877 
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list .CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list .CLOSE_BRACKET
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_BRACKET":1050,"COLON":804,"COMMA":805}

item set 878 
object-creation-expression -> NEW non-array-type rank-specifiers block-expression-with-brace . 
transitions ->  {}

item set 879 
object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list .CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list .CLOSE_BRACKET
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_BRACKET":1051,"COLON":804,"COMMA":805}

item set 880 
block-expression-with-brace -> OPEN_BRACE block-expression-list CLOSE_BRACE . 
transitions ->  {}

item set 881 
block-expression-list -> block-expression-list COMMA .block-expression-list-unit
block-expression-list-unit -> .block-expression-with-brace
block-expression-list-unit -> .expression
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"block-expression-list-unit":1052,"block-expression-with-brace":669,"expression":670,"OPEN_BRACE":403,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 882 
typeof-expression -> TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS . 
transitions ->  {}

item set 883 
sizeof-expression -> SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS . 
transitions ->  {}

item set 884 
checked-expression -> CHECKED OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 885 
unchecked-expression -> UNCHECKED OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 886 
invocation-expression -> AWAIT primary-expression OPEN_PARENS type .CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS type .CLOSE_PARENS
array-type -> type .rank-specifiers
member-access -> type .DOT IDENTIFIER_WITH_KEYWORD
member-access -> type .OP_PTR IDENTIFIER_WITH_KEYWORD
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"CLOSE_PARENS":1053,"rank-specifiers":186,"DOT":393,"OP_PTR":394,"rank-specifier":187,"OPEN_BRACKET":188}

item set 887 
invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list .CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":1054,"COLON":804,"COMMA":805}

item set 888 
invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS .
invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 889 
constant-declaration -> CONST type-with-interr constant-declarators .SEMICOLON
constant-declarators -> constant-declarators .COMMA constant-declarator
constant-declarators -> constant-declarators .COMMA constant-declarator 
transitions ->  {"SEMICOLON":1055,"COMMA":1056}

item set 890 
constant-declarators -> constant-declarator .
constant-declarators -> constant-declarator . 
transitions ->  {}

item set 891 
constant-declarator -> IDENTIFIER_WITH_TEMPLATE .ASSIGN constant-expression
constant-declarator -> IDENTIFIER_WITH_TEMPLATE .ASSIGN constant-expression 
transitions ->  {"ASSIGN":1057}

item set 892 
constant-declaration -> attributes CONST type-with-interr .constant-declarators SEMICOLON
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"constant-declarators":1058,"constant-declarator":890,"IDENTIFIER_WITH_TEMPLATE":891,"IDENTIFIER":59}

item set 893 
constant-declaration -> attributes modifiers CONST .type-with-interr constant-declarators SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1059,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 894 
field-declaration -> attributes modifiers type-with-interr .member-name SEMICOLON
property-declaration -> attributes modifiers type-with-interr .member-name OPEN_BRACE accessor-declarations CLOSE_BRACE
method-header -> attributes modifiers type-with-interr .member-name OPEN_PARENS CLOSE_PARENS where-base
method-header -> attributes modifiers type-with-interr .member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
indexer-declarator -> type-with-interr .member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET
unary-operator-declarator -> type-with-interr .OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr .OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
member-name -> .variable-declarators
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"member-name":1060,"THIS":721,"OPERATOR":908,"variable-declarators":722,"variable-declarator":723,"type-name":724,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 895 
event-declaration -> attributes modifiers EVENT .type-with-interr variable-declarators SEMICOLON
event-declaration -> attributes modifiers EVENT .type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1061,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 896 
indexer-declaration -> attributes modifiers indexer-declarator .OPEN_BRACE accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1062}

item set 897 
operator-declaration -> attributes modifiers operator-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1063,"block":728,"SEMICOLON":729,"OPEN_BRACE":382}

item set 898 
constructor-declaration -> attributes modifiers constructor-declarator .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1064,"block":728,"SEMICOLON":729,"OPEN_BRACE":382}

item set 899 
static-constructor-declaration -> attributes modifiers IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"OPEN_PARENS":1065}

item set 900 
field-declaration -> attributes type-with-interr member-name .SEMICOLON
property-declaration -> attributes type-with-interr member-name .OPEN_BRACE accessor-declarations CLOSE_BRACE
method-header -> attributes type-with-interr member-name .OPEN_PARENS CLOSE_PARENS where-base
method-header -> attributes type-with-interr member-name .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> type-with-interr member-name .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET 
transitions ->  {"SEMICOLON":1066,"OPEN_BRACE":1067,"OPEN_PARENS":1068,"OPEN_BRACKET":919}

item set 901 
event-declaration -> attributes EVENT type-with-interr .variable-declarators SEMICOLON
event-declaration -> attributes EVENT type-with-interr .member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
member-name -> .variable-declarators
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"variable-declarators":1069,"member-name":1070,"variable-declarator":723,"type-name":724,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 902 
indexer-declaration -> attributes indexer-declarator OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1071,"get-accessor-declaration":926,"set-accessor-declaration":927,"attributes":928,"modifiers":929,"GET":930,"SET":931,"attribute-sections":29,"modifier":30,"attribute-section":31,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47,"OPEN_BRACKET":53}

item set 903 
constructor-declaration -> attributes constructor-declarator method-body . 
transitions ->  {}

item set 904 
destructor-declaration -> attributes TILDE IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body 
transitions ->  {"OPEN_PARENS":1072}

item set 905 
destructor-declaration -> attributes EXTERN TILDE .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1073,"IDENTIFIER":59}

item set 906 
constant-declaration -> modifiers CONST type-with-interr .constant-declarators SEMICOLON
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"constant-declarators":1074,"constant-declarator":890,"IDENTIFIER_WITH_TEMPLATE":891,"IDENTIFIER":59}

item set 907 
field-declaration -> modifiers type-with-interr member-name .SEMICOLON
property-declaration -> modifiers type-with-interr member-name .OPEN_BRACE accessor-declarations CLOSE_BRACE
method-header -> modifiers type-with-interr member-name .OPEN_PARENS CLOSE_PARENS where-base
method-header -> modifiers type-with-interr member-name .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> type-with-interr member-name .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET 
transitions ->  {"SEMICOLON":1075,"OPEN_BRACE":1076,"OPEN_PARENS":1077,"OPEN_BRACKET":919}

item set 908 
unary-operator-declarator -> type-with-interr OPERATOR .overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr OPERATOR .overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
overloadable-operator -> .overloadable-unary-operator
overloadable-operator -> .overloadable-binary-operator
overloadable-unary-operator -> .OP_INC
overloadable-unary-operator -> .OP_DEC
overloadable-unary-operator -> .MINUS
overloadable-unary-operator -> .BANG
overloadable-unary-operator -> .TILDE
overloadable-unary-operator -> .PLUS
overloadable-unary-operator -> .TRUE
overloadable-unary-operator -> .FALSE
overloadable-binary-operator -> .PLUS
overloadable-binary-operator -> .MINUS
overloadable-binary-operator -> .STAR
overloadable-binary-operator -> .DIV
overloadable-binary-operator -> .PERCENT
overloadable-binary-operator -> .AMP
overloadable-binary-operator -> .BITWISE_OR
overloadable-binary-operator -> .CARET
overloadable-binary-operator -> .OP_LEFT_SHIFT
overloadable-binary-operator -> .RIGHT_SHIFT
overloadable-binary-operator -> .OP_EQ
overloadable-binary-operator -> .OP_NE
overloadable-binary-operator -> .OP_GE
overloadable-binary-operator -> .OP_LE
overloadable-binary-operator -> .GT
overloadable-binary-operator -> .LT 
transitions ->  {"overloadable-operator":1078,"overloadable-unary-operator":1079,"overloadable-binary-operator":1080,"OP_INC":1081,"OP_DEC":1082,"MINUS":1083,"BANG":1084,"TILDE":1085,"PLUS":1086,"TRUE":1087,"FALSE":1088,"STAR":1089,"DIV":1090,"PERCENT":1091,"AMP":1092,"BITWISE_OR":1093,"CARET":1094,"OP_LEFT_SHIFT":1095,"RIGHT_SHIFT":1096,"OP_EQ":1097,"OP_NE":1098,"OP_GE":1099,"OP_LE":1100,"GT":1101,"LT":1102}

item set 909 
event-declaration -> modifiers EVENT type-with-interr .variable-declarators SEMICOLON
event-declaration -> modifiers EVENT type-with-interr .member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
member-name -> .variable-declarators
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"variable-declarators":1103,"member-name":1104,"variable-declarator":723,"type-name":724,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 910 
indexer-declaration -> modifiers indexer-declarator OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1105,"get-accessor-declaration":926,"set-accessor-declaration":927,"attributes":928,"modifiers":929,"GET":930,"SET":931,"attribute-sections":29,"modifier":30,"attribute-section":31,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47,"OPEN_BRACKET":53}

item set 911 
operator-declaration -> modifiers operator-declarator method-body . 
transitions ->  {}

item set 912 
constructor-declaration -> modifiers constructor-declarator method-body . 
transitions ->  {}

item set 913 
static-constructor-declaration -> modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS constructor-initializer
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1106,"formal-parameter-list":935,"fixed-parameters":525,"parameter-array":526,"fixed-parameter":527,"PARAMS":528,"attributes":529,"type-with-interr":530,"THIS":531,"parameter-modifier":532,"attribute-sections":29,"type":114,"REF":533,"OUT":534,"attribute-section":31,"non-array-type":115,"array-type":116,"OPEN_BRACKET":53,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 914 
conversion-operator-declarator -> IMPLICIT OPERATOR .type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> IMPLICIT OPERATOR .type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1107,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 915 
conversion-operator-declarator -> EXPLICIT OPERATOR .type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> EXPLICIT OPERATOR .type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1108,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 916 
field-declaration -> type-with-interr member-name SEMICOLON . 
transitions ->  {}

item set 917 
property-declaration -> type-with-interr member-name OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1109,"get-accessor-declaration":926,"set-accessor-declaration":927,"attributes":928,"modifiers":929,"GET":930,"SET":931,"attribute-sections":29,"modifier":30,"attribute-section":31,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47,"OPEN_BRACKET":53}

item set 918 
method-header -> type-with-interr member-name OPEN_PARENS .CLOSE_PARENS where-base
method-header -> type-with-interr member-name OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1110,"formal-parameter-list":1111,"fixed-parameters":525,"parameter-array":526,"fixed-parameter":527,"PARAMS":528,"attributes":529,"type-with-interr":530,"THIS":531,"parameter-modifier":532,"attribute-sections":29,"type":114,"REF":533,"OUT":534,"attribute-section":31,"non-array-type":115,"array-type":116,"OPEN_BRACKET":53,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 919 
indexer-declarator -> type-with-interr member-name OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1112,"fixed-parameters":525,"parameter-array":526,"fixed-parameter":527,"PARAMS":528,"attributes":529,"type-with-interr":530,"THIS":531,"parameter-modifier":532,"attribute-sections":29,"type":114,"REF":533,"OUT":534,"attribute-section":31,"non-array-type":115,"array-type":116,"OPEN_BRACKET":53,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 920 
indexer-declarator -> type-with-interr THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1113,"fixed-parameters":525,"parameter-array":526,"fixed-parameter":527,"PARAMS":528,"attributes":529,"type-with-interr":530,"THIS":531,"parameter-modifier":532,"attribute-sections":29,"type":114,"REF":533,"OUT":534,"attribute-section":31,"non-array-type":115,"array-type":116,"OPEN_BRACKET":53,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 921 
variable-declarators -> variable-declarators COMMA .variable-declarator
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"variable-declarator":1114,"type-name":724,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 922 
variable-declarator -> type-name ASSIGN .variable-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"variable-initializer":1115,"expression":858,"array-initializer":859,"conditional-expression":209,"assignment":210,"OPEN_BRACE":640,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 923 
event-declaration -> EVENT type-with-interr variable-declarators .SEMICOLON
variable-declarators -> variable-declarators .COMMA variable-declarator
member-name -> variable-declarators . 
transitions ->  {"SEMICOLON":1116,"COMMA":921}

item set 924 
event-declaration -> EVENT type-with-interr member-name .OPEN_BRACE event-accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1117}

item set 925 
indexer-declaration -> indexer-declarator OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1118}

item set 926 
accessor-declarations -> get-accessor-declaration .
accessor-declarations -> get-accessor-declaration .set-accessor-declaration
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"set-accessor-declaration":1119,"attributes":1120,"modifiers":1121,"SET":931,"attribute-sections":29,"modifier":30,"attribute-section":31,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47,"OPEN_BRACKET":53}

item set 927 
accessor-declarations -> set-accessor-declaration .
accessor-declarations -> set-accessor-declaration .get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"get-accessor-declaration":1122,"attributes":1123,"modifiers":1124,"GET":930,"attribute-sections":29,"modifier":30,"attribute-section":31,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47,"OPEN_BRACKET":53}

item set 928 
get-accessor-declaration -> attributes .modifiers GET method-body
get-accessor-declaration -> attributes .GET method-body
set-accessor-declaration -> attributes .modifiers SET method-body
set-accessor-declaration -> attributes .SET method-body
modifiers -> .modifier
modifiers -> .modifiers modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"modifiers":1125,"GET":1126,"SET":1127,"modifier":30,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47}

item set 929 
get-accessor-declaration -> modifiers .GET method-body
set-accessor-declaration -> modifiers .SET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"GET":1128,"SET":1129,"modifier":109,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47}

item set 930 
get-accessor-declaration -> GET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1130,"block":728,"SEMICOLON":729,"OPEN_BRACE":382}

item set 931 
set-accessor-declaration -> SET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1131,"block":728,"SEMICOLON":729,"OPEN_BRACE":382}

item set 932 
destructor-declaration -> TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body 
transitions ->  {"CLOSE_PARENS":1132}

item set 933 
destructor-declaration -> EXTERN TILDE IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body 
transitions ->  {"OPEN_PARENS":1133}

item set 934 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .constructor-initializer
constructor-initializer -> .COLON BASE OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON BASE OPEN_PARENS argument-list CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS argument-list CLOSE_PARENS 
transitions ->  {"constructor-initializer":1134,"COLON":1135}

item set 935 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS constructor-initializer 
transitions ->  {"CLOSE_PARENS":1136}

item set 936 
where-base -> where-units COMMA NEW OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 937 
where-names -> where-names COMMA .where-name
where-name -> .type-name
where-name -> .type
where-name -> .CLASS
where-name -> .STRUCT
where-name -> .NEW OPEN_PARENS CLOSE_PARENS
type-name -> .namespace-or-type-name
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"where-name":1137,"type-name":739,"type":740,"CLASS":741,"STRUCT":742,"NEW":743,"namespace-or-type-name":94,"non-array-type":115,"array-type":116,"IDENTIFIER_WITH_KEYWORD":61,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 938 
where-name -> NEW OPEN_PARENS .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1138}

item set 939 
class-declaration -> attributes CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON . 
transitions ->  {}

item set 940 
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE where-base class-body SEMICOLON . 
transitions ->  {}

item set 941 
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body .
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body .SEMICOLON 
transitions ->  {"SEMICOLON":1139}

item set 942 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE where-base struct-body SEMICOLON . 
transitions ->  {}

item set 943 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body .SEMICOLON 
transitions ->  {"SEMICOLON":1140}

item set 944 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE where-base interface-body SEMICOLON . 
transitions ->  {}

item set 945 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body .SEMICOLON 
transitions ->  {"SEMICOLON":1141}

item set 946 
enum-declaration -> attributes modifiers ENUM IDENTIFIER_WITH_TEMPLATE enum-base enum-body SEMICOLON . 
transitions ->  {}

item set 947 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1142,"where-units":155,"where-unit":157,"WHERE":158}

item set 948 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1143}

item set 949 
struct-declaration -> attributes STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON . 
transitions ->  {}

item set 950 
interface-declaration -> attributes INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON . 
transitions ->  {}

item set 951 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1144}

item set 952 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1145,"where-units":155,"where-unit":157,"WHERE":158}

item set 953 
class-declaration -> modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON . 
transitions ->  {}

item set 954 
struct-declaration -> modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON . 
transitions ->  {}

item set 955 
interface-declaration -> modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON . 
transitions ->  {}

item set 956 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1146}

item set 957 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1147,"where-units":155,"where-unit":157,"WHERE":158}

item set 958 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1148,"formal-parameter-list":1149,"fixed-parameters":525,"parameter-array":526,"fixed-parameter":527,"PARAMS":528,"attributes":529,"type-with-interr":530,"THIS":531,"parameter-modifier":532,"attribute-sections":29,"type":114,"REF":533,"OUT":534,"attribute-section":31,"non-array-type":115,"array-type":116,"OPEN_BRACKET":53,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 959 
interface-property-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1150,"attributes":1151,"SET":1152,"GET":1153,"attribute-sections":29,"attribute-section":31,"OPEN_BRACKET":53}

item set 960 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1154,"fixed-parameters":525,"parameter-array":526,"fixed-parameter":527,"PARAMS":528,"attributes":529,"type-with-interr":530,"THIS":531,"parameter-modifier":532,"attribute-sections":29,"type":114,"REF":533,"OUT":534,"attribute-section":31,"non-array-type":115,"array-type":116,"OPEN_BRACKET":53,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 961 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_PARENS":1155,"OPEN_BRACE":1156}

item set 962 
interface-indexer-declaration -> attributes type-with-interr THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACKET":1157}

item set 963 
interface-method-declaration -> attributes NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes NEW type-with-interr .IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE
interface-indexer-declaration -> attributes NEW type-with-interr .THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1158,"THIS":1159,"IDENTIFIER":59}

item set 964 
interface-event-declaration -> attributes NEW EVENT .type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1160,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 965 
interface-event-declaration -> attributes EVENT type-with-interr .IDENTIFIER_WITH_TEMPLATE SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1161,"IDENTIFIER":59}

item set 966 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_PARENS":1162,"OPEN_BRACE":1163}

item set 967 
interface-indexer-declaration -> NEW type-with-interr THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACKET":1164}

item set 968 
interface-event-declaration -> NEW EVENT type-with-interr .IDENTIFIER_WITH_TEMPLATE SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1165,"IDENTIFIER":59}

item set 969 
interface-event-declaration -> EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE .SEMICOLON 
transitions ->  {"SEMICOLON":1166}

item set 970 
enum-member-declaration -> attributes IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression . 
transitions ->  {}

item set 971 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 972 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1167}

item set 973 
formal-parameter-list -> fixed-parameters COMMA parameter-array . 
transitions ->  {}

item set 974 
fixed-parameters -> fixed-parameters COMMA fixed-parameter . 
transitions ->  {}

item set 975 
parameter-array -> PARAMS array-type IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {}

item set 976 
parameter-array -> attributes PARAMS array-type .IDENTIFIER_WITH_TEMPLATE
type -> array-type .STARS
type -> array-type .
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
STARS -> .STARS STAR
STARS -> .STAR 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1168,"STARS":191,"IDENTIFIER":59,"STAR":190}

item set 977 
fixed-parameter -> attributes type-with-interr IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 978 
fixed-parameter -> attributes parameter-modifier type-with-interr .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":1169,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 979 
fixed-parameter -> type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1170,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 980 
fixed-parameter -> THIS type-with-interr IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 981 
fixed-parameter -> parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 982 
conditional-expression -> conditional-or-expression INTERR expression COLON expression . 
transitions ->  {}

item set 983 
argument-list -> argument-list COLON argument . 
transitions ->  {}

item set 984 
argument-list -> argument-list COMMA argument . 
transitions ->  {}

item set 985 
delegate-expression -> DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block . 
transitions ->  {}

item set 986 
labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON switch-labels .
switch-labels -> switch-labels .switch-label
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON 
transitions ->  {"switch-label":1171,"CASE":989,"DEFAULT":1172}

item set 987 
labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON statement . 
transitions ->  {}

item set 988 
switch-labels -> switch-label . 
transitions ->  {}

item set 989 
switch-label -> CASE .constant-expression COLON
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":1173,"expression":788,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 990 
switch-label -> DEFAULT .COLON
IDENTIFIER_WITH_KEYWORD -> DEFAULT . 
transitions ->  {"COLON":1174}

item set 991 
local-variable-declarators -> local-variable-declarators COMMA .local-variable-declarator
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"local-variable-declarator":1175,"local-variable":821,"INTERR":822,"STARS":823,"IDENTIFIER_WITH_KEYWORD":824,"STAR":190,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 992 
local-variable-declarator -> local-variable ASSIGN .local-variable-initializer
local-variable-initializer -> .expression
local-variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"local-variable-initializer":1176,"expression":1177,"array-initializer":1178,"conditional-expression":209,"assignment":210,"OPEN_BRACE":640,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 993 
local-variable -> INTERR IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 994 
local-variable -> STARS IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 995 
local-constant-declaration -> CONST type constant-declarators .
constant-declarators -> constant-declarators .COMMA constant-declarator
constant-declarators -> constant-declarators .COMMA constant-declarator 
transitions ->  {"COMMA":1056}

item set 996 
try-statement -> TRY block catch-clauses .
try-statement -> TRY block catch-clauses .finally-clause
finally-clause -> .FINALLY block 
transitions ->  {"finally-clause":1179,"FINALLY":1000}

item set 997 
try-statement -> TRY block finally-clause . 
transitions ->  {}

item set 998 
catch-clauses -> specific-catch-clauses .
catch-clauses -> specific-catch-clauses .general-catch-clause
specific-catch-clauses -> specific-catch-clauses .specific-catch-clause
general-catch-clause -> .CATCH block
specific-catch-clause -> .CATCH OPEN_PARENS type CLOSE_PARENS block
specific-catch-clause -> .CATCH OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block 
transitions ->  {"general-catch-clause":1180,"specific-catch-clause":1181,"CATCH":1002}

item set 999 
catch-clauses -> general-catch-clause . 
transitions ->  {}

item set 1000 
finally-clause -> FINALLY .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1182,"OPEN_BRACE":382}

item set 1001 
specific-catch-clauses -> specific-catch-clause . 
transitions ->  {}

item set 1002 
general-catch-clause -> CATCH .block
specific-catch-clause -> CATCH .OPEN_PARENS type CLOSE_PARENS block
specific-catch-clause -> CATCH .OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1183,"OPEN_PARENS":1184,"OPEN_BRACE":382}

item set 1003 
lock-statement -> LOCK OPEN_PARENS expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1185}

item set 1004 
using-statement -> USING OPEN_PARENS resource-acquisition .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1186}

item set 1005 
resource-acquisition -> local-variable-declaration . 
transitions ->  {}

item set 1006 
resource-acquisition -> expression . 
transitions ->  {}

item set 1007 
fixed-statement -> modifiers FIXED OPEN_PARENS .type local-variable-declarators CLOSE_PARENS embedded-statement
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":1187,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 1008 
fixed-statement -> FIXED OPEN_PARENS type .local-variable-declarators CLOSE_PARENS embedded-statement
array-type -> type .rank-specifiers
local-variable-declarators -> .local-variable-declarators COMMA local-variable-declarator
local-variable-declarators -> .local-variable-declarator
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"local-variable-declarators":1188,"rank-specifiers":186,"local-variable-declarator":820,"rank-specifier":187,"local-variable":821,"OPEN_BRACKET":188,"INTERR":822,"STARS":823,"IDENTIFIER_WITH_KEYWORD":824,"STAR":190,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 1009 
if-statement -> IF OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement
if-statement -> IF OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement ELSE embedded-statement 
transitions ->  {"CLOSE_PARENS":1189}

item set 1010 
boolean-expression -> expression .
boolean-expression -> expression . 
transitions ->  {}

item set 1011 
switch-statement -> SWITCH OPEN_PARENS expression .CLOSE_PARENS switch-block 
transitions ->  {"CLOSE_PARENS":1190}

item set 1012 
while-statement -> WHILE OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1191}

item set 1013 
do-statement -> DO embedded-statement WHILE .OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON 
transitions ->  {"OPEN_PARENS":1192}

item set 1014 
for-statement -> FOR OPEN_PARENS SEMICOLON .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-condition -> .boolean-expression
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":1193,"for-condition":1194,"boolean-expression":1195,"expression":1010,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 1015 
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":1196}

item set 1016 
for-initializer -> local-variable-declaration . 
transitions ->  {}

item set 1017 
for-initializer -> statement-expression-list .
statement-expression-list -> statement-expression-list .COMMA statement-expression 
transitions ->  {"COMMA":1197}

item set 1018 
statement-expression-list -> statement-expression . 
transitions ->  {}

item set 1019 
foreach-statement -> FOREACH OPEN_PARENS type .IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
array-type -> type .rank-specifiers
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"IDENTIFIER_WITH_KEYWORD":1198,"rank-specifiers":186,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"rank-specifier":187,"IDENTIFIER":59,"OPEN_BRACKET":188}

item set 1020 
break-statement -> YIELD BREAK SEMICOLON . 
transitions ->  {}

item set 1021 
return-statement -> YIELD RETURN block-expression-with-brace .SEMICOLON 
transitions ->  {"SEMICOLON":1199}

item set 1022 
return-statement -> YIELD RETURN expression .SEMICOLON 
transitions ->  {"SEMICOLON":1200}

item set 1023 
return-statement -> YIELD RETURN SEMICOLON . 
transitions ->  {}

item set 1024 
goto-statement -> GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON . 
transitions ->  {}

item set 1025 
goto-statement -> GOTO CASE constant-expression .SEMICOLON 
transitions ->  {"SEMICOLON":1201}

item set 1026 
goto-statement -> GOTO DEFAULT SEMICOLON . 
transitions ->  {}

item set 1027 
return-statement -> RETURN block-expression-with-brace SEMICOLON . 
transitions ->  {}

item set 1028 
return-statement -> RETURN expression SEMICOLON . 
transitions ->  {}

item set 1029 
throw-statement -> THROW expression SEMICOLON . 
transitions ->  {}

item set 1030 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace . 
transitions ->  {}

item set 1031 
argument-list-with-brace -> OPEN_BRACE .argument-list COMMA CLOSE_BRACE
argument-list-with-brace -> OPEN_BRACE .argument-list CLOSE_BRACE
argument-list-with-brace -> OPEN_BRACE .CLOSE_BRACE
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument-list":1202,"CLOSE_BRACE":1203,"argument":555,"expression":556,"REF":557,"OUT":558,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 1032 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .rank-specifiers
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .array-initializer
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .rank-specifiers array-initializer
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"rank-specifiers":1204,"array-initializer":1205,"rank-specifier":187,"OPEN_BRACE":640,"OPEN_BRACKET":188}

item set 1033 
array-initializer -> OPEN_BRACE variable-initializer-list CLOSE_BRACE . 
transitions ->  {}

item set 1034 
array-initializer -> OPEN_BRACE variable-initializer-list COMMA .CLOSE_BRACE
variable-initializer-list -> variable-initializer-list COMMA .variable-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACE":1206,"variable-initializer":1207,"expression":858,"array-initializer":859,"conditional-expression":209,"assignment":210,"OPEN_BRACE":640,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 1035 
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression . 
transitions ->  {}

item set 1036 
lambda-expression -> OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block . 
transitions ->  {}

item set 1037 
dbl-expression-list -> dbl-expression-list COMMA expression expression . 
transitions ->  {}

item set 1038 
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression . 
transitions ->  {}

item set 1039 
lambda-expression -> OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block . 
transitions ->  {}

item set 1040 
type-expression-list -> type-expression-list COMMA type expression . 
transitions ->  {}

item set 1041 
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression . 
transitions ->  {}

item set 1042 
lambda-expression -> OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block . 
transitions ->  {}

item set 1043 
cast-expression -> OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR .expression block
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1208,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 1044 
cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression .block
cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression .
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1209,"OPEN_BRACE":382}

item set 1045 
delegate-creation-expression -> NEW type OPEN_PARENS argument-list CLOSE_PARENS .block-expression-with-brace
delegate-creation-expression -> NEW type OPEN_PARENS argument-list CLOSE_PARENS .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":1210,"OPEN_BRACE":403}

item set 1046 
delegate-creation-expression -> NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace . 
transitions ->  {}

item set 1047 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS .invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS .invocation-expressions IDENTIFIER_WITH_DOT
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"invocation-expressions":1211,"invocation-expression":261,"AWAIT":272,"primary-expression":543,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 1048 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions .IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions .IDENTIFIER_WITH_DOT
invocation-expressions -> invocation-expressions .DOT invocation-expression
primary-no-array-creation-expression -> invocation-expressions .
member-access -> invocation-expressions .DOT IDENTIFIER_WITH_KEYWORD
member-access -> invocation-expressions .OP_PTR IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_DOT -> .DOT IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_DOT -> . 
transitions ->  {"IDENTIFIER_WITH_DOT":1212,"DOT":1213,"OP_PTR":378}

item set 1049 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace . 
transitions ->  {}

item set 1050 
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET .block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":1214,"OPEN_BRACE":403}

item set 1051 
object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET .block-expression-with-brace
object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":1215,"OPEN_BRACE":403}

item set 1052 
block-expression-list -> block-expression-list COMMA block-expression-list-unit . 
transitions ->  {}

item set 1053 
invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS .
invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS . 
transitions ->  {}

item set 1054 
invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS .
invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 1055 
constant-declaration -> CONST type-with-interr constant-declarators SEMICOLON . 
transitions ->  {}

item set 1056 
constant-declarators -> constant-declarators COMMA .constant-declarator
constant-declarators -> constant-declarators COMMA .constant-declarator
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"constant-declarator":1216,"IDENTIFIER_WITH_TEMPLATE":891,"IDENTIFIER":59}

item set 1057 
constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN .constant-expression
constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN .constant-expression
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":1217,"expression":788,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 1058 
constant-declaration -> attributes CONST type-with-interr constant-declarators .SEMICOLON
constant-declarators -> constant-declarators .COMMA constant-declarator
constant-declarators -> constant-declarators .COMMA constant-declarator 
transitions ->  {"SEMICOLON":1218,"COMMA":1056}

item set 1059 
constant-declaration -> attributes modifiers CONST type-with-interr .constant-declarators SEMICOLON
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
constant-declarator -> .IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"constant-declarators":1219,"constant-declarator":890,"IDENTIFIER_WITH_TEMPLATE":891,"IDENTIFIER":59}

item set 1060 
field-declaration -> attributes modifiers type-with-interr member-name .SEMICOLON
property-declaration -> attributes modifiers type-with-interr member-name .OPEN_BRACE accessor-declarations CLOSE_BRACE
method-header -> attributes modifiers type-with-interr member-name .OPEN_PARENS CLOSE_PARENS where-base
method-header -> attributes modifiers type-with-interr member-name .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base
indexer-declarator -> type-with-interr member-name .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET 
transitions ->  {"SEMICOLON":1220,"OPEN_BRACE":1221,"OPEN_PARENS":1222,"OPEN_BRACKET":919}

item set 1061 
event-declaration -> attributes modifiers EVENT type-with-interr .variable-declarators SEMICOLON
event-declaration -> attributes modifiers EVENT type-with-interr .member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE
variable-declarators -> .variable-declarators COMMA variable-declarator
variable-declarators -> .variable-declarator
member-name -> .variable-declarators
variable-declarator -> .type-name ASSIGN variable-initializer
variable-declarator -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"variable-declarators":1223,"member-name":1224,"variable-declarator":723,"type-name":724,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 1062 
indexer-declaration -> attributes modifiers indexer-declarator OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1225,"get-accessor-declaration":926,"set-accessor-declaration":927,"attributes":928,"modifiers":929,"GET":930,"SET":931,"attribute-sections":29,"modifier":30,"attribute-section":31,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47,"OPEN_BRACKET":53}

item set 1063 
operator-declaration -> attributes modifiers operator-declarator method-body . 
transitions ->  {}

item set 1064 
constructor-declaration -> attributes modifiers constructor-declarator method-body . 
transitions ->  {}

item set 1065 
static-constructor-declaration -> attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS constructor-initializer
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS constructor-initializer
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1226,"formal-parameter-list":935,"fixed-parameters":525,"parameter-array":526,"fixed-parameter":527,"PARAMS":528,"attributes":529,"type-with-interr":530,"THIS":531,"parameter-modifier":532,"attribute-sections":29,"type":114,"REF":533,"OUT":534,"attribute-section":31,"non-array-type":115,"array-type":116,"OPEN_BRACKET":53,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 1066 
field-declaration -> attributes type-with-interr member-name SEMICOLON . 
transitions ->  {}

item set 1067 
property-declaration -> attributes type-with-interr member-name OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1227,"get-accessor-declaration":926,"set-accessor-declaration":927,"attributes":928,"modifiers":929,"GET":930,"SET":931,"attribute-sections":29,"modifier":30,"attribute-section":31,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47,"OPEN_BRACKET":53}

item set 1068 
method-header -> attributes type-with-interr member-name OPEN_PARENS .CLOSE_PARENS where-base
method-header -> attributes type-with-interr member-name OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1228,"formal-parameter-list":1229,"fixed-parameters":525,"parameter-array":526,"fixed-parameter":527,"PARAMS":528,"attributes":529,"type-with-interr":530,"THIS":531,"parameter-modifier":532,"attribute-sections":29,"type":114,"REF":533,"OUT":534,"attribute-section":31,"non-array-type":115,"array-type":116,"OPEN_BRACKET":53,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 1069 
event-declaration -> attributes EVENT type-with-interr variable-declarators .SEMICOLON
variable-declarators -> variable-declarators .COMMA variable-declarator
member-name -> variable-declarators . 
transitions ->  {"SEMICOLON":1230,"COMMA":921}

item set 1070 
event-declaration -> attributes EVENT type-with-interr member-name .OPEN_BRACE event-accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1231}

item set 1071 
indexer-declaration -> attributes indexer-declarator OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1232}

item set 1072 
destructor-declaration -> attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body 
transitions ->  {"CLOSE_PARENS":1233}

item set 1073 
destructor-declaration -> attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS method-body 
transitions ->  {"OPEN_PARENS":1234}

item set 1074 
constant-declaration -> modifiers CONST type-with-interr constant-declarators .SEMICOLON
constant-declarators -> constant-declarators .COMMA constant-declarator
constant-declarators -> constant-declarators .COMMA constant-declarator 
transitions ->  {"SEMICOLON":1235,"COMMA":1056}

item set 1075 
field-declaration -> modifiers type-with-interr member-name SEMICOLON . 
transitions ->  {}

item set 1076 
property-declaration -> modifiers type-with-interr member-name OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1236,"get-accessor-declaration":926,"set-accessor-declaration":927,"attributes":928,"modifiers":929,"GET":930,"SET":931,"attribute-sections":29,"modifier":30,"attribute-section":31,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47,"OPEN_BRACKET":53}

item set 1077 
method-header -> modifiers type-with-interr member-name OPEN_PARENS .CLOSE_PARENS where-base
method-header -> modifiers type-with-interr member-name OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1237,"formal-parameter-list":1238,"fixed-parameters":525,"parameter-array":526,"fixed-parameter":527,"PARAMS":528,"attributes":529,"type-with-interr":530,"THIS":531,"parameter-modifier":532,"attribute-sections":29,"type":114,"REF":533,"OUT":534,"attribute-section":31,"non-array-type":115,"array-type":116,"OPEN_BRACKET":53,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 1078 
unary-operator-declarator -> type-with-interr OPERATOR overloadable-operator .OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator .OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":1239}

item set 1079 
overloadable-operator -> overloadable-unary-operator . 
transitions ->  {}

item set 1080 
overloadable-operator -> overloadable-binary-operator . 
transitions ->  {}

item set 1081 
overloadable-unary-operator -> OP_INC . 
transitions ->  {}

item set 1082 
overloadable-unary-operator -> OP_DEC . 
transitions ->  {}

item set 1083 
overloadable-unary-operator -> MINUS .
overloadable-binary-operator -> MINUS . 
transitions ->  {}

item set 1084 
overloadable-unary-operator -> BANG . 
transitions ->  {}

item set 1085 
overloadable-unary-operator -> TILDE . 
transitions ->  {}

item set 1086 
overloadable-unary-operator -> PLUS .
overloadable-binary-operator -> PLUS . 
transitions ->  {}

item set 1087 
overloadable-unary-operator -> TRUE . 
transitions ->  {}

item set 1088 
overloadable-unary-operator -> FALSE . 
transitions ->  {}

item set 1089 
overloadable-binary-operator -> STAR . 
transitions ->  {}

item set 1090 
overloadable-binary-operator -> DIV . 
transitions ->  {}

item set 1091 
overloadable-binary-operator -> PERCENT . 
transitions ->  {}

item set 1092 
overloadable-binary-operator -> AMP . 
transitions ->  {}

item set 1093 
overloadable-binary-operator -> BITWISE_OR . 
transitions ->  {}

item set 1094 
overloadable-binary-operator -> CARET . 
transitions ->  {}

item set 1095 
overloadable-binary-operator -> OP_LEFT_SHIFT . 
transitions ->  {}

item set 1096 
overloadable-binary-operator -> RIGHT_SHIFT . 
transitions ->  {}

item set 1097 
overloadable-binary-operator -> OP_EQ . 
transitions ->  {}

item set 1098 
overloadable-binary-operator -> OP_NE . 
transitions ->  {}

item set 1099 
overloadable-binary-operator -> OP_GE . 
transitions ->  {}

item set 1100 
overloadable-binary-operator -> OP_LE . 
transitions ->  {}

item set 1101 
overloadable-binary-operator -> GT . 
transitions ->  {}

item set 1102 
overloadable-binary-operator -> LT . 
transitions ->  {}

item set 1103 
event-declaration -> modifiers EVENT type-with-interr variable-declarators .SEMICOLON
variable-declarators -> variable-declarators .COMMA variable-declarator
member-name -> variable-declarators . 
transitions ->  {"SEMICOLON":1240,"COMMA":921}

item set 1104 
event-declaration -> modifiers EVENT type-with-interr member-name .OPEN_BRACE event-accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1241}

item set 1105 
indexer-declaration -> modifiers indexer-declarator OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1242}

item set 1106 
static-constructor-declaration -> modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .constructor-initializer
method-body -> .block
method-body -> .SEMICOLON
constructor-initializer -> .COLON BASE OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON BASE OPEN_PARENS argument-list CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS argument-list CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1243,"constructor-initializer":1134,"block":728,"SEMICOLON":729,"COLON":1135,"OPEN_BRACE":382}

item set 1107 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr .OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr .OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":1244}

item set 1108 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr .OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr .OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":1245}

item set 1109 
property-declaration -> type-with-interr member-name OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1246}

item set 1110 
method-header -> type-with-interr member-name OPEN_PARENS CLOSE_PARENS .where-base
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1247,"where-units":155,"where-unit":157,"WHERE":158}

item set 1111 
method-header -> type-with-interr member-name OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base 
transitions ->  {"CLOSE_PARENS":1248}

item set 1112 
indexer-declarator -> type-with-interr member-name OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACKET":1249}

item set 1113 
indexer-declarator -> type-with-interr THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET 
transitions ->  {"CLOSE_BRACKET":1250}

item set 1114 
variable-declarators -> variable-declarators COMMA variable-declarator . 
transitions ->  {}

item set 1115 
variable-declarator -> type-name ASSIGN variable-initializer . 
transitions ->  {}

item set 1116 
event-declaration -> EVENT type-with-interr variable-declarators SEMICOLON . 
transitions ->  {}

item set 1117 
event-declaration -> EVENT type-with-interr member-name OPEN_BRACE .event-accessor-declarations CLOSE_BRACE
event-accessor-declarations -> .add-accessor-declaration remove-accessor-declaration
event-accessor-declarations -> .remove-accessor-declaration add-accessor-declaration
add-accessor-declaration -> .ADD block
add-accessor-declaration -> .attributes ADD block
remove-accessor-declaration -> .REMOVE block
remove-accessor-declaration -> .attributes REMOVE block
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"event-accessor-declarations":1251,"add-accessor-declaration":1252,"remove-accessor-declaration":1253,"ADD":1254,"attributes":1255,"REMOVE":1256,"attribute-sections":29,"attribute-section":31,"OPEN_BRACKET":53}

item set 1118 
indexer-declaration -> indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1119 
accessor-declarations -> get-accessor-declaration set-accessor-declaration . 
transitions ->  {}

item set 1120 
set-accessor-declaration -> attributes .modifiers SET method-body
set-accessor-declaration -> attributes .SET method-body
modifiers -> .modifier
modifiers -> .modifiers modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"modifiers":1257,"SET":1127,"modifier":30,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47}

item set 1121 
set-accessor-declaration -> modifiers .SET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"SET":1129,"modifier":109,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47}

item set 1122 
accessor-declarations -> set-accessor-declaration get-accessor-declaration . 
transitions ->  {}

item set 1123 
get-accessor-declaration -> attributes .modifiers GET method-body
get-accessor-declaration -> attributes .GET method-body
modifiers -> .modifier
modifiers -> .modifiers modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"modifiers":1258,"GET":1126,"modifier":30,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47}

item set 1124 
get-accessor-declaration -> modifiers .GET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"GET":1128,"modifier":109,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47}

item set 1125 
get-accessor-declaration -> attributes modifiers .GET method-body
set-accessor-declaration -> attributes modifiers .SET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"GET":1259,"SET":1260,"modifier":109,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47}

item set 1126 
get-accessor-declaration -> attributes GET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1261,"block":728,"SEMICOLON":729,"OPEN_BRACE":382}

item set 1127 
set-accessor-declaration -> attributes SET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1262,"block":728,"SEMICOLON":729,"OPEN_BRACE":382}

item set 1128 
get-accessor-declaration -> modifiers GET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1263,"block":728,"SEMICOLON":729,"OPEN_BRACE":382}

item set 1129 
set-accessor-declaration -> modifiers SET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1264,"block":728,"SEMICOLON":729,"OPEN_BRACE":382}

item set 1130 
get-accessor-declaration -> GET method-body . 
transitions ->  {}

item set 1131 
set-accessor-declaration -> SET method-body . 
transitions ->  {}

item set 1132 
destructor-declaration -> TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1265,"block":728,"SEMICOLON":729,"OPEN_BRACE":382}

item set 1133 
destructor-declaration -> EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body 
transitions ->  {"CLOSE_PARENS":1266}

item set 1134 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS constructor-initializer . 
transitions ->  {}

item set 1135 
constructor-initializer -> COLON .BASE OPEN_PARENS CLOSE_PARENS
constructor-initializer -> COLON .BASE OPEN_PARENS argument-list CLOSE_PARENS
constructor-initializer -> COLON .THIS OPEN_PARENS CLOSE_PARENS
constructor-initializer -> COLON .THIS OPEN_PARENS argument-list CLOSE_PARENS 
transitions ->  {"BASE":1267,"THIS":1268}

item set 1136 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .constructor-initializer
constructor-initializer -> .COLON BASE OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON BASE OPEN_PARENS argument-list CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS argument-list CLOSE_PARENS 
transitions ->  {"constructor-initializer":1269,"COLON":1135}

item set 1137 
where-names -> where-names COMMA where-name . 
transitions ->  {}

item set 1138 
where-name -> NEW OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 1139 
class-declaration -> attributes modifiers CLASS IDENTIFIER_WITH_TEMPLATE class-base where-base class-body SEMICOLON . 
transitions ->  {}

item set 1140 
struct-declaration -> attributes modifiers STRUCT IDENTIFIER_WITH_TEMPLATE struct-interfaces where-base struct-body SEMICOLON . 
transitions ->  {}

item set 1141 
interface-declaration -> attributes modifiers INTERFACE IDENTIFIER_WITH_TEMPLATE interface-base where-base interface-body SEMICOLON . 
transitions ->  {}

item set 1142 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1270}

item set 1143 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1271,"where-units":155,"where-unit":157,"WHERE":158}

item set 1144 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1145 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1272}

item set 1146 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1147 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1273}

item set 1148 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1274,"where-units":155,"where-unit":157,"WHERE":158}

item set 1149 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1275}

item set 1150 
interface-property-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1276}

item set 1151 
interface-accessors -> attributes .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> attributes .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> attributes .GET SEMICOLON SET SEMICOLON
interface-accessors -> attributes .SET SEMICOLON GET SEMICOLON
interface-accessors -> attributes .SET SEMICOLON
interface-accessors -> attributes .GET SEMICOLON 
transitions ->  {"GET":1277,"SET":1278}

item set 1152 
interface-accessors -> SET .SEMICOLON attributes GET SEMICOLON
interface-accessors -> SET .SEMICOLON GET SEMICOLON
interface-accessors -> SET .SEMICOLON 
transitions ->  {"SEMICOLON":1279}

item set 1153 
interface-accessors -> GET .SEMICOLON attributes SET SEMICOLON
interface-accessors -> GET .SEMICOLON SET SEMICOLON
interface-accessors -> GET .SEMICOLON 
transitions ->  {"SEMICOLON":1280}

item set 1154 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"CLOSE_BRACKET":1281}

item set 1155 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1282,"formal-parameter-list":1283,"fixed-parameters":525,"parameter-array":526,"fixed-parameter":527,"PARAMS":528,"attributes":529,"type-with-interr":530,"THIS":531,"parameter-modifier":532,"attribute-sections":29,"type":114,"REF":533,"OUT":534,"attribute-section":31,"non-array-type":115,"array-type":116,"OPEN_BRACKET":53,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 1156 
interface-property-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1284,"attributes":1151,"SET":1152,"GET":1153,"attribute-sections":29,"attribute-section":31,"OPEN_BRACKET":53}

item set 1157 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1285,"fixed-parameters":525,"parameter-array":526,"fixed-parameter":527,"PARAMS":528,"attributes":529,"type-with-interr":530,"THIS":531,"parameter-modifier":532,"attribute-sections":29,"type":114,"REF":533,"OUT":534,"attribute-section":31,"non-array-type":115,"array-type":116,"OPEN_BRACKET":53,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 1158 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON
interface-property-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_PARENS":1286,"OPEN_BRACE":1287}

item set 1159 
interface-indexer-declaration -> attributes NEW type-with-interr THIS .OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACKET":1288}

item set 1160 
interface-event-declaration -> attributes NEW EVENT type-with-interr .IDENTIFIER_WITH_TEMPLATE SEMICOLON
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1289,"IDENTIFIER":59}

item set 1161 
interface-event-declaration -> attributes EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE .SEMICOLON 
transitions ->  {"SEMICOLON":1290}

item set 1162 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1291,"formal-parameter-list":1292,"fixed-parameters":525,"parameter-array":526,"fixed-parameter":527,"PARAMS":528,"attributes":529,"type-with-interr":530,"THIS":531,"parameter-modifier":532,"attribute-sections":29,"type":114,"REF":533,"OUT":534,"attribute-section":31,"non-array-type":115,"array-type":116,"OPEN_BRACKET":53,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 1163 
interface-property-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1293,"attributes":1151,"SET":1152,"GET":1153,"attribute-sections":29,"attribute-section":31,"OPEN_BRACKET":53}

item set 1164 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1294,"fixed-parameters":525,"parameter-array":526,"fixed-parameter":527,"PARAMS":528,"attributes":529,"type-with-interr":530,"THIS":531,"parameter-modifier":532,"attribute-sections":29,"type":114,"REF":533,"OUT":534,"attribute-section":31,"non-array-type":115,"array-type":116,"OPEN_BRACKET":53,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 1165 
interface-event-declaration -> NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE .SEMICOLON 
transitions ->  {"SEMICOLON":1295}

item set 1166 
interface-event-declaration -> EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON . 
transitions ->  {}

item set 1167 
delegate-declaration -> DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1168 
parameter-array -> attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {}

item set 1169 
fixed-parameter -> attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD . 
transitions ->  {}

item set 1170 
fixed-parameter -> type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression . 
transitions ->  {}

item set 1171 
switch-labels -> switch-labels switch-label . 
transitions ->  {}

item set 1172 
switch-label -> DEFAULT .COLON 
transitions ->  {"COLON":1174}

item set 1173 
switch-label -> CASE constant-expression .COLON 
transitions ->  {"COLON":1296}

item set 1174 
switch-label -> DEFAULT COLON . 
transitions ->  {}

item set 1175 
local-variable-declarators -> local-variable-declarators COMMA local-variable-declarator . 
transitions ->  {}

item set 1176 
local-variable-declarator -> local-variable ASSIGN local-variable-initializer . 
transitions ->  {}

item set 1177 
local-variable-initializer -> expression . 
transitions ->  {}

item set 1178 
local-variable-initializer -> array-initializer . 
transitions ->  {}

item set 1179 
try-statement -> TRY block catch-clauses finally-clause . 
transitions ->  {}

item set 1180 
catch-clauses -> specific-catch-clauses general-catch-clause . 
transitions ->  {}

item set 1181 
specific-catch-clauses -> specific-catch-clauses specific-catch-clause . 
transitions ->  {}

item set 1182 
finally-clause -> FINALLY block . 
transitions ->  {}

item set 1183 
general-catch-clause -> CATCH block . 
transitions ->  {}

item set 1184 
specific-catch-clause -> CATCH OPEN_PARENS .type CLOSE_PARENS block
specific-catch-clause -> CATCH OPEN_PARENS .type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type":1297,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 1185 
lock-statement -> LOCK OPEN_PARENS expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1298,"block":581,"empty-statement":582,"statement-expression":583,"selection-statement":584,"iteration-statement":585,"jump-statement":586,"try-statement":587,"checked-statement":588,"unchecked-statement":589,"lock-statement":590,"using-statement":591,"unsafe-statement":592,"fixed-statement":593,"OPEN_BRACE":382,"SEMICOLON":597,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"if-statement":605,"switch-statement":606,"while-statement":607,"do-statement":608,"for-statement":609,"foreach-statement":610,"break-statement":611,"continue-statement":612,"goto-statement":613,"return-statement":614,"throw-statement":615,"TRY":616,"CHECKED":617,"UNCHECKED":618,"LOCK":619,"USING":620,"UNSAFE":621,"modifiers":622,"FIXED":623,"invocation-expression":261,"NEW":624,"unary-expression":625,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"IF":626,"SWITCH":627,"WHILE":628,"DO":629,"FOR":630,"FOREACH":631,"YIELD":632,"BREAK":633,"CONTINUE":634,"GOTO":635,"RETURN":636,"THROW":637,"modifier":30,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-no-array-creation-expression":227,"array-creation-expression":228,"ASYNC":456,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"THIS":262,"BASE":263,"TYPEOF":265,"SIZEOF":266,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 1186 
using-statement -> USING OPEN_PARENS resource-acquisition CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1299,"block":581,"empty-statement":582,"statement-expression":583,"selection-statement":584,"iteration-statement":585,"jump-statement":586,"try-statement":587,"checked-statement":588,"unchecked-statement":589,"lock-statement":590,"using-statement":591,"unsafe-statement":592,"fixed-statement":593,"OPEN_BRACE":382,"SEMICOLON":597,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"if-statement":605,"switch-statement":606,"while-statement":607,"do-statement":608,"for-statement":609,"foreach-statement":610,"break-statement":611,"continue-statement":612,"goto-statement":613,"return-statement":614,"throw-statement":615,"TRY":616,"CHECKED":617,"UNCHECKED":618,"LOCK":619,"USING":620,"UNSAFE":621,"modifiers":622,"FIXED":623,"invocation-expression":261,"NEW":624,"unary-expression":625,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"IF":626,"SWITCH":627,"WHILE":628,"DO":629,"FOR":630,"FOREACH":631,"YIELD":632,"BREAK":633,"CONTINUE":634,"GOTO":635,"RETURN":636,"THROW":637,"modifier":30,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-no-array-creation-expression":227,"array-creation-expression":228,"ASYNC":456,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"THIS":262,"BASE":263,"TYPEOF":265,"SIZEOF":266,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 1187 
fixed-statement -> modifiers FIXED OPEN_PARENS type .local-variable-declarators CLOSE_PARENS embedded-statement
array-type -> type .rank-specifiers
local-variable-declarators -> .local-variable-declarators COMMA local-variable-declarator
local-variable-declarators -> .local-variable-declarator
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
local-variable -> .
local-variable -> .INTERR IDENTIFIER_WITH_KEYWORD
local-variable -> .STARS IDENTIFIER_WITH_KEYWORD
local-variable -> .IDENTIFIER_WITH_KEYWORD
STARS -> .STARS STAR
STARS -> .STAR
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"local-variable-declarators":1300,"rank-specifiers":186,"local-variable-declarator":820,"rank-specifier":187,"local-variable":821,"OPEN_BRACKET":188,"INTERR":822,"STARS":823,"IDENTIFIER_WITH_KEYWORD":824,"STAR":190,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 1188 
fixed-statement -> FIXED OPEN_PARENS type local-variable-declarators .CLOSE_PARENS embedded-statement
local-variable-declarators -> local-variable-declarators .COMMA local-variable-declarator 
transitions ->  {"CLOSE_PARENS":1301,"COMMA":991}

item set 1189 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement ELSE embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1302,"block":581,"empty-statement":582,"statement-expression":583,"selection-statement":584,"iteration-statement":585,"jump-statement":586,"try-statement":587,"checked-statement":588,"unchecked-statement":589,"lock-statement":590,"using-statement":591,"unsafe-statement":592,"fixed-statement":593,"OPEN_BRACE":382,"SEMICOLON":597,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"if-statement":605,"switch-statement":606,"while-statement":607,"do-statement":608,"for-statement":609,"foreach-statement":610,"break-statement":611,"continue-statement":612,"goto-statement":613,"return-statement":614,"throw-statement":615,"TRY":616,"CHECKED":617,"UNCHECKED":618,"LOCK":619,"USING":620,"UNSAFE":621,"modifiers":622,"FIXED":623,"invocation-expression":261,"NEW":624,"unary-expression":625,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"IF":626,"SWITCH":627,"WHILE":628,"DO":629,"FOR":630,"FOREACH":631,"YIELD":632,"BREAK":633,"CONTINUE":634,"GOTO":635,"RETURN":636,"THROW":637,"modifier":30,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-no-array-creation-expression":227,"array-creation-expression":228,"ASYNC":456,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"THIS":262,"BASE":263,"TYPEOF":265,"SIZEOF":266,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 1190 
switch-statement -> SWITCH OPEN_PARENS expression CLOSE_PARENS .switch-block
switch-block -> .OPEN_BRACE CLOSE_BRACE
switch-block -> .OPEN_BRACE switch-sections CLOSE_BRACE 
transitions ->  {"switch-block":1303,"OPEN_BRACE":1304}

item set 1191 
while-statement -> WHILE OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1305,"block":581,"empty-statement":582,"statement-expression":583,"selection-statement":584,"iteration-statement":585,"jump-statement":586,"try-statement":587,"checked-statement":588,"unchecked-statement":589,"lock-statement":590,"using-statement":591,"unsafe-statement":592,"fixed-statement":593,"OPEN_BRACE":382,"SEMICOLON":597,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"if-statement":605,"switch-statement":606,"while-statement":607,"do-statement":608,"for-statement":609,"foreach-statement":610,"break-statement":611,"continue-statement":612,"goto-statement":613,"return-statement":614,"throw-statement":615,"TRY":616,"CHECKED":617,"UNCHECKED":618,"LOCK":619,"USING":620,"UNSAFE":621,"modifiers":622,"FIXED":623,"invocation-expression":261,"NEW":624,"unary-expression":625,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"IF":626,"SWITCH":627,"WHILE":628,"DO":629,"FOR":630,"FOREACH":631,"YIELD":632,"BREAK":633,"CONTINUE":634,"GOTO":635,"RETURN":636,"THROW":637,"modifier":30,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-no-array-creation-expression":227,"array-creation-expression":228,"ASYNC":456,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"THIS":262,"BASE":263,"TYPEOF":265,"SIZEOF":266,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 1192 
do-statement -> DO embedded-statement WHILE OPEN_PARENS .boolean-expression CLOSE_PARENS SEMICOLON
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":1306,"expression":1010,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 1193 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_PARENS":1307,"for-iterator":1308,"statement-expression-list":1309,"statement-expression":1018,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"invocation-expression":261,"NEW":264,"unary-expression":625,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"THIS":262,"BASE":263,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 1194 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition .SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":1310}

item set 1195 
for-condition -> boolean-expression . 
transitions ->  {}

item set 1196 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-condition -> .boolean-expression
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":1311,"for-condition":1312,"boolean-expression":1195,"expression":1010,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 1197 
statement-expression-list -> statement-expression-list COMMA .statement-expression
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"statement-expression":1313,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"invocation-expression":261,"NEW":264,"unary-expression":625,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"THIS":262,"BASE":263,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 1198 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD .IN expression CLOSE_PARENS embedded-statement 
transitions ->  {"IN":1314}

item set 1199 
return-statement -> YIELD RETURN block-expression-with-brace SEMICOLON . 
transitions ->  {}

item set 1200 
return-statement -> YIELD RETURN expression SEMICOLON . 
transitions ->  {}

item set 1201 
goto-statement -> GOTO CASE constant-expression SEMICOLON . 
transitions ->  {}

item set 1202 
argument-list-with-brace -> OPEN_BRACE argument-list .COMMA CLOSE_BRACE
argument-list-with-brace -> OPEN_BRACE argument-list .CLOSE_BRACE
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"COMMA":1315,"CLOSE_BRACE":1316,"COLON":804}

item set 1203 
argument-list-with-brace -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 1204 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers .
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers .array-initializer
rank-specifiers -> rank-specifiers .rank-specifier
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"array-initializer":1317,"rank-specifier":330,"OPEN_BRACE":640,"OPEN_BRACKET":188}

item set 1205 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer . 
transitions ->  {}

item set 1206 
array-initializer -> OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE . 
transitions ->  {}

item set 1207 
variable-initializer-list -> variable-initializer-list COMMA variable-initializer . 
transitions ->  {}

item set 1208 
cast-expression -> OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1318,"OPEN_BRACE":382}

item set 1209 
cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block . 
transitions ->  {}

item set 1210 
delegate-creation-expression -> NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace . 
transitions ->  {}

item set 1211 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions .IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions .IDENTIFIER_WITH_DOT
invocation-expressions -> invocation-expressions .DOT invocation-expression
primary-no-array-creation-expression -> invocation-expressions .
member-access -> invocation-expressions .DOT IDENTIFIER_WITH_KEYWORD
member-access -> invocation-expressions .OP_PTR IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_DOT -> .DOT IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_DOT -> . 
transitions ->  {"IDENTIFIER_WITH_DOT":1319,"DOT":1213,"OP_PTR":378}

item set 1212 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT .block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":1320,"OPEN_BRACE":403}

item set 1213 
invocation-expressions -> invocation-expressions DOT .invocation-expression
member-access -> invocation-expressions DOT .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_DOT -> DOT .IDENTIFIER_WITH_KEYWORD
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"invocation-expression":566,"IDENTIFIER_WITH_KEYWORD":1321,"AWAIT":272,"primary-expression":543,"IDENTIFIER_WITH_TEMPLATE":360,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":262,"ASYNC":75,"WHERE":76,"primary-no-array-creation-expression":227,"array-creation-expression":228,"IDENTIFIER":59,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"type":260,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"TRUE":270,"FALSE":271,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 1214 
object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace . 
transitions ->  {}

item set 1215 
object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace . 
transitions ->  {}

item set 1216 
constant-declarators -> constant-declarators COMMA constant-declarator .
constant-declarators -> constant-declarators COMMA constant-declarator . 
transitions ->  {}

item set 1217 
constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression .
constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression . 
transitions ->  {}

item set 1218 
constant-declaration -> attributes CONST type-with-interr constant-declarators SEMICOLON . 
transitions ->  {}

item set 1219 
constant-declaration -> attributes modifiers CONST type-with-interr constant-declarators .SEMICOLON
constant-declarators -> constant-declarators .COMMA constant-declarator
constant-declarators -> constant-declarators .COMMA constant-declarator 
transitions ->  {"SEMICOLON":1322,"COMMA":1056}

item set 1220 
field-declaration -> attributes modifiers type-with-interr member-name SEMICOLON . 
transitions ->  {}

item set 1221 
property-declaration -> attributes modifiers type-with-interr member-name OPEN_BRACE .accessor-declarations CLOSE_BRACE
accessor-declarations -> .get-accessor-declaration
accessor-declarations -> .get-accessor-declaration set-accessor-declaration
accessor-declarations -> .set-accessor-declaration
accessor-declarations -> .set-accessor-declaration get-accessor-declaration
get-accessor-declaration -> .attributes modifiers GET method-body
get-accessor-declaration -> .modifiers GET method-body
get-accessor-declaration -> .attributes GET method-body
get-accessor-declaration -> .GET method-body
set-accessor-declaration -> .attributes modifiers SET method-body
set-accessor-declaration -> .modifiers SET method-body
set-accessor-declaration -> .attributes SET method-body
set-accessor-declaration -> .SET method-body
attributes -> .attribute-sections
modifiers -> .modifier
modifiers -> .modifiers modifier
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"accessor-declarations":1323,"get-accessor-declaration":926,"set-accessor-declaration":927,"attributes":928,"modifiers":929,"GET":930,"SET":931,"attribute-sections":29,"modifier":30,"attribute-section":31,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47,"OPEN_BRACKET":53}

item set 1222 
method-header -> attributes modifiers type-with-interr member-name OPEN_PARENS .CLOSE_PARENS where-base
method-header -> attributes modifiers type-with-interr member-name OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1324,"formal-parameter-list":1325,"fixed-parameters":525,"parameter-array":526,"fixed-parameter":527,"PARAMS":528,"attributes":529,"type-with-interr":530,"THIS":531,"parameter-modifier":532,"attribute-sections":29,"type":114,"REF":533,"OUT":534,"attribute-section":31,"non-array-type":115,"array-type":116,"OPEN_BRACKET":53,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 1223 
event-declaration -> attributes modifiers EVENT type-with-interr variable-declarators .SEMICOLON
variable-declarators -> variable-declarators .COMMA variable-declarator
member-name -> variable-declarators . 
transitions ->  {"SEMICOLON":1326,"COMMA":921}

item set 1224 
event-declaration -> attributes modifiers EVENT type-with-interr member-name .OPEN_BRACE event-accessor-declarations CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1327}

item set 1225 
indexer-declaration -> attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1328}

item set 1226 
static-constructor-declaration -> attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .constructor-initializer
method-body -> .block
method-body -> .SEMICOLON
constructor-initializer -> .COLON BASE OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON BASE OPEN_PARENS argument-list CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS CLOSE_PARENS
constructor-initializer -> .COLON THIS OPEN_PARENS argument-list CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1329,"constructor-initializer":1134,"block":728,"SEMICOLON":729,"COLON":1135,"OPEN_BRACE":382}

item set 1227 
property-declaration -> attributes type-with-interr member-name OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1330}

item set 1228 
method-header -> attributes type-with-interr member-name OPEN_PARENS CLOSE_PARENS .where-base
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1331,"where-units":155,"where-unit":157,"WHERE":158}

item set 1229 
method-header -> attributes type-with-interr member-name OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base 
transitions ->  {"CLOSE_PARENS":1332}

item set 1230 
event-declaration -> attributes EVENT type-with-interr variable-declarators SEMICOLON . 
transitions ->  {}

item set 1231 
event-declaration -> attributes EVENT type-with-interr member-name OPEN_BRACE .event-accessor-declarations CLOSE_BRACE
event-accessor-declarations -> .add-accessor-declaration remove-accessor-declaration
event-accessor-declarations -> .remove-accessor-declaration add-accessor-declaration
add-accessor-declaration -> .ADD block
add-accessor-declaration -> .attributes ADD block
remove-accessor-declaration -> .REMOVE block
remove-accessor-declaration -> .attributes REMOVE block
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"event-accessor-declarations":1333,"add-accessor-declaration":1252,"remove-accessor-declaration":1253,"ADD":1254,"attributes":1255,"REMOVE":1256,"attribute-sections":29,"attribute-section":31,"OPEN_BRACKET":53}

item set 1232 
indexer-declaration -> attributes indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1233 
destructor-declaration -> attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1334,"block":728,"SEMICOLON":729,"OPEN_BRACE":382}

item set 1234 
destructor-declaration -> attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS method-body 
transitions ->  {"CLOSE_PARENS":1335}

item set 1235 
constant-declaration -> modifiers CONST type-with-interr constant-declarators SEMICOLON . 
transitions ->  {}

item set 1236 
property-declaration -> modifiers type-with-interr member-name OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1336}

item set 1237 
method-header -> modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS .where-base
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1337,"where-units":155,"where-unit":157,"WHERE":158}

item set 1238 
method-header -> modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base 
transitions ->  {"CLOSE_PARENS":1338}

item set 1239 
unary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS .type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS .type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1339,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 1240 
event-declaration -> modifiers EVENT type-with-interr variable-declarators SEMICOLON . 
transitions ->  {}

item set 1241 
event-declaration -> modifiers EVENT type-with-interr member-name OPEN_BRACE .event-accessor-declarations CLOSE_BRACE
event-accessor-declarations -> .add-accessor-declaration remove-accessor-declaration
event-accessor-declarations -> .remove-accessor-declaration add-accessor-declaration
add-accessor-declaration -> .ADD block
add-accessor-declaration -> .attributes ADD block
remove-accessor-declaration -> .REMOVE block
remove-accessor-declaration -> .attributes REMOVE block
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"event-accessor-declarations":1340,"add-accessor-declaration":1252,"remove-accessor-declaration":1253,"ADD":1254,"attributes":1255,"REMOVE":1256,"attribute-sections":29,"attribute-section":31,"OPEN_BRACKET":53}

item set 1242 
indexer-declaration -> modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1243 
static-constructor-declaration -> modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1244 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS .type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS .type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1341,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 1245 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS .type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS .type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1342,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 1246 
property-declaration -> type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1247 
method-header -> type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base . 
transitions ->  {}

item set 1248 
method-header -> type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1343,"where-units":155,"where-unit":157,"WHERE":158}

item set 1249 
indexer-declarator -> type-with-interr member-name OPEN_BRACKET formal-parameter-list CLOSE_BRACKET . 
transitions ->  {}

item set 1250 
indexer-declarator -> type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET . 
transitions ->  {}

item set 1251 
event-declaration -> EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1344}

item set 1252 
event-accessor-declarations -> add-accessor-declaration .remove-accessor-declaration
remove-accessor-declaration -> .REMOVE block
remove-accessor-declaration -> .attributes REMOVE block
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"remove-accessor-declaration":1345,"REMOVE":1256,"attributes":1346,"attribute-sections":29,"attribute-section":31,"OPEN_BRACKET":53}

item set 1253 
event-accessor-declarations -> remove-accessor-declaration .add-accessor-declaration
add-accessor-declaration -> .ADD block
add-accessor-declaration -> .attributes ADD block
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"add-accessor-declaration":1347,"ADD":1254,"attributes":1348,"attribute-sections":29,"attribute-section":31,"OPEN_BRACKET":53}

item set 1254 
add-accessor-declaration -> ADD .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1349,"OPEN_BRACE":382}

item set 1255 
add-accessor-declaration -> attributes .ADD block
remove-accessor-declaration -> attributes .REMOVE block 
transitions ->  {"ADD":1350,"REMOVE":1351}

item set 1256 
remove-accessor-declaration -> REMOVE .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1352,"OPEN_BRACE":382}

item set 1257 
set-accessor-declaration -> attributes modifiers .SET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"SET":1260,"modifier":109,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47}

item set 1258 
get-accessor-declaration -> attributes modifiers .GET method-body
modifiers -> modifiers .modifier
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW 
transitions ->  {"GET":1259,"modifier":109,"UNSAFE":32,"ASYNC":33,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"NEW":47}

item set 1259 
get-accessor-declaration -> attributes modifiers GET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1353,"block":728,"SEMICOLON":729,"OPEN_BRACE":382}

item set 1260 
set-accessor-declaration -> attributes modifiers SET .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1354,"block":728,"SEMICOLON":729,"OPEN_BRACE":382}

item set 1261 
get-accessor-declaration -> attributes GET method-body . 
transitions ->  {}

item set 1262 
set-accessor-declaration -> attributes SET method-body . 
transitions ->  {}

item set 1263 
get-accessor-declaration -> modifiers GET method-body . 
transitions ->  {}

item set 1264 
set-accessor-declaration -> modifiers SET method-body . 
transitions ->  {}

item set 1265 
destructor-declaration -> TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1266 
destructor-declaration -> EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1355,"block":728,"SEMICOLON":729,"OPEN_BRACE":382}

item set 1267 
constructor-initializer -> COLON BASE .OPEN_PARENS CLOSE_PARENS
constructor-initializer -> COLON BASE .OPEN_PARENS argument-list CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":1356}

item set 1268 
constructor-initializer -> COLON THIS .OPEN_PARENS CLOSE_PARENS
constructor-initializer -> COLON THIS .OPEN_PARENS argument-list CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":1357}

item set 1269 
constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS constructor-initializer . 
transitions ->  {}

item set 1270 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1271 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1358}

item set 1272 
delegate-declaration -> attributes DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1273 
delegate-declaration -> modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1274 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1359}

item set 1275 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1360,"where-units":155,"where-unit":157,"WHERE":158}

item set 1276 
interface-property-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1277 
interface-accessors -> attributes GET .SEMICOLON attributes SET SEMICOLON
interface-accessors -> attributes GET .SEMICOLON SET SEMICOLON
interface-accessors -> attributes GET .SEMICOLON 
transitions ->  {"SEMICOLON":1361}

item set 1278 
interface-accessors -> attributes SET .SEMICOLON attributes GET SEMICOLON
interface-accessors -> attributes SET .SEMICOLON GET SEMICOLON
interface-accessors -> attributes SET .SEMICOLON 
transitions ->  {"SEMICOLON":1362}

item set 1279 
interface-accessors -> SET SEMICOLON .attributes GET SEMICOLON
interface-accessors -> SET SEMICOLON .GET SEMICOLON
interface-accessors -> SET SEMICOLON .
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attributes":1363,"GET":1364,"attribute-sections":29,"attribute-section":31,"OPEN_BRACKET":53}

item set 1280 
interface-accessors -> GET SEMICOLON .attributes SET SEMICOLON
interface-accessors -> GET SEMICOLON .SET SEMICOLON
interface-accessors -> GET SEMICOLON .
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attributes":1365,"SET":1366,"attribute-sections":29,"attribute-section":31,"OPEN_BRACKET":53}

item set 1281 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1367}

item set 1282 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1368,"where-units":155,"where-unit":157,"WHERE":158}

item set 1283 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1369}

item set 1284 
interface-property-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1370}

item set 1285 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"CLOSE_BRACKET":1371}

item set 1286 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .CLOSE_PARENS where-base SEMICOLON
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS .formal-parameter-list CLOSE_PARENS where-base SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"CLOSE_PARENS":1372,"formal-parameter-list":1373,"fixed-parameters":525,"parameter-array":526,"fixed-parameter":527,"PARAMS":528,"attributes":529,"type-with-interr":530,"THIS":531,"parameter-modifier":532,"attribute-sections":29,"type":114,"REF":533,"OUT":534,"attribute-section":31,"non-array-type":115,"array-type":116,"OPEN_BRACKET":53,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 1287 
interface-property-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1374,"attributes":1151,"SET":1152,"GET":1153,"attribute-sections":29,"attribute-section":31,"OPEN_BRACKET":53}

item set 1288 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET .formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .PARAMS array-type IDENTIFIER_WITH_TEMPLATE
parameter-array -> .attributes PARAMS array-type IDENTIFIER_WITH_TEMPLATE
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD ASSIGN expression
fixed-parameter -> .type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .THIS type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
fixed-parameter -> .attributes parameter-modifier type-with-interr IDENTIFIER_WITH_KEYWORD
attributes -> .attribute-sections
type-with-interr -> .type INTERR
type-with-interr -> .type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"formal-parameter-list":1375,"fixed-parameters":525,"parameter-array":526,"fixed-parameter":527,"PARAMS":528,"attributes":529,"type-with-interr":530,"THIS":531,"parameter-modifier":532,"attribute-sections":29,"type":114,"REF":533,"OUT":534,"attribute-section":31,"non-array-type":115,"array-type":116,"OPEN_BRACKET":53,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 1289 
interface-event-declaration -> attributes NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE .SEMICOLON 
transitions ->  {"SEMICOLON":1376}

item set 1290 
interface-event-declaration -> attributes EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON . 
transitions ->  {}

item set 1291 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1377,"where-units":155,"where-unit":157,"WHERE":158}

item set 1292 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1378}

item set 1293 
interface-property-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1379}

item set 1294 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"CLOSE_BRACKET":1380}

item set 1295 
interface-event-declaration -> NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON . 
transitions ->  {}

item set 1296 
switch-label -> CASE constant-expression COLON . 
transitions ->  {}

item set 1297 
specific-catch-clause -> CATCH OPEN_PARENS type .CLOSE_PARENS block
specific-catch-clause -> CATCH OPEN_PARENS type .IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block
array-type -> type .rank-specifiers
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifiers -> .rank-specifier
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET 
transitions ->  {"CLOSE_PARENS":1381,"IDENTIFIER_WITH_TEMPLATE":1382,"rank-specifiers":186,"IDENTIFIER":59,"rank-specifier":187,"OPEN_BRACKET":188}

item set 1298 
lock-statement -> LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1299 
using-statement -> USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1300 
fixed-statement -> modifiers FIXED OPEN_PARENS type local-variable-declarators .CLOSE_PARENS embedded-statement
local-variable-declarators -> local-variable-declarators .COMMA local-variable-declarator 
transitions ->  {"CLOSE_PARENS":1383,"COMMA":991}

item set 1301 
fixed-statement -> FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1384,"block":581,"empty-statement":582,"statement-expression":583,"selection-statement":584,"iteration-statement":585,"jump-statement":586,"try-statement":587,"checked-statement":588,"unchecked-statement":589,"lock-statement":590,"using-statement":591,"unsafe-statement":592,"fixed-statement":593,"OPEN_BRACE":382,"SEMICOLON":597,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"if-statement":605,"switch-statement":606,"while-statement":607,"do-statement":608,"for-statement":609,"foreach-statement":610,"break-statement":611,"continue-statement":612,"goto-statement":613,"return-statement":614,"throw-statement":615,"TRY":616,"CHECKED":617,"UNCHECKED":618,"LOCK":619,"USING":620,"UNSAFE":621,"modifiers":622,"FIXED":623,"invocation-expression":261,"NEW":624,"unary-expression":625,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"IF":626,"SWITCH":627,"WHILE":628,"DO":629,"FOR":630,"FOREACH":631,"YIELD":632,"BREAK":633,"CONTINUE":634,"GOTO":635,"RETURN":636,"THROW":637,"modifier":30,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-no-array-creation-expression":227,"array-creation-expression":228,"ASYNC":456,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"THIS":262,"BASE":263,"TYPEOF":265,"SIZEOF":266,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 1302 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement .
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement .ELSE embedded-statement 
transitions ->  {"ELSE":1385}

item set 1303 
switch-statement -> SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block . 
transitions ->  {}

item set 1304 
switch-block -> OPEN_BRACE .CLOSE_BRACE
switch-block -> OPEN_BRACE .switch-sections CLOSE_BRACE
switch-sections -> .switch-sections switch-section
switch-sections -> .switch-section
switch-section -> .switch-labels statement-list
switch-labels -> .switch-labels switch-label
switch-labels -> .switch-label
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON 
transitions ->  {"CLOSE_BRACE":1386,"switch-sections":1387,"switch-section":1388,"switch-labels":1389,"switch-label":988,"CASE":989,"DEFAULT":1172}

item set 1305 
while-statement -> WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1306 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression .CLOSE_PARENS SEMICOLON 
transitions ->  {"CLOSE_PARENS":1390}

item set 1307 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1391,"block":581,"empty-statement":582,"statement-expression":583,"selection-statement":584,"iteration-statement":585,"jump-statement":586,"try-statement":587,"checked-statement":588,"unchecked-statement":589,"lock-statement":590,"using-statement":591,"unsafe-statement":592,"fixed-statement":593,"OPEN_BRACE":382,"SEMICOLON":597,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"if-statement":605,"switch-statement":606,"while-statement":607,"do-statement":608,"for-statement":609,"foreach-statement":610,"break-statement":611,"continue-statement":612,"goto-statement":613,"return-statement":614,"throw-statement":615,"TRY":616,"CHECKED":617,"UNCHECKED":618,"LOCK":619,"USING":620,"UNSAFE":621,"modifiers":622,"FIXED":623,"invocation-expression":261,"NEW":624,"unary-expression":625,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"IF":626,"SWITCH":627,"WHILE":628,"DO":629,"FOR":630,"FOREACH":631,"YIELD":632,"BREAK":633,"CONTINUE":634,"GOTO":635,"RETURN":636,"THROW":637,"modifier":30,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-no-array-creation-expression":227,"array-creation-expression":228,"ASYNC":456,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"THIS":262,"BASE":263,"TYPEOF":265,"SIZEOF":266,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 1308 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1392}

item set 1309 
for-iterator -> statement-expression-list .
statement-expression-list -> statement-expression-list .COMMA statement-expression 
transitions ->  {"COMMA":1197}

item set 1310 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_PARENS":1393,"for-iterator":1394,"statement-expression-list":1309,"statement-expression":1018,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"invocation-expression":261,"NEW":264,"unary-expression":625,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"THIS":262,"BASE":263,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 1311 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_PARENS":1395,"for-iterator":1396,"statement-expression-list":1309,"statement-expression":1018,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"invocation-expression":261,"NEW":264,"unary-expression":625,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"THIS":262,"BASE":263,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 1312 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition .SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":1397}

item set 1313 
statement-expression-list -> statement-expression-list COMMA statement-expression . 
transitions ->  {}

item set 1314 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN .expression CLOSE_PARENS embedded-statement
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":1398,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 1315 
argument-list-with-brace -> OPEN_BRACE argument-list COMMA .CLOSE_BRACE
argument-list -> argument-list COMMA .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACE":1399,"argument":984,"expression":556,"REF":557,"OUT":558,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 1316 
argument-list-with-brace -> OPEN_BRACE argument-list CLOSE_BRACE . 
transitions ->  {}

item set 1317 
array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer . 
transitions ->  {}

item set 1318 
cast-expression -> OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block . 
transitions ->  {}

item set 1319 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT .block-expression-with-brace
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT .
block-expression-with-brace -> .OPEN_BRACE block-expression-list CLOSE_BRACE 
transitions ->  {"block-expression-with-brace":1400,"OPEN_BRACE":403}

item set 1320 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace . 
transitions ->  {}

item set 1321 
member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD .
IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD .
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR expression
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .OP_DBLPTR block
primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD .
namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD . 
transitions ->  {"OP_DBLPTR":379}

item set 1322 
constant-declaration -> attributes modifiers CONST type-with-interr constant-declarators SEMICOLON . 
transitions ->  {}

item set 1323 
property-declaration -> attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1401}

item set 1324 
method-header -> attributes modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS .where-base
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1402,"where-units":155,"where-unit":157,"WHERE":158}

item set 1325 
method-header -> attributes modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base 
transitions ->  {"CLOSE_PARENS":1403}

item set 1326 
event-declaration -> attributes modifiers EVENT type-with-interr variable-declarators SEMICOLON . 
transitions ->  {}

item set 1327 
event-declaration -> attributes modifiers EVENT type-with-interr member-name OPEN_BRACE .event-accessor-declarations CLOSE_BRACE
event-accessor-declarations -> .add-accessor-declaration remove-accessor-declaration
event-accessor-declarations -> .remove-accessor-declaration add-accessor-declaration
add-accessor-declaration -> .ADD block
add-accessor-declaration -> .attributes ADD block
remove-accessor-declaration -> .REMOVE block
remove-accessor-declaration -> .attributes REMOVE block
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"event-accessor-declarations":1404,"add-accessor-declaration":1252,"remove-accessor-declaration":1253,"ADD":1254,"attributes":1255,"REMOVE":1256,"attribute-sections":29,"attribute-section":31,"OPEN_BRACKET":53}

item set 1328 
indexer-declaration -> attributes modifiers indexer-declarator OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1329 
static-constructor-declaration -> attributes modifiers IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1330 
property-declaration -> attributes type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1331 
method-header -> attributes type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base . 
transitions ->  {}

item set 1332 
method-header -> attributes type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1405,"where-units":155,"where-unit":157,"WHERE":158}

item set 1333 
event-declaration -> attributes EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1406}

item set 1334 
destructor-declaration -> attributes TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1335 
destructor-declaration -> attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .method-body
method-body -> .block
method-body -> .SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"method-body":1407,"block":728,"SEMICOLON":729,"OPEN_BRACE":382}

item set 1336 
property-declaration -> modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1337 
method-header -> modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base . 
transitions ->  {}

item set 1338 
method-header -> modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1408,"where-units":155,"where-unit":157,"WHERE":158}

item set 1339 
unary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr .IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr .IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1409,"IDENTIFIER":59}

item set 1340 
event-declaration -> modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1410}

item set 1341 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr .IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr .IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1411,"IDENTIFIER_WITH_KEYWORD":1412,"IDENTIFIER":59,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76}

item set 1342 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr .IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr .IDENTIFIER_WITH_KEYWORD CLOSE_PARENS
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1413,"IDENTIFIER_WITH_KEYWORD":1414,"IDENTIFIER":59,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76}

item set 1343 
method-header -> type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base . 
transitions ->  {}

item set 1344 
event-declaration -> EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1345 
event-accessor-declarations -> add-accessor-declaration remove-accessor-declaration . 
transitions ->  {}

item set 1346 
remove-accessor-declaration -> attributes .REMOVE block 
transitions ->  {"REMOVE":1351}

item set 1347 
event-accessor-declarations -> remove-accessor-declaration add-accessor-declaration . 
transitions ->  {}

item set 1348 
add-accessor-declaration -> attributes .ADD block 
transitions ->  {"ADD":1350}

item set 1349 
add-accessor-declaration -> ADD block . 
transitions ->  {}

item set 1350 
add-accessor-declaration -> attributes ADD .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1415,"OPEN_BRACE":382}

item set 1351 
remove-accessor-declaration -> attributes REMOVE .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1416,"OPEN_BRACE":382}

item set 1352 
remove-accessor-declaration -> REMOVE block . 
transitions ->  {}

item set 1353 
get-accessor-declaration -> attributes modifiers GET method-body . 
transitions ->  {}

item set 1354 
set-accessor-declaration -> attributes modifiers SET method-body . 
transitions ->  {}

item set 1355 
destructor-declaration -> EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1356 
constructor-initializer -> COLON BASE OPEN_PARENS .CLOSE_PARENS
constructor-initializer -> COLON BASE OPEN_PARENS .argument-list CLOSE_PARENS
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":1417,"argument-list":1418,"argument":555,"expression":556,"REF":557,"OUT":558,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 1357 
constructor-initializer -> COLON THIS OPEN_PARENS .CLOSE_PARENS
constructor-initializer -> COLON THIS OPEN_PARENS .argument-list CLOSE_PARENS
argument-list -> .argument-list COLON argument
argument-list -> .argument-list COMMA argument
argument-list -> .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression OP_COALESCING shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
type-name -> .namespace-or-type-name
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression OP_PTR multiplicative-expression
additive-expression -> .additive-expression OP_COALESCING multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":1419,"argument-list":1420,"argument":555,"expression":556,"REF":557,"OUT":558,"conditional-expression":209,"assignment":210,"conditional-or-expression":211,"unary-expression":212,"conditional-and-expression":213,"pre-increment-expression":214,"pre-decrement-expression":215,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-expression":223,"inclusive-or-expression":224,"OP_INC":225,"OP_DEC":226,"primary-no-array-creation-expression":227,"array-creation-expression":228,"exclusive-or-expression":229,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"invocation-expressions":236,"element-access":237,"this-access":238,"base-access":239,"post-increment-expression":240,"post-decrement-expression":241,"delegate-creation-expression":242,"object-creation-expression":243,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"and-expression":252,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"invocation-expression":261,"THIS":262,"BASE":263,"NEW":264,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"equality-expression":269,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"AWAIT":272,"relational-expression":273,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"shift-expression":274,"namespace-or-type-name":94,"additive-expression":275,"multiplicative-expression":276}

item set 1358 
delegate-declaration -> attributes modifiers DELEGATE type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1359 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1360 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1421}

item set 1361 
interface-accessors -> attributes GET SEMICOLON .attributes SET SEMICOLON
interface-accessors -> attributes GET SEMICOLON .SET SEMICOLON
interface-accessors -> attributes GET SEMICOLON .
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attributes":1422,"SET":1423,"attribute-sections":29,"attribute-section":31,"OPEN_BRACKET":53}

item set 1362 
interface-accessors -> attributes SET SEMICOLON .attributes GET SEMICOLON
interface-accessors -> attributes SET SEMICOLON .GET SEMICOLON
interface-accessors -> attributes SET SEMICOLON .
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attributes":1424,"GET":1425,"attribute-sections":29,"attribute-section":31,"OPEN_BRACKET":53}

item set 1363 
interface-accessors -> SET SEMICOLON attributes .GET SEMICOLON 
transitions ->  {"GET":1426}

item set 1364 
interface-accessors -> SET SEMICOLON GET .SEMICOLON 
transitions ->  {"SEMICOLON":1427}

item set 1365 
interface-accessors -> GET SEMICOLON attributes .SET SEMICOLON 
transitions ->  {"SET":1428}

item set 1366 
interface-accessors -> GET SEMICOLON SET .SEMICOLON 
transitions ->  {"SEMICOLON":1429}

item set 1367 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1430,"attributes":1151,"SET":1152,"GET":1153,"attribute-sections":29,"attribute-section":31,"OPEN_BRACKET":53}

item set 1368 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1431}

item set 1369 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1432,"where-units":155,"where-unit":157,"WHERE":158}

item set 1370 
interface-property-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1371 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1433}

item set 1372 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1434,"where-units":155,"where-unit":157,"WHERE":158}

item set 1373 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list .CLOSE_PARENS where-base SEMICOLON 
transitions ->  {"CLOSE_PARENS":1435}

item set 1374 
interface-property-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1436}

item set 1375 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list .CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"CLOSE_BRACKET":1437}

item set 1376 
interface-event-declaration -> attributes NEW EVENT type-with-interr IDENTIFIER_WITH_TEMPLATE SEMICOLON . 
transitions ->  {}

item set 1377 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1438}

item set 1378 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1439,"where-units":155,"where-unit":157,"WHERE":158}

item set 1379 
interface-property-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1380 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1440}

item set 1381 
specific-catch-clause -> CATCH OPEN_PARENS type CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1441,"OPEN_BRACE":382}

item set 1382 
specific-catch-clause -> CATCH OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE .CLOSE_PARENS block 
transitions ->  {"CLOSE_PARENS":1442}

item set 1383 
fixed-statement -> modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1443,"block":581,"empty-statement":582,"statement-expression":583,"selection-statement":584,"iteration-statement":585,"jump-statement":586,"try-statement":587,"checked-statement":588,"unchecked-statement":589,"lock-statement":590,"using-statement":591,"unsafe-statement":592,"fixed-statement":593,"OPEN_BRACE":382,"SEMICOLON":597,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"if-statement":605,"switch-statement":606,"while-statement":607,"do-statement":608,"for-statement":609,"foreach-statement":610,"break-statement":611,"continue-statement":612,"goto-statement":613,"return-statement":614,"throw-statement":615,"TRY":616,"CHECKED":617,"UNCHECKED":618,"LOCK":619,"USING":620,"UNSAFE":621,"modifiers":622,"FIXED":623,"invocation-expression":261,"NEW":624,"unary-expression":625,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"IF":626,"SWITCH":627,"WHILE":628,"DO":629,"FOR":630,"FOREACH":631,"YIELD":632,"BREAK":633,"CONTINUE":634,"GOTO":635,"RETURN":636,"THROW":637,"modifier":30,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-no-array-creation-expression":227,"array-creation-expression":228,"ASYNC":456,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"THIS":262,"BASE":263,"TYPEOF":265,"SIZEOF":266,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 1384 
fixed-statement -> FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1385 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1444,"block":581,"empty-statement":582,"statement-expression":583,"selection-statement":584,"iteration-statement":585,"jump-statement":586,"try-statement":587,"checked-statement":588,"unchecked-statement":589,"lock-statement":590,"using-statement":591,"unsafe-statement":592,"fixed-statement":593,"OPEN_BRACE":382,"SEMICOLON":597,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"if-statement":605,"switch-statement":606,"while-statement":607,"do-statement":608,"for-statement":609,"foreach-statement":610,"break-statement":611,"continue-statement":612,"goto-statement":613,"return-statement":614,"throw-statement":615,"TRY":616,"CHECKED":617,"UNCHECKED":618,"LOCK":619,"USING":620,"UNSAFE":621,"modifiers":622,"FIXED":623,"invocation-expression":261,"NEW":624,"unary-expression":625,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"IF":626,"SWITCH":627,"WHILE":628,"DO":629,"FOR":630,"FOREACH":631,"YIELD":632,"BREAK":633,"CONTINUE":634,"GOTO":635,"RETURN":636,"THROW":637,"modifier":30,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-no-array-creation-expression":227,"array-creation-expression":228,"ASYNC":456,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"THIS":262,"BASE":263,"TYPEOF":265,"SIZEOF":266,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 1386 
switch-block -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 1387 
switch-block -> OPEN_BRACE switch-sections .CLOSE_BRACE
switch-sections -> switch-sections .switch-section
switch-section -> .switch-labels statement-list
switch-labels -> .switch-labels switch-label
switch-labels -> .switch-label
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON 
transitions ->  {"CLOSE_BRACE":1445,"switch-section":1446,"switch-labels":1389,"switch-label":988,"CASE":989,"DEFAULT":1172}

item set 1388 
switch-sections -> switch-section . 
transitions ->  {}

item set 1389 
switch-section -> switch-labels .statement-list
switch-labels -> switch-labels .switch-label
statement-list -> .statement
statement-list -> .statement-list statement
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"statement-list":1447,"switch-label":1171,"statement":574,"CASE":989,"DEFAULT":990,"labeled-statement":575,"declaration-statement":576,"embedded-statement":577,"IDENTIFIER_WITH_KEYWORD":578,"local-variable-declaration":579,"local-constant-declaration":580,"block":581,"empty-statement":582,"statement-expression":583,"selection-statement":584,"iteration-statement":585,"jump-statement":586,"try-statement":587,"checked-statement":588,"unchecked-statement":589,"lock-statement":590,"using-statement":591,"unsafe-statement":592,"fixed-statement":593,"IDENTIFIER_WITH_TEMPLATE":360,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":262,"ASYNC":456,"WHERE":76,"primary-expression":594,"type":595,"CONST":596,"OPEN_BRACE":382,"SEMICOLON":597,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"if-statement":605,"switch-statement":606,"while-statement":607,"do-statement":608,"for-statement":609,"foreach-statement":610,"break-statement":611,"continue-statement":612,"goto-statement":613,"return-statement":614,"throw-statement":615,"TRY":616,"CHECKED":617,"UNCHECKED":618,"LOCK":619,"USING":620,"UNSAFE":621,"modifiers":622,"FIXED":623,"IDENTIFIER":59,"primary-no-array-creation-expression":227,"array-creation-expression":228,"non-array-type":115,"array-type":116,"invocation-expression":261,"NEW":624,"unary-expression":625,"OP_INC":225,"OP_DEC":226,"IF":626,"SWITCH":627,"WHILE":628,"DO":629,"FOR":630,"FOREACH":631,"YIELD":632,"BREAK":633,"CONTINUE":634,"GOTO":635,"RETURN":636,"THROW":637,"modifier":30,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"BASE":263,"TYPEOF":265,"SIZEOF":266,"namespace-or-type-name":94,"TRUE":270,"FALSE":271}

item set 1390 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":1448}

item set 1391 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1392 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1449,"block":581,"empty-statement":582,"statement-expression":583,"selection-statement":584,"iteration-statement":585,"jump-statement":586,"try-statement":587,"checked-statement":588,"unchecked-statement":589,"lock-statement":590,"using-statement":591,"unsafe-statement":592,"fixed-statement":593,"OPEN_BRACE":382,"SEMICOLON":597,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"if-statement":605,"switch-statement":606,"while-statement":607,"do-statement":608,"for-statement":609,"foreach-statement":610,"break-statement":611,"continue-statement":612,"goto-statement":613,"return-statement":614,"throw-statement":615,"TRY":616,"CHECKED":617,"UNCHECKED":618,"LOCK":619,"USING":620,"UNSAFE":621,"modifiers":622,"FIXED":623,"invocation-expression":261,"NEW":624,"unary-expression":625,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"IF":626,"SWITCH":627,"WHILE":628,"DO":629,"FOR":630,"FOREACH":631,"YIELD":632,"BREAK":633,"CONTINUE":634,"GOTO":635,"RETURN":636,"THROW":637,"modifier":30,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-no-array-creation-expression":227,"array-creation-expression":228,"ASYNC":456,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"THIS":262,"BASE":263,"TYPEOF":265,"SIZEOF":266,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 1393 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1450,"block":581,"empty-statement":582,"statement-expression":583,"selection-statement":584,"iteration-statement":585,"jump-statement":586,"try-statement":587,"checked-statement":588,"unchecked-statement":589,"lock-statement":590,"using-statement":591,"unsafe-statement":592,"fixed-statement":593,"OPEN_BRACE":382,"SEMICOLON":597,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"if-statement":605,"switch-statement":606,"while-statement":607,"do-statement":608,"for-statement":609,"foreach-statement":610,"break-statement":611,"continue-statement":612,"goto-statement":613,"return-statement":614,"throw-statement":615,"TRY":616,"CHECKED":617,"UNCHECKED":618,"LOCK":619,"USING":620,"UNSAFE":621,"modifiers":622,"FIXED":623,"invocation-expression":261,"NEW":624,"unary-expression":625,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"IF":626,"SWITCH":627,"WHILE":628,"DO":629,"FOR":630,"FOREACH":631,"YIELD":632,"BREAK":633,"CONTINUE":634,"GOTO":635,"RETURN":636,"THROW":637,"modifier":30,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-no-array-creation-expression":227,"array-creation-expression":228,"ASYNC":456,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"THIS":262,"BASE":263,"TYPEOF":265,"SIZEOF":266,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 1394 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1451}

item set 1395 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1452,"block":581,"empty-statement":582,"statement-expression":583,"selection-statement":584,"iteration-statement":585,"jump-statement":586,"try-statement":587,"checked-statement":588,"unchecked-statement":589,"lock-statement":590,"using-statement":591,"unsafe-statement":592,"fixed-statement":593,"OPEN_BRACE":382,"SEMICOLON":597,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"if-statement":605,"switch-statement":606,"while-statement":607,"do-statement":608,"for-statement":609,"foreach-statement":610,"break-statement":611,"continue-statement":612,"goto-statement":613,"return-statement":614,"throw-statement":615,"TRY":616,"CHECKED":617,"UNCHECKED":618,"LOCK":619,"USING":620,"UNSAFE":621,"modifiers":622,"FIXED":623,"invocation-expression":261,"NEW":624,"unary-expression":625,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"IF":626,"SWITCH":627,"WHILE":628,"DO":629,"FOR":630,"FOREACH":631,"YIELD":632,"BREAK":633,"CONTINUE":634,"GOTO":635,"RETURN":636,"THROW":637,"modifier":30,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-no-array-creation-expression":227,"array-creation-expression":228,"ASYNC":456,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"THIS":262,"BASE":263,"TYPEOF":265,"SIZEOF":266,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 1396 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1453}

item set 1397 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"CLOSE_PARENS":1454,"for-iterator":1455,"statement-expression-list":1309,"statement-expression":1018,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"invocation-expression":261,"NEW":264,"unary-expression":625,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-no-array-creation-expression":227,"array-creation-expression":228,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"THIS":262,"BASE":263,"TYPEOF":265,"SIZEOF":266,"CHECKED":267,"UNCHECKED":268,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"ASYNC":75,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 1398 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1456}

item set 1399 
argument-list-with-brace -> OPEN_BRACE argument-list COMMA CLOSE_BRACE . 
transitions ->  {}

item set 1400 
object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace . 
transitions ->  {}

item set 1401 
property-declaration -> attributes modifiers type-with-interr member-name OPEN_BRACE accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1402 
method-header -> attributes modifiers type-with-interr member-name OPEN_PARENS CLOSE_PARENS where-base . 
transitions ->  {}

item set 1403 
method-header -> attributes modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1457,"where-units":155,"where-unit":157,"WHERE":158}

item set 1404 
event-declaration -> attributes modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1458}

item set 1405 
method-header -> attributes type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base . 
transitions ->  {}

item set 1406 
event-declaration -> attributes EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1407 
destructor-declaration -> attributes EXTERN TILDE IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS method-body . 
transitions ->  {}

item set 1408 
method-header -> modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base . 
transitions ->  {}

item set 1409 
unary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE .CLOSE_PARENS
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE .COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1459,"COMMA":1460}

item set 1410 
event-declaration -> modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1411 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE .CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"CLOSE_PARENS":1461}

item set 1412 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1462}

item set 1413 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE .CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE . 
transitions ->  {"CLOSE_PARENS":1463}

item set 1414 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1464}

item set 1415 
add-accessor-declaration -> attributes ADD block . 
transitions ->  {}

item set 1416 
remove-accessor-declaration -> attributes REMOVE block . 
transitions ->  {}

item set 1417 
constructor-initializer -> COLON BASE OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 1418 
constructor-initializer -> COLON BASE OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":1465,"COLON":804,"COMMA":805}

item set 1419 
constructor-initializer -> COLON THIS OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 1420 
constructor-initializer -> COLON THIS OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COLON argument
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":1466,"COLON":804,"COMMA":805}

item set 1421 
interface-method-declaration -> type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1422 
interface-accessors -> attributes GET SEMICOLON attributes .SET SEMICOLON 
transitions ->  {"SET":1467}

item set 1423 
interface-accessors -> attributes GET SEMICOLON SET .SEMICOLON 
transitions ->  {"SEMICOLON":1468}

item set 1424 
interface-accessors -> attributes SET SEMICOLON attributes .GET SEMICOLON 
transitions ->  {"GET":1469}

item set 1425 
interface-accessors -> attributes SET SEMICOLON GET .SEMICOLON 
transitions ->  {"SEMICOLON":1470}

item set 1426 
interface-accessors -> SET SEMICOLON attributes GET .SEMICOLON 
transitions ->  {"SEMICOLON":1471}

item set 1427 
interface-accessors -> SET SEMICOLON GET SEMICOLON . 
transitions ->  {}

item set 1428 
interface-accessors -> GET SEMICOLON attributes SET .SEMICOLON 
transitions ->  {"SEMICOLON":1472}

item set 1429 
interface-accessors -> GET SEMICOLON SET SEMICOLON . 
transitions ->  {}

item set 1430 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1473}

item set 1431 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1432 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1474}

item set 1433 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1475,"attributes":1151,"SET":1152,"GET":1153,"attribute-sections":29,"attribute-section":31,"OPEN_BRACKET":53}

item set 1434 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1476}

item set 1435 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS .where-base SEMICOLON
where-base -> .where-units COMMA NEW OPEN_PARENS CLOSE_PARENS
where-base -> .where-units
where-units -> .where-units where-unit
where-units -> .where-unit
where-unit -> .WHERE type-name COLON where-names
where-unit -> . 
transitions ->  {"where-base":1477,"where-units":155,"where-unit":157,"WHERE":158}

item set 1436 
interface-property-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1437 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET .OPEN_BRACE interface-accessors CLOSE_BRACE 
transitions ->  {"OPEN_BRACE":1478}

item set 1438 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1439 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1479}

item set 1440 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1480,"attributes":1151,"SET":1152,"GET":1153,"attribute-sections":29,"attribute-section":31,"OPEN_BRACKET":53}

item set 1441 
specific-catch-clause -> CATCH OPEN_PARENS type CLOSE_PARENS block . 
transitions ->  {}

item set 1442 
specific-catch-clause -> CATCH OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":1481,"OPEN_BRACE":382}

item set 1443 
fixed-statement -> modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1444 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement . 
transitions ->  {}

item set 1445 
switch-block -> OPEN_BRACE switch-sections CLOSE_BRACE . 
transitions ->  {}

item set 1446 
switch-sections -> switch-sections switch-section . 
transitions ->  {}

item set 1447 
switch-section -> switch-labels statement-list .
statement-list -> statement-list .statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON switch-labels
labeled-statement -> .IDENTIFIER_WITH_KEYWORD COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
local-variable-declaration -> .primary-expression local-variable-declarators
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
type-name -> .namespace-or-type-name
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"statement":814,"labeled-statement":575,"declaration-statement":576,"embedded-statement":577,"IDENTIFIER_WITH_KEYWORD":578,"local-variable-declaration":579,"local-constant-declaration":580,"block":581,"empty-statement":582,"statement-expression":583,"selection-statement":584,"iteration-statement":585,"jump-statement":586,"try-statement":587,"checked-statement":588,"unchecked-statement":589,"lock-statement":590,"using-statement":591,"unsafe-statement":592,"fixed-statement":593,"IDENTIFIER_WITH_TEMPLATE":360,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":262,"ASYNC":456,"WHERE":76,"primary-expression":594,"type":595,"CONST":596,"OPEN_BRACE":382,"SEMICOLON":597,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"if-statement":605,"switch-statement":606,"while-statement":607,"do-statement":608,"for-statement":609,"foreach-statement":610,"break-statement":611,"continue-statement":612,"goto-statement":613,"return-statement":614,"throw-statement":615,"TRY":616,"CHECKED":617,"UNCHECKED":618,"LOCK":619,"USING":620,"UNSAFE":621,"modifiers":622,"FIXED":623,"IDENTIFIER":59,"primary-no-array-creation-expression":227,"array-creation-expression":228,"non-array-type":115,"array-type":116,"invocation-expression":261,"NEW":624,"unary-expression":625,"OP_INC":225,"OP_DEC":226,"IF":626,"SWITCH":627,"WHILE":628,"DO":629,"FOR":630,"FOREACH":631,"YIELD":632,"BREAK":633,"CONTINUE":634,"GOTO":635,"RETURN":636,"THROW":637,"modifier":30,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"BASE":263,"TYPEOF":265,"SIZEOF":266,"namespace-or-type-name":94,"TRUE":270,"FALSE":271}

item set 1448 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 1449 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1450 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1451 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1482,"block":581,"empty-statement":582,"statement-expression":583,"selection-statement":584,"iteration-statement":585,"jump-statement":586,"try-statement":587,"checked-statement":588,"unchecked-statement":589,"lock-statement":590,"using-statement":591,"unsafe-statement":592,"fixed-statement":593,"OPEN_BRACE":382,"SEMICOLON":597,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"if-statement":605,"switch-statement":606,"while-statement":607,"do-statement":608,"for-statement":609,"foreach-statement":610,"break-statement":611,"continue-statement":612,"goto-statement":613,"return-statement":614,"throw-statement":615,"TRY":616,"CHECKED":617,"UNCHECKED":618,"LOCK":619,"USING":620,"UNSAFE":621,"modifiers":622,"FIXED":623,"invocation-expression":261,"NEW":624,"unary-expression":625,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"IF":626,"SWITCH":627,"WHILE":628,"DO":629,"FOR":630,"FOREACH":631,"YIELD":632,"BREAK":633,"CONTINUE":634,"GOTO":635,"RETURN":636,"THROW":637,"modifier":30,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-no-array-creation-expression":227,"array-creation-expression":228,"ASYNC":456,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"THIS":262,"BASE":263,"TYPEOF":265,"SIZEOF":266,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 1452 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1453 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1483,"block":581,"empty-statement":582,"statement-expression":583,"selection-statement":584,"iteration-statement":585,"jump-statement":586,"try-statement":587,"checked-statement":588,"unchecked-statement":589,"lock-statement":590,"using-statement":591,"unsafe-statement":592,"fixed-statement":593,"OPEN_BRACE":382,"SEMICOLON":597,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"if-statement":605,"switch-statement":606,"while-statement":607,"do-statement":608,"for-statement":609,"foreach-statement":610,"break-statement":611,"continue-statement":612,"goto-statement":613,"return-statement":614,"throw-statement":615,"TRY":616,"CHECKED":617,"UNCHECKED":618,"LOCK":619,"USING":620,"UNSAFE":621,"modifiers":622,"FIXED":623,"invocation-expression":261,"NEW":624,"unary-expression":625,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"IF":626,"SWITCH":627,"WHILE":628,"DO":629,"FOR":630,"FOREACH":631,"YIELD":632,"BREAK":633,"CONTINUE":634,"GOTO":635,"RETURN":636,"THROW":637,"modifier":30,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-no-array-creation-expression":227,"array-creation-expression":228,"ASYNC":456,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"THIS":262,"BASE":263,"TYPEOF":265,"SIZEOF":266,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 1454 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1484,"block":581,"empty-statement":582,"statement-expression":583,"selection-statement":584,"iteration-statement":585,"jump-statement":586,"try-statement":587,"checked-statement":588,"unchecked-statement":589,"lock-statement":590,"using-statement":591,"unsafe-statement":592,"fixed-statement":593,"OPEN_BRACE":382,"SEMICOLON":597,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"if-statement":605,"switch-statement":606,"while-statement":607,"do-statement":608,"for-statement":609,"foreach-statement":610,"break-statement":611,"continue-statement":612,"goto-statement":613,"return-statement":614,"throw-statement":615,"TRY":616,"CHECKED":617,"UNCHECKED":618,"LOCK":619,"USING":620,"UNSAFE":621,"modifiers":622,"FIXED":623,"invocation-expression":261,"NEW":624,"unary-expression":625,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"IF":626,"SWITCH":627,"WHILE":628,"DO":629,"FOR":630,"FOREACH":631,"YIELD":632,"BREAK":633,"CONTINUE":634,"GOTO":635,"RETURN":636,"THROW":637,"modifier":30,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-no-array-creation-expression":227,"array-creation-expression":228,"ASYNC":456,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"THIS":262,"BASE":263,"TYPEOF":265,"SIZEOF":266,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 1455 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":1485}

item set 1456 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1486,"block":581,"empty-statement":582,"statement-expression":583,"selection-statement":584,"iteration-statement":585,"jump-statement":586,"try-statement":587,"checked-statement":588,"unchecked-statement":589,"lock-statement":590,"using-statement":591,"unsafe-statement":592,"fixed-statement":593,"OPEN_BRACE":382,"SEMICOLON":597,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"if-statement":605,"switch-statement":606,"while-statement":607,"do-statement":608,"for-statement":609,"foreach-statement":610,"break-statement":611,"continue-statement":612,"goto-statement":613,"return-statement":614,"throw-statement":615,"TRY":616,"CHECKED":617,"UNCHECKED":618,"LOCK":619,"USING":620,"UNSAFE":621,"modifiers":622,"FIXED":623,"invocation-expression":261,"NEW":624,"unary-expression":625,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"IF":626,"SWITCH":627,"WHILE":628,"DO":629,"FOR":630,"FOREACH":631,"YIELD":632,"BREAK":633,"CONTINUE":634,"GOTO":635,"RETURN":636,"THROW":637,"modifier":30,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-no-array-creation-expression":227,"array-creation-expression":228,"ASYNC":456,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"THIS":262,"BASE":263,"TYPEOF":265,"SIZEOF":266,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 1457 
method-header -> attributes modifiers type-with-interr member-name OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base . 
transitions ->  {}

item set 1458 
event-declaration -> attributes modifiers EVENT type-with-interr member-name OPEN_BRACE event-accessor-declarations CLOSE_BRACE . 
transitions ->  {}

item set 1459 
unary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS . 
transitions ->  {}

item set 1460 
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA .type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
type-with-interr -> .type INTERR
type-with-interr -> .type
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"type-with-interr":1487,"type":114,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94,"IDENTIFIER_WITH_KEYWORD":61,"IDENTIFIER_WITH_TEMPLATE":95,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"THIS":74,"ASYNC":75,"WHERE":76,"IDENTIFIER":59}

item set 1461 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS . 
transitions ->  {}

item set 1462 
conversion-operator-declarator -> IMPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS . 
transitions ->  {}

item set 1463 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS . 
transitions ->  {}

item set 1464 
conversion-operator-declarator -> EXPLICIT OPERATOR type-with-interr OPEN_PARENS type-with-interr IDENTIFIER_WITH_KEYWORD CLOSE_PARENS . 
transitions ->  {}

item set 1465 
constructor-initializer -> COLON BASE OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 1466 
constructor-initializer -> COLON THIS OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 1467 
interface-accessors -> attributes GET SEMICOLON attributes SET .SEMICOLON 
transitions ->  {"SEMICOLON":1488}

item set 1468 
interface-accessors -> attributes GET SEMICOLON SET SEMICOLON . 
transitions ->  {}

item set 1469 
interface-accessors -> attributes SET SEMICOLON attributes GET .SEMICOLON 
transitions ->  {"SEMICOLON":1489}

item set 1470 
interface-accessors -> attributes SET SEMICOLON GET SEMICOLON . 
transitions ->  {}

item set 1471 
interface-accessors -> SET SEMICOLON attributes GET SEMICOLON . 
transitions ->  {}

item set 1472 
interface-accessors -> GET SEMICOLON attributes SET SEMICOLON . 
transitions ->  {}

item set 1473 
interface-indexer-declaration -> type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1474 
interface-method-declaration -> attributes type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1475 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1490}

item set 1476 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1477 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base .SEMICOLON 
transitions ->  {"SEMICOLON":1491}

item set 1478 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE .interface-accessors CLOSE_BRACE
interface-accessors -> .attributes GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON GET SEMICOLON
interface-accessors -> .SET SEMICOLON attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON attributes SET SEMICOLON
interface-accessors -> .SET SEMICOLON GET SEMICOLON
interface-accessors -> .GET SEMICOLON SET SEMICOLON
interface-accessors -> .attributes SET SEMICOLON
interface-accessors -> .attributes GET SEMICOLON
interface-accessors -> .GET SEMICOLON
interface-accessors -> .SET SEMICOLON
attributes -> .attribute-sections
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"interface-accessors":1492,"attributes":1151,"SET":1152,"GET":1153,"attribute-sections":29,"attribute-section":31,"OPEN_BRACKET":53}

item set 1479 
interface-method-declaration -> NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1480 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1493}

item set 1481 
specific-catch-clause -> CATCH OPEN_PARENS type IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS block . 
transitions ->  {}

item set 1482 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1483 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1484 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1485 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .statement-expression SEMICOLON
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
embedded-statement -> .unsafe-statement
embedded-statement -> .fixed-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
statement-expression -> .invocation-expressions
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
unsafe-statement -> .UNSAFE block
fixed-statement -> .modifiers FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
fixed-statement -> .FIXED OPEN_PARENS type local-variable-declarators CLOSE_PARENS embedded-statement
invocation-expressions -> .invocation-expressions DOT invocation-expression
invocation-expressions -> .invocation-expression
invocation-expressions -> .
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
object-creation-expression -> .NEW type-with-identifier OPEN_PARENS CLOSE_PARENS block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier block-expression-with-brace
object-creation-expression -> .NEW non-array-type rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW type-with-identifier rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET block-expression-with-brace
object-creation-expression -> .NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
object-creation-expression -> .NEW rank-specifiers block-expression-with-brace
object-creation-expression -> .NEW rank-specifiers
object-creation-expression -> .NEW block-expression-with-brace
assignment -> .unary-expression assignment-operator expression
assignment -> .unary-expression assignment-operator block-expression-with-brace
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement
break-statement -> .YIELD BREAK SEMICOLON
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER_WITH_TEMPLATE SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .YIELD RETURN block-expression-with-brace SEMICOLON
return-statement -> .YIELD RETURN expression SEMICOLON
return-statement -> .YIELD RETURN SEMICOLON
return-statement -> .RETURN block-expression-with-brace SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
modifiers -> .modifier
modifiers -> .modifiers modifier
invocation-expression -> .AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS type CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .OP_PTR unary-expression
unary-expression -> .OP_COALESCING unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .primary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
modifier -> .UNSAFE
modifier -> .ASYNC
modifier -> .PUBLIC
modifier -> .PARTIAL
modifier -> .PROTECTED
modifier -> .INTERNAL
modifier -> .PRIVATE
modifier -> .ABSTRACT
modifier -> .SEALED
modifier -> .STATIC
modifier -> .READONLY
modifier -> .VOLATILE
modifier -> .VIRTUAL
modifier -> .OVERRIDE
modifier -> .EXTERN
modifier -> .NEW
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .lambda-expression
primary-no-array-creation-expression -> .cast-expression
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .double-colon-access
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expressions
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR expression
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD OP_DBLPTR block
primary-no-array-creation-expression -> .IDENTIFIER_WITH_KEYWORD
primary-no-array-creation-expression -> .DELEGATE block
primary-no-array-creation-expression -> .delegate-expression
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET CLOSE_BRACKET argument-list-with-brace
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .STACKALLOC array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS dbl-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS type-expression-list CLOSE_PARENS OP_DBLPTR block
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR expression
lambda-expression -> .OPEN_PARENS expression-list CLOSE_PARENS OP_DBLPTR block
cast-expression -> .OPEN_PARENS type expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression block
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
cast-expression -> .OPEN_PARENS expression CLOSE_PARENS expression
cast-expression -> .OPEN_PARENS type-with-interr CLOSE_PARENS expression
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
double-colon-access -> .IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
member-access -> .invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression DOT IDENTIFIER_WITH_KEYWORD
member-access -> .type DOT IDENTIFIER_WITH_KEYWORD
member-access -> .invocation-expressions OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .primary-expression OP_PTR IDENTIFIER_WITH_KEYWORD
member-access -> .type OP_PTR IDENTIFIER_WITH_KEYWORD
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET dim-separators CLOSE_BRACKET
element-access -> .primary-no-array-creation-expression OPEN_BRACKET CLOSE_BRACKET
this-access -> .THIS
base-access -> .BASE DOT IDENTIFIER_WITH_TEMPLATE
base-access -> .BASE OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS block-expression-with-brace
delegate-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
delegate-creation-expression -> .NEW type block-expression-with-brace
typeof-expression -> .TYPEOF OPEN_PARENS type-with-interr CLOSE_PARENS
sizeof-expression -> .SIZEOF OPEN_PARENS type-with-interr CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
IDENTIFIER_WITH_KEYWORD -> .IDENTIFIER_WITH_TEMPLATE
IDENTIFIER_WITH_KEYWORD -> .ADD
IDENTIFIER_WITH_KEYWORD -> .REMOVE
IDENTIFIER_WITH_KEYWORD -> .SET
IDENTIFIER_WITH_KEYWORD -> .PARAMS
IDENTIFIER_WITH_KEYWORD -> .DEFAULT
IDENTIFIER_WITH_KEYWORD -> .METHOD
IDENTIFIER_WITH_KEYWORD -> .PARAM
IDENTIFIER_WITH_KEYWORD -> .ASSEMBLY
IDENTIFIER_WITH_KEYWORD -> .PROPERTY
IDENTIFIER_WITH_KEYWORD -> .MODULE
IDENTIFIER_WITH_KEYWORD -> .FIELD
IDENTIFIER_WITH_KEYWORD -> .TYPE
IDENTIFIER_WITH_KEYWORD -> .THIS
IDENTIFIER_WITH_KEYWORD -> .ASYNC
IDENTIFIER_WITH_KEYWORD -> .WHERE
delegate-expression -> .DELEGATE OPEN_PARENS formal-parameter-list CLOSE_PARENS block
delegate-expression -> .DELEGATE OPEN_PARENS CLOSE_PARENS block
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER
type -> .non-array-type STARS
type -> .array-type STARS
type -> .non-array-type
type -> .array-type
non-array-type -> .type-name
non-array-type -> .SBYTE
non-array-type -> .BYTE
non-array-type -> .SHORT
non-array-type -> .USHORT
non-array-type -> .INT
non-array-type -> .UINT
non-array-type -> .LONG
non-array-type -> .ULONG
non-array-type -> .CHAR
non-array-type -> .FLOAT
non-array-type -> .DOUBLE
non-array-type -> .DECIMAL
non-array-type -> .BOOL
non-array-type -> .OBJECT
non-array-type -> .STRING
non-array-type -> .VOID
array-type -> .type rank-specifiers
type-name -> .namespace-or-type-name
namespace-or-type-name -> .namespace-or-type-name DOUBLE_COLON IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER_WITH_KEYWORD
namespace-or-type-name -> .IDENTIFIER_WITH_KEYWORD 
transitions ->  {"embedded-statement":1494,"block":581,"empty-statement":582,"statement-expression":583,"selection-statement":584,"iteration-statement":585,"jump-statement":586,"try-statement":587,"checked-statement":588,"unchecked-statement":589,"lock-statement":590,"using-statement":591,"unsafe-statement":592,"fixed-statement":593,"OPEN_BRACE":382,"SEMICOLON":597,"invocation-expressions":598,"object-creation-expression":599,"assignment":600,"post-increment-expression":601,"post-decrement-expression":602,"pre-increment-expression":603,"pre-decrement-expression":604,"if-statement":605,"switch-statement":606,"while-statement":607,"do-statement":608,"for-statement":609,"foreach-statement":610,"break-statement":611,"continue-statement":612,"goto-statement":613,"return-statement":614,"throw-statement":615,"TRY":616,"CHECKED":617,"UNCHECKED":618,"LOCK":619,"USING":620,"UNSAFE":621,"modifiers":622,"FIXED":623,"invocation-expression":261,"NEW":624,"unary-expression":625,"primary-expression":223,"OP_INC":225,"OP_DEC":226,"IF":626,"SWITCH":627,"WHILE":628,"DO":629,"FOR":630,"FOREACH":631,"YIELD":632,"BREAK":633,"CONTINUE":634,"GOTO":635,"RETURN":636,"THROW":637,"modifier":30,"AWAIT":272,"PLUS":216,"OP_PTR":217,"OP_COALESCING":218,"MINUS":219,"BANG":220,"TILDE":221,"STAR":222,"primary-no-array-creation-expression":227,"array-creation-expression":228,"ASYNC":456,"PUBLIC":34,"PARTIAL":35,"PROTECTED":36,"INTERNAL":37,"PRIVATE":38,"ABSTRACT":39,"SEALED":40,"STATIC":41,"READONLY":42,"VOLATILE":43,"VIRTUAL":44,"OVERRIDE":45,"EXTERN":46,"literal":230,"lambda-expression":231,"cast-expression":232,"parenthesized-expression":233,"double-colon-access":234,"member-access":235,"element-access":237,"this-access":238,"base-access":239,"delegate-creation-expression":242,"typeof-expression":244,"sizeof-expression":245,"checked-expression":246,"unchecked-expression":247,"IDENTIFIER_WITH_KEYWORD":248,"DELEGATE":249,"delegate-expression":250,"STACKALLOC":251,"BOOLEAN_LITERAL":253,"REAL_LITERAL":254,"INTEGER_LITERAL":255,"STRING_LITERAL":256,"CHARACTER_LITERAL":257,"NULL":258,"OPEN_PARENS":259,"IDENTIFIER_WITH_TEMPLATE":360,"type":260,"THIS":262,"BASE":263,"TYPEOF":265,"SIZEOF":266,"ADD":62,"REMOVE":63,"SET":64,"PARAMS":65,"DEFAULT":66,"METHOD":67,"PARAM":68,"ASSEMBLY":69,"PROPERTY":70,"MODULE":71,"FIELD":72,"TYPE":73,"WHERE":76,"TRUE":270,"FALSE":271,"IDENTIFIER":59,"non-array-type":115,"array-type":116,"type-name":117,"SBYTE":118,"BYTE":119,"SHORT":120,"USHORT":121,"INT":122,"UINT":123,"LONG":124,"ULONG":125,"CHAR":126,"FLOAT":127,"DOUBLE":128,"DECIMAL":129,"BOOL":130,"OBJECT":131,"STRING":132,"VOID":133,"namespace-or-type-name":94}

item set 1486 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER_WITH_KEYWORD IN expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1487 
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr .IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER TEMPLATE
IDENTIFIER_WITH_TEMPLATE -> .IDENTIFIER 
transitions ->  {"IDENTIFIER_WITH_TEMPLATE":1495,"IDENTIFIER":59}

item set 1488 
interface-accessors -> attributes GET SEMICOLON attributes SET SEMICOLON . 
transitions ->  {}

item set 1489 
interface-accessors -> attributes SET SEMICOLON attributes GET SEMICOLON . 
transitions ->  {}

item set 1490 
interface-indexer-declaration -> attributes type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1491 
interface-method-declaration -> attributes NEW type-with-interr IDENTIFIER_WITH_TEMPLATE OPEN_PARENS formal-parameter-list CLOSE_PARENS where-base SEMICOLON . 
transitions ->  {}

item set 1492 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors .CLOSE_BRACE 
transitions ->  {"CLOSE_BRACE":1496}

item set 1493 
interface-indexer-declaration -> NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1494 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 1495 
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":1497}

item set 1496 
interface-indexer-declaration -> attributes NEW type-with-interr THIS OPEN_BRACKET formal-parameter-list CLOSE_BRACKET OPEN_BRACE interface-accessors CLOSE_BRACE . 
transitions ->  {}

item set 1497 
binary-operator-declarator -> type-with-interr OPERATOR overloadable-operator OPEN_PARENS type-with-interr IDENTIFIER_WITH_TEMPLATE COMMA type-with-interr IDENTIFIER_WITH_TEMPLATE CLOSE_PARENS . 
transitions ->  {}
1498 states.
Building lookahead grammar.
Computing lookaheads.
Building parse table.
Conflict at state: 7, token: OPEN_BRACKET
  reduce by rule: global-attributes -> global-attribute-sections
  shift token (then go to state 56)
Conflict at state: 83, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASSEMBLY
  reduce by rule: global-attribute-target -> ASSEMBLY
Conflict at state: 83, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASSEMBLY
  reduce by rule: global-attribute-target -> ASSEMBLY
Conflict at state: 83, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASSEMBLY
  reduce by rule: global-attribute-target -> ASSEMBLY
Conflict at state: 83, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASSEMBLY
  reduce by rule: global-attribute-target -> ASSEMBLY
Conflict at state: 83, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASSEMBLY
  reduce by rule: global-attribute-target -> ASSEMBLY
Conflict at state: 83, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASSEMBLY
  reduce by rule: global-attribute-target -> ASSEMBLY
Conflict at state: 84, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> MODULE
  reduce by rule: global-attribute-target -> MODULE
Conflict at state: 84, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> MODULE
  reduce by rule: global-attribute-target -> MODULE
Conflict at state: 84, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> MODULE
  reduce by rule: global-attribute-target -> MODULE
Conflict at state: 84, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> MODULE
  reduce by rule: global-attribute-target -> MODULE
Conflict at state: 84, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> MODULE
  reduce by rule: global-attribute-target -> MODULE
Conflict at state: 84, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> MODULE
  reduce by rule: global-attribute-target -> MODULE
Conflict at state: 86, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 86, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 86, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 86, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 86, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 86, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> FIELD
  reduce by rule: attribute-target -> FIELD
Conflict at state: 88, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 88, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 88, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 88, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 88, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 88, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> METHOD
  reduce by rule: attribute-target -> METHOD
Conflict at state: 89, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 89, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 89, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 89, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 89, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 89, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAM
  reduce by rule: attribute-target -> PARAM
Conflict at state: 90, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 90, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 90, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 90, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 90, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 90, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PROPERTY
  reduce by rule: attribute-target -> PROPERTY
Conflict at state: 92, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 92, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 92, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 92, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 92, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 92, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> TYPE
  reduce by rule: attribute-target -> TYPE
Conflict at state: 94, token: DOT
  reduce by rule: type-name -> namespace-or-type-name
  shift token (then go to state 142)
Conflict at state: 97, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 110, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 111, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 115, token: STAR
  reduce by rule: type -> non-array-type
  shift token (then go to state 190)
Conflict at state: 116, token: STAR
  reduce by rule: type -> array-type
  shift token (then go to state 190)
Conflict at state: 150, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 150, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 150, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 150, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 150, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 201)
Conflict at state: 150, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 150, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 150, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 150, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 154, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 155, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 155, token: OPEN_BRACE
  reduce by rule: where-unit -> 
  reduce by rule: where-base -> where-units
Conflict at state: 155, token: COMMA
  reduce by rule: where-unit -> 
  shift token (then go to state 284)
Conflict at state: 155, token: SEMICOLON
  reduce by rule: where-unit -> 
  reduce by rule: where-base -> where-units
Conflict at state: 159, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 165, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 166, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 169, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 170, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 171, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 175, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 178, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 186, token: OPEN_BRACKET
  reduce by rule: array-type -> type rank-specifiers
  shift token (then go to state 188)
Conflict at state: 189, token: STAR
  reduce by rule: type -> non-array-type STARS
  shift token (then go to state 334)
Conflict at state: 191, token: STAR
  reduce by rule: type -> array-type STARS
  shift token (then go to state 334)
Conflict at state: 207, token: ASSIGN
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 342)
Conflict at state: 207, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 343)
Conflict at state: 211, token: INTERR
  reduce by rule: conditional-expression -> conditional-or-expression
  shift token (then go to state 344)
Conflict at state: 211, token: OP_OR
  reduce by rule: conditional-expression -> conditional-or-expression
  shift token (then go to state 345)
Conflict at state: 212, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 357)
Conflict at state: 212, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 356)
Conflict at state: 212, token: OP_XOR_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 355)
Conflict at state: 212, token: OP_OR_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 354)
Conflict at state: 212, token: OP_AND_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 353)
Conflict at state: 212, token: OP_MOD_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 352)
Conflict at state: 212, token: OP_DIV_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 351)
Conflict at state: 212, token: OP_MULT_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 350)
Conflict at state: 212, token: OP_SUB_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 349)
Conflict at state: 212, token: OP_ADD_ASSIGNMENT
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 348)
Conflict at state: 212, token: ASSIGN
  reduce by rule: multiplicative-expression -> unary-expression
  shift token (then go to state 347)
Conflict at state: 213, token: OP_AND
  reduce by rule: conditional-or-expression -> conditional-and-expression
  shift token (then go to state 358)
Conflict at state: 216, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 216, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 216, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 216, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 216, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 216, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 216, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 216, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 216, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 216, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 216, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 216, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 216, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 216, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 216, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 216, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 216, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 216, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 216, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 216, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 216, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 216, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 216, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 216, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 216, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 216, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 216, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 216, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 216, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 216, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 216, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 216, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 216, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 216, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 216, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 216, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 216, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 216, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 216, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 216, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 216, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 216, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 216, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 216, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 216, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 216, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 216, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 216, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 216, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 216, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 216, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 216, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 216, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 216, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 216, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 216, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 216, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 216, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 217, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 217, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 217, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 217, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 217, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 217, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 217, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 217, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 217, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 217, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 217, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 217, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 217, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 217, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 217, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 217, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 217, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 217, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 217, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 217, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 217, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 217, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 217, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 217, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 217, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 217, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 217, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 217, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 217, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 217, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 217, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 217, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 217, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 217, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 217, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 217, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 217, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 217, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 217, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 217, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 217, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 217, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 217, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 217, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 217, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 217, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 217, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 217, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 217, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 217, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 217, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 217, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 217, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 217, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 217, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 217, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 217, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 217, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 218, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 218, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 218, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 218, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 218, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 218, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 218, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 218, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 218, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 218, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 218, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 218, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 218, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 218, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 218, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 218, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 218, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 218, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 218, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 218, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 218, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 218, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 218, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 218, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 218, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 218, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 218, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 218, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 218, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 218, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 218, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 218, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 218, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 218, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 218, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 218, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 218, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 218, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 218, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 218, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 218, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 218, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 218, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 218, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 218, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 218, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 218, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 218, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 218, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 218, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 218, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 218, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 218, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 218, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 218, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 218, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 218, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 218, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 219, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 219, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 219, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 219, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 219, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 219, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 219, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 219, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 219, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 219, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 219, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 219, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 219, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 219, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 219, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 219, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 219, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 219, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 219, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 219, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 219, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 219, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 219, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 219, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 219, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 219, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 219, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 219, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 219, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 219, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 219, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 219, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 219, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 219, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 219, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 219, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 219, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 219, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 219, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 219, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 219, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 219, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 219, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 219, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 219, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 219, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 219, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 219, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 219, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 219, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 219, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 219, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 219, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 219, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 219, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 219, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 219, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 219, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 220, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 220, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 220, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 220, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 220, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 220, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 220, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 220, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 220, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 220, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 220, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 220, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 220, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 220, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 220, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 220, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 220, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 220, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 220, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 220, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 220, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 220, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 220, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 220, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 220, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 220, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 220, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 220, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 220, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 220, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 220, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 220, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 220, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 220, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 220, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 220, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 220, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 220, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 220, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 220, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 220, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 220, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 220, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 220, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 220, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 220, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 220, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 220, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 220, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 220, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 220, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 220, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 220, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 220, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 220, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 220, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 220, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 220, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 221, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 221, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 221, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 221, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 221, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 221, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 221, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 221, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 221, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 221, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 221, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 221, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 221, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 221, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 221, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 221, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 221, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 221, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 221, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 221, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 221, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 221, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 221, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 221, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 221, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 221, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 221, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 221, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 221, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 221, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 221, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 221, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 221, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 221, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 221, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 221, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 221, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 221, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 221, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 221, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 221, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 221, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 221, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 221, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 221, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 221, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 221, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 221, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 221, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 221, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 221, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 221, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 221, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 221, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 221, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 221, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 221, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 221, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 222, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 222, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 222, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 222, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 222, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 222, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 222, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 222, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 222, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 222, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 222, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 222, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 222, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 222, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 222, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 222, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 222, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 222, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 222, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 222, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 222, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 222, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 222, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 222, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 222, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 222, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 222, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 222, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 222, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 222, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 222, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 222, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 222, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 222, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 222, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 222, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 222, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 222, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 222, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 222, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 222, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 222, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 222, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 222, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 222, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 222, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 222, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 222, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 222, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 222, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 222, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 222, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 222, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 222, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 222, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 222, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 222, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 222, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 223, token: OP_PTR
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 368)
Conflict at state: 223, token: OP_DEC
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 370)
Conflict at state: 223, token: OP_INC
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 369)
Conflict at state: 223, token: DOT
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 367)
Conflict at state: 223, token: OPEN_PARENS
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 371)
Conflict at state: 224, token: BITWISE_OR
  reduce by rule: conditional-and-expression -> inclusive-or-expression
  shift token (then go to state 372)
Conflict at state: 225, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 225, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 225, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 225, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 225, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 225, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 225, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 225, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 225, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 225, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 225, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 225, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 225, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 225, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 225, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 225, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 225, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 225, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 225, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 225, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 225, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 225, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 225, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 225, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 225, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 225, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 225, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 225, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 225, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 225, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 225, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 225, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 225, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 225, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 225, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 225, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 225, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 225, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 225, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 225, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 225, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 225, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 225, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 225, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 225, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 225, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 225, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 225, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 225, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 225, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 225, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 225, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 225, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 225, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 225, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 225, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 225, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 225, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 226, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 226, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 226, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 226, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 226, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 226, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 226, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 226, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 226, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 226, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 226, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 226, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 226, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 226, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 226, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 226, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 226, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 226, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 226, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 226, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 226, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 226, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 226, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 226, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 226, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 226, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 226, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 226, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 226, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 226, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 226, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 226, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 226, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 226, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 226, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 226, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 226, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 226, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 226, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 226, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 226, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 226, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 226, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 226, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 226, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 226, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 226, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 226, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 226, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 226, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 226, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 226, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 226, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 226, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 226, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 226, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 226, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 226, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 227, token: OPEN_BRACKET
  reduce by rule: primary-expression -> primary-no-array-creation-expression
  shift token (then go to state 375)
Conflict at state: 229, token: CARET
  reduce by rule: inclusive-or-expression -> exclusive-or-expression
  shift token (then go to state 376)
Conflict at state: 236, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 378)
Conflict at state: 236, token: DOT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 377)
Conflict at state: 248, token: ASSIGN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: OP_ADD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: OP_SUB_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: OP_MULT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: OP_DIV_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: OP_MOD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: OP_AND_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: OP_OR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: OP_XOR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: COMMA
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: CLOSE_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: INTERR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: PLUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: OP_COALESCING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: MINUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: LT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: GT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: OP_LE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: OP_GE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: IS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: AS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: AMP
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: BITWISE_OR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: OP_OR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: OP_AND
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: CARET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: OP_NE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: OP_EQ
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: RIGHT_SHIFT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: OP_LEFT_SHIFT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: PERCENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: DIV
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: WHERE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: ASYNC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: TYPE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: FIELD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: MODULE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: PROPERTY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: ASSEMBLY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: PARAM
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: METHOD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: DEFAULT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: PARAMS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: SET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: REMOVE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: ADD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: UNCHECKED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: CHECKED
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: SIZEOF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: TYPEOF
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: NEW
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: BASE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: THIS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: VOID
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: STRING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: OBJECT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: BOOL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: DECIMAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: DOUBLE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: FLOAT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: CHAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: ULONG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: LONG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: UINT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: INT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: USHORT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: SHORT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: BYTE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: SBYTE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: STACKALLOC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: DELEGATE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: AWAIT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: NULL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: CHARACTER_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: STRING_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: INTEGER_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: REAL_LITERAL
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: FALSE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: TRUE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: TILDE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: BANG
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: CLOSE_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: CLOSE_BRACE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: SEMICOLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 248, token: OPEN_BRACE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 252, token: AMP
  reduce by rule: exclusive-or-expression -> and-expression
  shift token (then go to state 386)
Conflict at state: 259, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 259, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 259, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 259, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 259, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 259, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 259, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 259, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 259, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 259, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 259, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 259, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 259, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 259, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 259, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 259, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 259, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 259, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 259, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 259, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 259, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 259, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 259, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 259, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 259, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 259, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 259, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 259, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 259, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 259, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 259, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 259, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 259, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 259, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 259, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 259, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 259, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 259, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 259, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 259, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 259, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 259, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 259, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 259, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 259, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 259, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 259, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 259, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 259, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 259, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 259, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 259, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 259, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 259, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 259, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 259, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 259, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 259, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 262, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: OP_XOR_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: OP_OR_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: OP_AND_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: OP_MOD_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: OP_DIV_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: OP_MULT_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: OP_SUB_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: OP_ADD_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: ASSIGN
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: OP_PTR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: OP_INC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: OP_DEC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: INTERR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: CLOSE_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: STAR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: DIV
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: PERCENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: OP_LEFT_SHIFT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: RIGHT_SHIFT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: OP_EQ
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: OP_NE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: CARET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: OP_AND
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: OP_OR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: BITWISE_OR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: AMP
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: AS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: IS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: OP_COALESCING
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: OP_GE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: OP_LE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: GT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: LT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: MINUS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: PLUS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: OP_DBLPTR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: CLOSE_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: CLOSE_BRACE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: BANG
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: TILDE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: TRUE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: FALSE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: REAL_LITERAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: INTEGER_LITERAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: STRING_LITERAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: CHARACTER_LITERAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: NULL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: IDENTIFIER
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: AWAIT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: DELEGATE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: STACKALLOC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: SBYTE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: BYTE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: SHORT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: USHORT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: INT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: UINT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: LONG
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: ULONG
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: CHAR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: FLOAT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: DOUBLE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: DECIMAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: BOOL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: OBJECT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: STRING
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: VOID
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: BASE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: NEW
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: TYPEOF
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: SIZEOF
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: CHECKED
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: UNCHECKED
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: ADD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: REMOVE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: SET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: PARAMS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: DEFAULT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: METHOD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: PARAM
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: ASSEMBLY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: PROPERTY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: MODULE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: FIELD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: TYPE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: WHERE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: SEMICOLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 262, token: OPEN_BRACE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  reduce by rule: this-access -> THIS
Conflict at state: 269, token: OP_EQ
  reduce by rule: and-expression -> equality-expression
  shift token (then go to state 408)
Conflict at state: 269, token: OP_NE
  reduce by rule: and-expression -> equality-expression
  shift token (then go to state 409)
Conflict at state: 272, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 273, token: OP_COALESCING
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 415)
Conflict at state: 273, token: AS
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 417)
Conflict at state: 273, token: IS
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 416)
Conflict at state: 273, token: OP_GE
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 414)
Conflict at state: 273, token: OP_LE
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 413)
Conflict at state: 273, token: GT
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 412)
Conflict at state: 273, token: LT
  reduce by rule: equality-expression -> relational-expression
  shift token (then go to state 411)
Conflict at state: 274, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> shift-expression
  shift token (then go to state 418)
Conflict at state: 274, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> shift-expression
  shift token (then go to state 419)
Conflict at state: 275, token: OP_COALESCING
  reduce by rule: shift-expression -> additive-expression
  shift token (then go to state 422)
Conflict at state: 275, token: OP_PTR
  reduce by rule: shift-expression -> additive-expression
  shift token (then go to state 421)
Conflict at state: 275, token: MINUS
  reduce by rule: shift-expression -> additive-expression
  shift token (then go to state 423)
Conflict at state: 275, token: PLUS
  reduce by rule: shift-expression -> additive-expression
  shift token (then go to state 420)
Conflict at state: 276, token: STAR
  reduce by rule: additive-expression -> multiplicative-expression
  shift token (then go to state 424)
Conflict at state: 276, token: DIV
  reduce by rule: additive-expression -> multiplicative-expression
  shift token (then go to state 425)
Conflict at state: 276, token: PERCENT
  reduce by rule: additive-expression -> multiplicative-expression
  shift token (then go to state 426)
Conflict at state: 286, token: COMMA
  reduce by rule: class-base -> COLON type-with-interr
  shift token (then go to state 459)
Conflict at state: 286, token: WHERE
  reduce by rule: interface-type-list -> type-with-interr
  reduce by rule: class-base -> COLON type-with-interr
Conflict at state: 286, token: COMMA
  reduce by rule: interface-type-list -> type-with-interr
  shift token (then go to state 459)
Conflict at state: 286, token: OPEN_BRACE
  reduce by rule: interface-type-list -> type-with-interr
  reduce by rule: class-base -> COLON type-with-interr
Conflict at state: 287, token: COMMA
  reduce by rule: class-base -> COLON interface-type-list
  shift token (then go to state 460)
Conflict at state: 290, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 291, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 292, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 293, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 297, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 299, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 304, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 306, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 308, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 315, token: COMMA
  reduce by rule: struct-interfaces -> COLON interface-type-list
  shift token (then go to state 460)
Conflict at state: 320, token: COMMA
  reduce by rule: interface-base -> COLON interface-type-list
  shift token (then go to state 460)
Conflict at state: 339, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 339, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 339, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 339, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 339, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 339, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 339, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 339, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 342, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 342, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 342, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 342, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 342, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 342, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 342, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 342, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 343, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 344, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 344, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 344, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 344, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 344, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 344, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 344, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 344, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 344, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 344, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 344, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 344, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 344, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 344, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 344, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 344, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 344, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 344, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 344, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 344, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 344, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 344, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 344, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 344, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 344, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 344, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 344, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 344, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 344, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 344, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 344, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 344, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 344, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 344, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 344, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 344, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 344, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 344, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 344, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 344, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 344, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 344, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 344, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 344, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 344, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 344, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 344, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 344, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 344, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 344, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 344, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 344, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 344, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 344, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 344, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 344, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 344, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 344, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 345, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 345, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 345, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 345, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 345, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 345, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 345, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 345, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 345, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 345, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 345, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 345, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 345, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 345, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 345, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 345, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 345, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 345, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 345, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 345, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 345, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 345, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 345, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 345, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 345, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 345, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 345, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 345, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 345, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 345, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 345, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 345, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 345, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 345, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 345, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 345, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 345, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 345, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 345, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 345, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 345, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 345, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 345, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 345, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 345, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 345, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 345, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 345, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 345, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 345, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 345, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 345, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 345, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 345, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 345, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 345, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 345, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 345, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 346, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 346, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 346, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 346, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 346, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 346, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 346, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 346, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 346, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 346, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 346, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 346, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 346, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 346, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 346, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 346, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 346, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 346, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 346, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 346, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 346, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 346, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 346, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 346, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 346, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 346, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 346, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 346, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 346, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 346, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 346, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 346, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 346, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 346, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 346, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 346, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 346, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 346, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 346, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 346, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 346, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 346, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 346, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 346, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 346, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 346, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 346, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 346, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 346, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 346, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 346, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 346, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 346, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 346, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 346, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 346, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 346, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 346, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 346, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 403)
Conflict at state: 358, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 358, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 358, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 358, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 358, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 358, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 358, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 358, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 358, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 358, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 358, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 358, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 358, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 358, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 358, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 358, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 358, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 358, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 358, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 358, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 358, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 358, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 358, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 358, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 358, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 358, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 358, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 358, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 358, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 358, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 358, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 358, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 358, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 358, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 358, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 358, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 358, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 358, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 358, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 358, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 358, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 358, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 358, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 358, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 358, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 358, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 358, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 358, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 358, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 358, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 358, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 358, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 358, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 358, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 358, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 358, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 358, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 358, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 360, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 343)
Conflict at state: 371, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 371, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 371, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 371, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 371, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 554)
Conflict at state: 371, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 371, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 371, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 371, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 372, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 372, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 372, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 372, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 372, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 372, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 372, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 372, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 372, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 372, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 372, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 372, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 372, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 372, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 372, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 372, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 372, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 372, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 372, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 372, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 372, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 372, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 372, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 372, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 372, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 372, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 372, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 372, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 372, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 372, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 372, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 372, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 372, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 372, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 372, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 372, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 372, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 372, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 372, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 372, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 372, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 372, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 372, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 372, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 372, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 372, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 372, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 372, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 372, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 372, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 372, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 372, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 372, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 372, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 372, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 372, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 372, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 372, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 375, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 375, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 375, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 375, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 375, token: CLOSE_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 562)
Conflict at state: 375, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 375, token: COMMA
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 375, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 375, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 375, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 376, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 376, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 376, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 376, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 376, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 376, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 376, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 376, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 376, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 376, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 376, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 376, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 376, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 376, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 376, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 376, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 376, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 376, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 376, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 376, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 376, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 376, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 376, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 376, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 376, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 376, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 376, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 376, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 376, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 376, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 376, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 376, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 376, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 376, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 376, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 376, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 376, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 376, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 376, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 376, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 376, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 376, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 376, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 376, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 376, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 376, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 376, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 376, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 376, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 376, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 376, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 376, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 376, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 376, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 376, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 376, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 376, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 376, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 377, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 379, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 379, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 379, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 379, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 379, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 379, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 379, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 379, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 379, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 379, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 379, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 379, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 379, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 379, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 379, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 379, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 379, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 379, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 379, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 379, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 379, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 379, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 379, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 379, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 379, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 379, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 379, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 379, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 379, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 379, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 379, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 379, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 379, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 379, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 379, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 379, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 379, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 379, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 379, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 379, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 379, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 379, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 379, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 379, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 379, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 379, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 379, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 379, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 379, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 379, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 379, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 379, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 379, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 379, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 379, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 379, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 379, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 379, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 379, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 382, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 597)
Conflict at state: 382, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 382, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 382, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 382, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 382, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 382, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 382, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 382, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 382, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 382, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 382, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 382, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 382, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 382, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 382, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 456)
Conflict at state: 382, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 382, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 382, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 382, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 382, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 382, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 383, token: OPEN_BRACKET
  reduce by rule: type -> non-array-type
  shift token (then go to state 638)
Conflict at state: 386, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 386, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 386, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 386, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 386, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 386, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 386, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 386, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 386, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 386, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 386, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 386, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 386, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 386, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 386, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 386, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 386, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 386, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 386, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 386, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 386, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 386, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 386, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 386, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 386, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 386, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 386, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 386, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 386, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 386, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 386, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 386, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 386, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 386, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 386, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 386, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 386, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 386, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 386, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 386, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 386, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 386, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 386, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 386, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 386, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 386, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 386, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 386, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 386, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 386, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 386, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 386, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 386, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 386, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 386, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 386, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 386, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 386, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 390, token: DOT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 393)
Conflict at state: 390, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 649)
Conflict at state: 390, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 390, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 390, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 390, token: INTERR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 185)
Conflict at state: 390, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  reduce by rule: type-with-interr -> type
Conflict at state: 390, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 188)
Conflict at state: 390, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 390, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 390, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 390, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 391, token: CLOSE_PARENS
  reduce by rule: expression-list -> expression
  shift token (then go to state 650)
Conflict at state: 391, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 391, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 391, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 391, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 391, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 650)
Conflict at state: 391, token: COMMA
  reduce by rule: invocation-expressions -> 
  reduce by rule: expression-list -> expression
Conflict at state: 391, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 391, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 391, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 391, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 396, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 396, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 396, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 396, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 396, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 396, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 396, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 396, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 399, token: OPEN_BRACKET
  reduce by rule: type -> non-array-type
  shift token (then go to state 664)
Conflict at state: 399, token: OPEN_PARENS
  reduce by rule: type-with-identifier -> non-array-type
  reduce by rule: type -> non-array-type
Conflict at state: 399, token: OPEN_BRACE
  reduce by rule: type-with-identifier -> non-array-type
  reduce by rule: type -> non-array-type
Conflict at state: 399, token: OPEN_BRACKET
  reduce by rule: type-with-identifier -> non-array-type
  shift token (then go to state 664)
Conflict at state: 400, token: OPEN_BRACKET
  reduce by rule: object-creation-expression -> NEW rank-specifiers
  shift token (then go to state 188)
Conflict at state: 400, token: OPEN_BRACE
  reduce by rule: object-creation-expression -> NEW rank-specifiers
  shift token (then go to state 403)
Conflict at state: 403, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 403, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 403, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 403, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 403, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 403, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 403, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 403, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 406, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 406, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 406, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 406, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 406, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 406, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 406, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 406, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 407, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 407, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 407, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 407, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 407, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 407, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 407, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 407, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 408, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 408, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 408, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 408, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 408, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 408, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 408, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 408, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 408, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 408, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 408, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 408, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 408, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 408, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 408, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 408, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 408, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 408, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 408, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 408, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 408, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 408, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 408, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 408, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 408, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 408, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 408, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 408, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 408, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 408, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 408, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 408, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 408, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 408, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 408, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 408, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 408, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 408, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 408, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 408, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 408, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 408, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 408, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 408, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 408, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 408, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 408, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 408, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 408, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 408, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 408, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 408, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 408, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 408, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 408, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 408, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 408, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 408, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 409, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 409, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 409, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 409, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 409, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 409, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 409, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 409, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 409, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 409, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 409, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 409, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 409, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 409, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 409, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 409, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 409, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 409, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 409, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 409, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 409, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 409, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 409, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 409, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 409, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 409, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 409, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 409, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 409, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 409, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 409, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 409, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 409, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 409, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 409, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 409, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 409, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 409, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 409, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 409, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 409, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 409, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 409, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 409, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 409, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 409, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 409, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 409, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 409, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 409, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 409, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 409, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 409, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 409, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 409, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 409, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 409, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 409, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 411, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 411, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 411, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 411, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 411, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 411, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 411, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 411, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 411, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 411, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 411, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 411, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 411, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 411, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 411, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 411, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 411, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 411, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 411, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 411, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 411, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 411, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 411, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 411, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 411, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 411, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 411, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 411, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 411, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 411, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 411, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 411, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 411, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 411, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 411, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 411, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 411, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 411, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 411, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 411, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 411, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 411, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 411, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 411, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 411, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 411, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 411, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 411, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 411, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 411, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 411, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 411, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 411, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 411, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 411, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 411, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 411, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 411, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 412, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 412, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 412, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 412, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 412, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 412, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 412, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 412, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 412, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 412, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 412, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 412, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 412, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 412, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 412, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 412, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 412, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 412, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 412, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 412, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 412, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 412, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 412, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 412, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 412, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 412, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 412, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 412, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 412, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 412, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 412, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 412, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 412, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 412, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 412, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 412, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 412, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 412, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 412, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 412, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 412, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 412, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 412, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 412, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 412, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 412, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 412, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 412, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 412, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 412, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 412, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 412, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 412, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 412, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 412, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 412, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 412, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 412, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 413, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 413, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 413, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 413, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 413, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 413, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 413, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 413, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 413, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 413, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 413, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 413, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 413, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 413, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 413, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 413, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 413, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 413, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 413, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 413, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 413, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 413, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 413, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 413, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 413, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 413, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 413, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 413, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 413, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 413, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 413, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 413, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 413, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 413, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 413, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 413, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 413, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 413, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 413, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 413, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 413, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 413, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 413, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 413, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 413, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 413, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 413, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 413, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 413, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 413, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 413, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 413, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 413, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 413, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 413, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 413, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 413, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 413, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 414, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 414, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 414, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 414, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 414, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 414, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 414, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 414, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 414, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 414, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 414, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 414, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 414, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 414, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 414, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 414, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 414, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 414, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 414, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 414, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 414, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 414, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 414, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 414, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 414, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 414, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 414, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 414, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 414, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 414, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 414, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 414, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 414, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 414, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 414, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 414, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 414, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 414, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 414, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 414, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 414, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 414, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 414, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 414, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 414, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 414, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 414, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 414, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 414, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 414, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 414, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 414, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 414, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 414, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 414, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 414, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 414, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 414, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 415, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 415, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 415, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 415, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 415, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 415, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 415, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 415, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 415, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 415, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 415, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 415, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 415, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 415, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 415, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 415, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 415, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 415, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 415, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 415, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 415, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 415, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 415, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 415, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 415, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 415, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 415, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 415, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 415, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 415, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 415, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 415, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 415, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 415, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 415, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 415, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 415, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 415, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 415, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 415, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 415, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 415, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 415, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 415, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 415, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 415, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 415, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 415, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 415, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 415, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 415, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 415, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 415, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 415, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 415, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 415, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 415, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 415, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 418, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 418, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 418, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 418, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 418, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 418, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 418, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 418, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 418, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 418, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 418, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 418, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 418, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 418, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 418, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 418, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 418, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 418, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 418, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 418, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 418, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 418, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 418, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 418, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 418, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 418, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 418, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 418, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 418, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 418, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 418, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 418, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 418, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 418, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 418, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 418, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 418, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 418, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 418, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 418, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 418, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 418, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 418, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 418, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 418, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 418, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 418, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 418, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 418, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 418, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 418, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 418, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 418, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 418, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 418, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 418, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 418, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 418, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 419, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 419, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 419, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 419, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 419, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 419, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 419, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 419, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 419, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 419, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 419, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 419, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 419, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 419, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 419, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 419, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 419, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 419, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 419, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 419, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 419, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 419, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 419, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 419, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 419, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 419, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 419, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 419, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 419, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 419, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 419, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 419, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 419, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 419, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 419, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 419, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 419, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 419, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 419, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 419, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 419, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 419, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 419, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 419, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 419, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 419, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 419, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 419, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 419, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 419, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 419, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 419, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 419, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 419, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 419, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 419, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 419, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 419, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 420, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 420, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 420, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 420, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 420, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 420, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 420, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 420, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 420, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 420, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 420, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 420, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 420, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 420, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 420, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 420, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 420, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 420, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 420, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 420, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 420, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 420, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 420, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 420, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 420, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 420, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 420, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 420, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 420, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 420, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 420, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 420, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 420, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 420, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 420, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 420, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 420, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 420, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 420, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 420, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 420, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 420, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 420, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 420, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 420, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 420, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 420, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 420, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 420, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 420, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 420, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 420, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 420, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 420, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 420, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 420, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 420, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 420, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 421, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 421, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 421, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 421, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 421, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 421, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 421, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 421, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 421, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 421, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 421, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 421, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 421, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 421, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 421, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 421, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 421, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 421, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 421, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 421, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 421, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 421, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 421, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 421, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 421, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 421, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 421, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 421, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 421, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 421, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 421, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 421, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 421, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 421, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 421, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 421, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 421, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 421, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 421, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 421, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 421, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 421, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 421, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 421, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 421, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 421, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 421, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 421, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 421, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 421, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 421, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 421, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 421, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 421, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 421, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 421, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 421, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 421, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 422, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 422, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 422, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 422, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 422, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 422, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 422, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 422, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 422, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 422, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 422, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 422, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 422, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 422, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 422, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 422, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 422, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 422, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 422, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 422, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 422, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 422, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 422, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 422, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 422, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 422, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 422, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 422, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 422, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 422, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 422, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 422, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 422, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 422, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 422, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 422, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 422, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 422, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 422, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 422, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 422, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 422, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 422, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 422, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 422, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 422, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 422, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 422, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 422, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 422, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 422, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 422, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 422, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 422, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 422, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 422, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 422, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 422, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 423, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 423, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 423, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 423, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 423, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 423, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 423, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 423, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 423, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 423, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 423, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 423, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 423, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 423, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 423, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 423, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 423, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 423, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 423, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 423, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 423, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 423, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 423, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 423, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 423, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 423, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 423, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 423, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 423, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 423, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 423, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 423, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 423, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 423, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 423, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 423, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 423, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 423, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 423, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 423, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 423, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 423, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 423, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 423, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 423, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 423, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 423, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 423, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 423, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 423, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 423, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 423, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 423, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 423, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 423, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 423, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 423, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 423, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 424, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 424, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 424, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 424, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 424, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 424, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 424, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 424, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 424, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 424, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 424, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 424, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 424, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 424, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 424, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 424, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 424, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 424, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 424, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 424, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 424, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 424, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 424, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 424, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 424, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 424, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 424, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 424, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 424, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 424, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 424, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 424, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 424, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 424, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 424, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 424, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 424, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 424, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 424, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 424, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 424, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 424, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 424, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 424, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 424, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 424, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 424, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 424, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 424, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 424, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 424, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 424, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 424, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 424, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 424, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 424, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 424, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 424, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 425, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 425, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 425, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 425, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 425, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 425, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 425, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 425, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 425, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 425, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 425, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 425, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 425, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 425, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 425, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 425, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 425, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 425, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 425, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 425, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 425, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 425, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 425, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 425, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 425, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 425, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 425, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 425, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 425, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 425, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 425, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 425, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 425, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 425, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 425, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 425, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 425, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 425, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 425, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 425, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 425, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 425, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 425, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 425, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 425, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 425, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 425, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 425, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 425, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 425, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 425, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 425, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 425, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 425, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 425, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 425, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 425, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 425, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 426, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 426, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 426, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 426, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 426, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 426, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 426, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 426, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 426, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 426, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 426, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 426, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 426, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 426, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 426, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 426, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 426, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 426, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 426, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 426, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 426, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 426, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 426, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 426, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 426, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 426, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 426, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 426, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 426, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 426, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 426, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 426, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 426, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 426, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 426, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 426, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 426, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 426, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 426, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 426, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 426, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 426, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 426, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 426, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 426, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 426, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 426, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 426, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 426, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 426, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 426, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 426, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 426, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 426, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 426, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 426, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 426, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 426, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 456, token: EXPLICIT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: IMPLICIT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: EVENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: VOID
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: STRING
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: OBJECT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: BOOL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: DECIMAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: DOUBLE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: FLOAT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: CHAR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: ULONG
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: LONG
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: UINT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: INT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: USHORT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: SHORT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: BYTE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: SBYTE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: IDENTIFIER
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: WHERE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: TYPE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: FIELD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: MODULE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: PROPERTY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: ASSEMBLY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: PARAM
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: METHOD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: DEFAULT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: PARAMS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: SET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: REMOVE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: ADD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: CONST
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: DELEGATE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: ENUM
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: INTERFACE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: STRUCT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: CLASS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: NEW
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: EXTERN
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: OVERRIDE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: VIRTUAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: VOLATILE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: READONLY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: STATIC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: SEALED
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: ABSTRACT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: PRIVATE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: INTERNAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: PROTECTED
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: PARTIAL
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: PUBLIC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: UNSAFE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: DOT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: INTERR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: STAR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: OP_DBLPTR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: SEMICOLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: COMMA
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: ASSIGN
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: OP_INC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: OP_DEC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: OP_XOR_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: OP_OR_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: OP_AND_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: OP_MOD_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: OP_DIV_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: OP_MULT_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: OP_SUB_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: OP_ADD_ASSIGNMENT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: OP_PTR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: FIXED
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 456, token: OPERATOR
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> ASYNC
  reduce by rule: modifier -> ASYNC
Conflict at state: 465, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 467, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 469, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 521, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 521, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 521, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 521, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 521, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 521, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 521, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 521, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 523, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 528, token: WHERE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 76)
Conflict at state: 528, token: ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 75)
Conflict at state: 528, token: THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 74)
Conflict at state: 528, token: TYPE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 73)
Conflict at state: 528, token: FIELD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 72)
Conflict at state: 528, token: MODULE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 71)
Conflict at state: 528, token: PROPERTY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 70)
Conflict at state: 528, token: ASSEMBLY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 69)
Conflict at state: 528, token: PARAM
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 68)
Conflict at state: 528, token: METHOD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 67)
Conflict at state: 528, token: DEFAULT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 66)
Conflict at state: 528, token: PARAMS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 65)
Conflict at state: 528, token: SET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 64)
Conflict at state: 528, token: REMOVE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 63)
Conflict at state: 528, token: ADD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 62)
Conflict at state: 528, token: IDENTIFIER
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 59)
Conflict at state: 531, token: WHERE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 76)
Conflict at state: 531, token: ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 75)
Conflict at state: 531, token: THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 74)
Conflict at state: 531, token: TYPE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 73)
Conflict at state: 531, token: FIELD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 72)
Conflict at state: 531, token: MODULE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 71)
Conflict at state: 531, token: PROPERTY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 70)
Conflict at state: 531, token: ASSEMBLY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 69)
Conflict at state: 531, token: PARAM
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 68)
Conflict at state: 531, token: METHOD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 67)
Conflict at state: 531, token: DEFAULT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 66)
Conflict at state: 531, token: PARAMS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 65)
Conflict at state: 531, token: SET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 64)
Conflict at state: 531, token: REMOVE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 63)
Conflict at state: 531, token: ADD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 62)
Conflict at state: 531, token: IDENTIFIER
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 59)
Conflict at state: 542, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 542, token: DOT
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 542, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 542, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 542, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 542, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> member-access
  reduce by rule: double-colon-access -> IDENTIFIER_WITH_TEMPLATE DOUBLE_COLON member-access
Conflict at state: 544, token: COLON
  reduce by rule: conditional-expression -> conditional-or-expression INTERR expression
  shift token (then go to state 801)
Conflict at state: 545, token: OP_AND
  reduce by rule: conditional-or-expression -> conditional-or-expression OP_OR conditional-and-expression
  shift token (then go to state 358)
Conflict at state: 549, token: BITWISE_OR
  reduce by rule: conditional-and-expression -> conditional-and-expression OP_AND inclusive-or-expression
  shift token (then go to state 372)
Conflict at state: 557, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 557, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 557, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 557, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 557, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 557, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 557, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 557, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 558, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 558, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 558, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 558, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 558, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 558, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 558, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 558, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 559, token: CARET
  reduce by rule: inclusive-or-expression -> inclusive-or-expression BITWISE_OR exclusive-or-expression
  shift token (then go to state 376)
Conflict at state: 564, token: AMP
  reduce by rule: exclusive-or-expression -> exclusive-or-expression CARET and-expression
  shift token (then go to state 386)
Conflict at state: 565, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 565, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 565, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 565, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 565, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 565, token: DOT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 565, token: STAR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 565, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 565, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 565, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 565, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 565, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 565, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 565, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 565, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 566, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 566, token: DOT
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 566, token: OP_PTR
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 566, token: OP_INC
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 566, token: OP_DEC
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 566, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> invocation-expression
  reduce by rule: invocation-expressions -> invocation-expressions DOT invocation-expression
Conflict at state: 573, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 597)
Conflict at state: 573, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 573, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 573, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 573, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 573, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 573, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 573, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 573, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 573, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 573, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 573, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 573, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 573, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 573, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 573, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 456)
Conflict at state: 573, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 573, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 573, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 573, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 573, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 573, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 578, token: IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: WHERE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: ASYNC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: THIS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: TYPE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: FIELD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: MODULE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: PROPERTY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: ASSEMBLY
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: PARAM
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: METHOD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: DEFAULT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: PARAMS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: SET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: REMOVE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: ADD
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: INTERR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: ASSIGN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: COMMA
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: SEMICOLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: OP_ADD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: OP_SUB_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: OP_MULT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: OP_DIV_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: OP_MOD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: OP_AND_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: OP_OR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: OP_XOR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 578, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 594, token: INTERR
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 822)
Conflict at state: 594, token: OP_PTR
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 368)
Conflict at state: 594, token: STAR
  reduce by rule: unary-expression -> primary-expression
  shift token (then go to state 190)
Conflict at state: 594, token: ASSIGN
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 594, token: CLOSE_PARENS
  reduce by rule: local-variable -> 
  reduce by rule: unary-expression -> primary-expression
Conflict at state: 598, token: OP_PTR
  reduce by rule: statement-expression -> invocation-expressions
  shift token (then go to state 378)
Conflict at state: 598, token: DOT
  reduce by rule: statement-expression -> invocation-expressions
  shift token (then go to state 377)
Conflict at state: 598, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: IDENTIFIER
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: WHERE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: ASYNC
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: THIS
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: TYPE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: FIELD
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: MODULE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: PROPERTY
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: ASSEMBLY
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: PARAM
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: METHOD
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: DEFAULT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: PARAMS
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: SET
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: REMOVE
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: ADD
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: STAR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: INTERR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 378)
Conflict at state: 598, token: DOT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 377)
Conflict at state: 598, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 598, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  reduce by rule: statement-expression -> invocation-expressions
Conflict at state: 599, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: IDENTIFIER
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: WHERE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: ASYNC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: THIS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: TYPE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: FIELD
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: MODULE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: PROPERTY
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: ASSEMBLY
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: PARAM
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: METHOD
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: DEFAULT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: PARAMS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: SET
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: REMOVE
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: ADD
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: STAR
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: INTERR
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: DOT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 599, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 601, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: IDENTIFIER
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: WHERE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: ASYNC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: THIS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: TYPE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: FIELD
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: MODULE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: PROPERTY
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: ASSEMBLY
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: PARAM
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: METHOD
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: DEFAULT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: PARAMS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: SET
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: REMOVE
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: ADD
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: STAR
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: INTERR
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: DOT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 601, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 602, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: IDENTIFIER
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: WHERE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: ASYNC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: THIS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: TYPE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: FIELD
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: MODULE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: PROPERTY
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: ASSEMBLY
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: PARAM
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: METHOD
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: DEFAULT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: PARAMS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: SET
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: REMOVE
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: ADD
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: STAR
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: INTERR
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: DOT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 602, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 603, token: SEMICOLON
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 603, token: ASSIGN
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 603, token: OP_ADD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 603, token: OP_SUB_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 603, token: OP_MULT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 603, token: OP_DIV_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 603, token: OP_MOD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 603, token: OP_AND_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 603, token: OP_OR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 603, token: OP_XOR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 603, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 603, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 603, token: COMMA
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 603, token: CLOSE_PARENS
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 604, token: SEMICOLON
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 604, token: ASSIGN
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 604, token: OP_ADD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 604, token: OP_SUB_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 604, token: OP_MULT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 604, token: OP_DIV_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 604, token: OP_MOD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 604, token: OP_AND_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 604, token: OP_OR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 604, token: OP_XOR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 604, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 604, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 604, token: COMMA
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 604, token: CLOSE_PARENS
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 624, token: ASYNC
  reduce by rule: modifier -> NEW
  shift token (then go to state 75)
Conflict at state: 629, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 597)
Conflict at state: 629, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 629, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 629, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 629, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 636, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 636, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 636, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 636, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 636, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 849)
Conflict at state: 636, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 636, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 636, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 636, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 637, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 637, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 637, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 637, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 637, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 851)
Conflict at state: 637, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 637, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 637, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 637, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 638, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 638, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 638, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 638, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 638, token: CLOSE_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 853)
Conflict at state: 638, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 638, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 638, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 638, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 640, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 640, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 640, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 640, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 640, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 855)
Conflict at state: 640, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 640, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 640, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 640, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 641, token: OP_EQ
  reduce by rule: and-expression -> and-expression AMP equality-expression
  shift token (then go to state 408)
Conflict at state: 641, token: OP_NE
  reduce by rule: and-expression -> and-expression AMP equality-expression
  shift token (then go to state 409)
Conflict at state: 643, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 643, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 643, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 643, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 643, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 643, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 643, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 643, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 643, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 643, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 643, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 643, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 643, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 643, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 643, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 643, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 643, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 643, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 643, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 643, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 643, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 643, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 643, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 643, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 643, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 643, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 643, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 643, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 643, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 643, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 643, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 643, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 643, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 643, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 643, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 643, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 643, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 643, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 643, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 643, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 643, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 643, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 643, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 643, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 643, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 643, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 643, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 643, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 643, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 643, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 643, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 643, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 643, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 643, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 643, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 643, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 643, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 643, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 647, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 647, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 647, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 647, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 647, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 647, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 647, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 647, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 648, token: CLOSE_PARENS
  reduce by rule: type-expression-list -> type expression
  shift token (then go to state 866)
Conflict at state: 649, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 649, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 649, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 649, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 649, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 649, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 649, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 649, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 650, token: OP_PTR
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 217)
Conflict at state: 650, token: OP_INC
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 225)
Conflict at state: 650, token: OP_DEC
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 226)
Conflict at state: 650, token: OPEN_PARENS
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 259)
Conflict at state: 650, token: STAR
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 222)
Conflict at state: 650, token: OP_COALESCING
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 218)
Conflict at state: 650, token: MINUS
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 219)
Conflict at state: 650, token: PLUS
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 216)
Conflict at state: 650, token: BANG
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 220)
Conflict at state: 650, token: TILDE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 221)
Conflict at state: 650, token: TRUE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 270)
Conflict at state: 650, token: FALSE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 271)
Conflict at state: 650, token: REAL_LITERAL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 254)
Conflict at state: 650, token: INTEGER_LITERAL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 255)
Conflict at state: 650, token: STRING_LITERAL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 256)
Conflict at state: 650, token: CHARACTER_LITERAL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 257)
Conflict at state: 650, token: NULL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 258)
Conflict at state: 650, token: IDENTIFIER
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 59)
Conflict at state: 650, token: AWAIT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 272)
Conflict at state: 650, token: DELEGATE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 249)
Conflict at state: 650, token: STACKALLOC
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 251)
Conflict at state: 650, token: SBYTE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 118)
Conflict at state: 650, token: BYTE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 119)
Conflict at state: 650, token: SHORT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 120)
Conflict at state: 650, token: USHORT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 121)
Conflict at state: 650, token: INT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 122)
Conflict at state: 650, token: UINT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 123)
Conflict at state: 650, token: LONG
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 124)
Conflict at state: 650, token: ULONG
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 125)
Conflict at state: 650, token: CHAR
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 126)
Conflict at state: 650, token: FLOAT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 127)
Conflict at state: 650, token: DOUBLE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 128)
Conflict at state: 650, token: DECIMAL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 129)
Conflict at state: 650, token: BOOL
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 130)
Conflict at state: 650, token: OBJECT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 131)
Conflict at state: 650, token: STRING
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 132)
Conflict at state: 650, token: VOID
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 133)
Conflict at state: 650, token: THIS
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 262)
Conflict at state: 650, token: BASE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 263)
Conflict at state: 650, token: NEW
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 264)
Conflict at state: 650, token: TYPEOF
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 265)
Conflict at state: 650, token: SIZEOF
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 266)
Conflict at state: 650, token: CHECKED
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 267)
Conflict at state: 650, token: UNCHECKED
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 268)
Conflict at state: 650, token: ADD
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 62)
Conflict at state: 650, token: REMOVE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 63)
Conflict at state: 650, token: SET
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 64)
Conflict at state: 650, token: PARAMS
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 65)
Conflict at state: 650, token: DEFAULT
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 66)
Conflict at state: 650, token: METHOD
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 67)
Conflict at state: 650, token: PARAM
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 68)
Conflict at state: 650, token: ASSEMBLY
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 69)
Conflict at state: 650, token: PROPERTY
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 70)
Conflict at state: 650, token: MODULE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 71)
Conflict at state: 650, token: FIELD
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 72)
Conflict at state: 650, token: TYPE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 73)
Conflict at state: 650, token: ASYNC
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 75)
Conflict at state: 650, token: WHERE
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
  shift token (then go to state 76)
Conflict at state: 650, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: OP_XOR_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: OP_OR_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: OP_AND_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: OP_MOD_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: OP_DIV_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: OP_MULT_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: OP_SUB_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: OP_ADD_ASSIGNMENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: ASSIGN
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: DOT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 650, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 650, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 650, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 650, token: PERCENT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: DIV
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 650, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 650, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 650, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 650, token: RIGHT_SHIFT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: OP_LEFT_SHIFT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: OP_GE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: OP_LE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: GT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: LT
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: OP_NE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: COMMA
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: CLOSE_BRACKET
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: OP_EQ
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: AMP
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: INTERR
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 650, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 650, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 650, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 650, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 650, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 650, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 650, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 650, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 650, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 650, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 650, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 650, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 650, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 650, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 650, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 650, token: CARET
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: BITWISE_OR
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: COLON
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: OP_AND
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: OP_OR
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 650, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 650, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 650, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 650, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 650, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 650, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 650, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 650, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 650, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 650, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 650, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 650, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 650, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 650, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 650, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 650, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 650, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 650, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 650, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 650, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 650, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 650, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 650, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 650, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 650, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 650, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 650, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 650, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 650, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 650, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 650, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 650, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 650, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 650, token: AS
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: IS
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 650, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  reduce by rule: parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS
Conflict at state: 652, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 652, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 652, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 652, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 652, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 652, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 652, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 652, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 652, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 652, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 652, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 652, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 652, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 652, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 652, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 652, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 652, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 652, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 652, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 652, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 652, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 652, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 652, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 652, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 652, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 652, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 652, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 652, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 652, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 652, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 652, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 652, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 652, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 652, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 652, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 652, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 652, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 652, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 652, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 652, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 652, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 652, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 652, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 652, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 652, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 652, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 652, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 652, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 652, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 652, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 652, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 652, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 652, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 652, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 652, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 652, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 652, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 652, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 657, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 657, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 657, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 657, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 657, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 873)
Conflict at state: 657, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 657, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 657, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 657, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 659, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 659, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 659, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 659, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 659, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 875)
Conflict at state: 659, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 659, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 659, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 659, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 662, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 662, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 662, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 662, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 662, token: COMMA
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 662, token: CLOSE_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 662, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 662, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 662, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 662, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 664, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 664, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 664, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 664, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 664, token: COMMA
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 333)
Conflict at state: 664, token: CLOSE_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 332)
Conflict at state: 664, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 664, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 664, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 664, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 666, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 666, token: OPEN_BRACE
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 666, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 666, token: STAR
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 666, token: DOUBLE_COLON
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 666, token: DOT
  reduce by rule: IDENTIFIER_WITH_TEMPLATE -> IDENTIFIER TEMPLATE
  reduce by rule: type-with-identifier -> IDENTIFIER TEMPLATE
Conflict at state: 675, token: OP_COALESCING
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 415)
Conflict at state: 675, token: AS
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 417)
Conflict at state: 675, token: IS
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 416)
Conflict at state: 675, token: OP_GE
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 414)
Conflict at state: 675, token: OP_LE
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 413)
Conflict at state: 675, token: GT
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 412)
Conflict at state: 675, token: LT
  reduce by rule: equality-expression -> equality-expression OP_EQ relational-expression
  shift token (then go to state 411)
Conflict at state: 676, token: OP_COALESCING
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 415)
Conflict at state: 676, token: AS
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 417)
Conflict at state: 676, token: IS
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 416)
Conflict at state: 676, token: OP_GE
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 414)
Conflict at state: 676, token: OP_LE
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 413)
Conflict at state: 676, token: GT
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 412)
Conflict at state: 676, token: LT
  reduce by rule: equality-expression -> equality-expression OP_NE relational-expression
  shift token (then go to state 411)
Conflict at state: 677, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 677, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 677, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 677, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 677, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 888)
Conflict at state: 677, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 677, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 677, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 677, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 678, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> relational-expression LT shift-expression
  shift token (then go to state 418)
Conflict at state: 678, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> relational-expression LT shift-expression
  shift token (then go to state 419)
Conflict at state: 679, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> relational-expression GT shift-expression
  shift token (then go to state 418)
Conflict at state: 679, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> relational-expression GT shift-expression
  shift token (then go to state 419)
Conflict at state: 680, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_LE shift-expression
  shift token (then go to state 418)
Conflict at state: 680, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_LE shift-expression
  shift token (then go to state 419)
Conflict at state: 681, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_GE shift-expression
  shift token (then go to state 418)
Conflict at state: 681, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_GE shift-expression
  shift token (then go to state 419)
Conflict at state: 682, token: OP_LEFT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_COALESCING shift-expression
  shift token (then go to state 418)
Conflict at state: 682, token: RIGHT_SHIFT
  reduce by rule: relational-expression -> relational-expression OP_COALESCING shift-expression
  shift token (then go to state 419)
Conflict at state: 683, token: OPEN_BRACKET
  reduce by rule: relational-expression -> relational-expression IS type
  shift token (then go to state 188)
Conflict at state: 684, token: OPEN_BRACKET
  reduce by rule: relational-expression -> relational-expression AS type
  shift token (then go to state 188)
Conflict at state: 685, token: OP_COALESCING
  reduce by rule: shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression
  shift token (then go to state 422)
Conflict at state: 685, token: OP_PTR
  reduce by rule: shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression
  shift token (then go to state 421)
Conflict at state: 685, token: MINUS
  reduce by rule: shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression
  shift token (then go to state 423)
Conflict at state: 685, token: PLUS
  reduce by rule: shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression
  shift token (then go to state 420)
Conflict at state: 686, token: OP_COALESCING
  reduce by rule: shift-expression -> shift-expression RIGHT_SHIFT additive-expression
  shift token (then go to state 422)
Conflict at state: 686, token: OP_PTR
  reduce by rule: shift-expression -> shift-expression RIGHT_SHIFT additive-expression
  shift token (then go to state 421)
Conflict at state: 686, token: MINUS
  reduce by rule: shift-expression -> shift-expression RIGHT_SHIFT additive-expression
  shift token (then go to state 423)
Conflict at state: 686, token: PLUS
  reduce by rule: shift-expression -> shift-expression RIGHT_SHIFT additive-expression
  shift token (then go to state 420)
Conflict at state: 687, token: STAR
  reduce by rule: additive-expression -> additive-expression PLUS multiplicative-expression
  shift token (then go to state 424)
Conflict at state: 687, token: DIV
  reduce by rule: additive-expression -> additive-expression PLUS multiplicative-expression
  shift token (then go to state 425)
Conflict at state: 687, token: PERCENT
  reduce by rule: additive-expression -> additive-expression PLUS multiplicative-expression
  shift token (then go to state 426)
Conflict at state: 688, token: STAR
  reduce by rule: additive-expression -> additive-expression OP_PTR multiplicative-expression
  shift token (then go to state 424)
Conflict at state: 688, token: DIV
  reduce by rule: additive-expression -> additive-expression OP_PTR multiplicative-expression
  shift token (then go to state 425)
Conflict at state: 688, token: PERCENT
  reduce by rule: additive-expression -> additive-expression OP_PTR multiplicative-expression
  shift token (then go to state 426)
Conflict at state: 689, token: STAR
  reduce by rule: additive-expression -> additive-expression OP_COALESCING multiplicative-expression
  shift token (then go to state 424)
Conflict at state: 689, token: DIV
  reduce by rule: additive-expression -> additive-expression OP_COALESCING multiplicative-expression
  shift token (then go to state 425)
Conflict at state: 689, token: PERCENT
  reduce by rule: additive-expression -> additive-expression OP_COALESCING multiplicative-expression
  shift token (then go to state 426)
Conflict at state: 690, token: STAR
  reduce by rule: additive-expression -> additive-expression MINUS multiplicative-expression
  shift token (then go to state 424)
Conflict at state: 690, token: DIV
  reduce by rule: additive-expression -> additive-expression MINUS multiplicative-expression
  shift token (then go to state 425)
Conflict at state: 690, token: PERCENT
  reduce by rule: additive-expression -> additive-expression MINUS multiplicative-expression
  shift token (then go to state 426)
Conflict at state: 721, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> THIS
  shift token (then go to state 920)
Conflict at state: 735, token: COMMA
  reduce by rule: class-base -> COLON type-with-interr COMMA interface-type-list
  shift token (then go to state 460)
Conflict at state: 737, token: COMMA
  reduce by rule: where-unit -> WHERE type-name COLON where-names
  shift token (then go to state 937)
Conflict at state: 739, token: COMMA
  reduce by rule: non-array-type -> type-name
  reduce by rule: where-name -> type-name
Conflict at state: 739, token: OPEN_BRACE
  reduce by rule: non-array-type -> type-name
  reduce by rule: where-name -> type-name
Conflict at state: 739, token: WHERE
  reduce by rule: non-array-type -> type-name
  reduce by rule: where-name -> type-name
Conflict at state: 739, token: SEMICOLON
  reduce by rule: non-array-type -> type-name
  reduce by rule: where-name -> type-name
Conflict at state: 739, token: STAR
  reduce by rule: non-array-type -> type-name
  reduce by rule: where-name -> type-name
Conflict at state: 739, token: OPEN_BRACKET
  reduce by rule: non-array-type -> type-name
  reduce by rule: where-name -> type-name
Conflict at state: 760, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 769, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 789, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 789, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 789, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 789, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 789, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 789, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 789, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 789, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 791, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 794, token: WHERE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 76)
Conflict at state: 794, token: ASYNC
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 75)
Conflict at state: 794, token: THIS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 74)
Conflict at state: 794, token: TYPE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 73)
Conflict at state: 794, token: FIELD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 72)
Conflict at state: 794, token: MODULE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 71)
Conflict at state: 794, token: PROPERTY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 70)
Conflict at state: 794, token: ASSEMBLY
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 69)
Conflict at state: 794, token: PARAM
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 68)
Conflict at state: 794, token: METHOD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 67)
Conflict at state: 794, token: DEFAULT
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 66)
Conflict at state: 794, token: PARAMS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 65)
Conflict at state: 794, token: SET
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 64)
Conflict at state: 794, token: REMOVE
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 63)
Conflict at state: 794, token: ADD
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 62)
Conflict at state: 794, token: IDENTIFIER
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> PARAMS
  shift token (then go to state 59)
Conflict at state: 801, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 801, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 801, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 801, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 801, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 801, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 801, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 801, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 801, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 801, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 801, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 801, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 801, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 801, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 801, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 801, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 801, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 801, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 801, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 801, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 801, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 801, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 801, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 801, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 801, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 801, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 801, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 801, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 801, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 801, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 801, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 801, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 801, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 801, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 801, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 801, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 801, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 801, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 801, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 801, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 801, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 801, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 801, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 801, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 801, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 801, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 801, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 801, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 801, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 801, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 801, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 801, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 801, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 801, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 801, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 801, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 801, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 801, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 804, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 804, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 804, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 804, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 804, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 804, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 804, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 804, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 805, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 805, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 805, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 805, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 805, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 805, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 805, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 805, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 815, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 597)
Conflict at state: 815, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 815, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 815, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 815, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 815, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 815, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 990)
Conflict at state: 815, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 815, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 815, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 815, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 815, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 815, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 815, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 815, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 815, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 456)
Conflict at state: 815, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 815, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 815, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 815, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 815, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 815, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 830, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 830, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 830, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 830, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 830, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 830, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 830, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 830, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 831, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 831, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 831, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 831, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 831, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 831, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 831, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 831, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 831, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 831, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 831, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 831, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 831, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 831, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 831, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 831, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 831, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 831, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 831, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 831, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 831, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 831, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 831, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 831, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 835, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 835, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 835, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 835, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 835, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 835, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 835, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 835, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 836, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 836, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 836, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 836, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 836, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 836, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 836, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 836, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 837, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 837, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 837, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 837, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 837, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 837, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 837, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 837, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 839, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1014)
Conflict at state: 839, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 839, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 839, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 839, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 839, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 839, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 839, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 839, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 839, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 839, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 839, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 839, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 839, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 839, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 839, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 839, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 839, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 839, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 839, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 839, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 839, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 842, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 842, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 842, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 842, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 842, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1023)
Conflict at state: 842, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 842, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 842, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 842, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 846, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 846, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 846, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 846, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 846, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 846, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 846, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 846, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 858, token: COMMA
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 858, token: CLOSE_BRACE
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 858, token: OPEN_BRACKET
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 858, token: OPEN_PARENS
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 858, token: OPEN_BRACE
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 858, token: SEMICOLON
  reduce by rule: variable-initializer -> expression
  reduce by rule: variable-initializer -> expression
Conflict at state: 859, token: COMMA
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 859, token: CLOSE_BRACE
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 859, token: OPEN_BRACKET
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 859, token: OPEN_PARENS
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 859, token: OPEN_BRACE
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 859, token: SEMICOLON
  reduce by rule: variable-initializer -> array-initializer
  reduce by rule: variable-initializer -> array-initializer
Conflict at state: 860, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 860, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 860, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 860, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 860, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 860, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 860, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 860, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 860, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 860, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 860, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 860, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 860, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 860, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 860, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 860, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 860, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 860, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 860, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 860, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 860, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 860, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 860, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 860, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 860, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 860, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 860, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 860, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 860, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 860, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 860, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 860, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 860, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 860, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 860, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 860, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 860, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 860, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 860, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 860, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 860, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 860, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 860, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 860, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 860, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 860, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 860, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 860, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 860, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 860, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 860, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 860, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 860, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 860, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 860, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 860, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 860, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 860, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 860, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 861, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 861, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 861, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 861, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 861, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 861, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 861, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 861, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 862, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 862, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 862, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 862, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 862, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 862, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 862, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 862, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 862, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 862, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 862, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 862, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 862, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 862, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 862, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 862, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 862, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 862, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 862, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 862, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 862, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 862, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 862, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 862, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 862, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 862, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 862, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 862, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 862, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 862, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 862, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 862, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 862, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 862, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 862, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 862, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 862, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 862, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 862, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 862, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 862, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 862, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 862, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 862, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 862, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 862, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 862, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 862, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 862, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 862, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 862, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 862, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 862, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 862, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 862, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 862, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 862, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 862, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 862, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 863, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 863, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 863, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 863, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 863, token: OPEN_BRACKET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 188)
Conflict at state: 863, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 863, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 863, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 863, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 864, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 864, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 864, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 864, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 864, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 864, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 864, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 864, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 864, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 864, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 864, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 864, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 864, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 864, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 864, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 864, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 864, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 864, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 864, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 864, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 864, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 864, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 864, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 864, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 864, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 864, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 864, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 864, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 864, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 864, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 864, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 864, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 864, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 864, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 864, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 864, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 864, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 864, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 864, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 864, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 864, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 864, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 864, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 864, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 864, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 864, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 864, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 864, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 864, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 864, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 864, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 864, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 864, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 864, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 864, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 864, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 864, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 864, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 864, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 382)
Conflict at state: 867, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: INTERR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: DOT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: STAR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: DIV
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: PERCENT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_LEFT_SHIFT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: RIGHT_SHIFT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_EQ
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_NE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: CARET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_AND
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_OR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: BITWISE_OR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: AMP
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: AS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: IS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_COALESCING
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_GE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_LE
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: GT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: LT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: MINUS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: PLUS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_XOR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_OR_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_AND_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_MOD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_DIV_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_MULT_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_SUB_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_ADD_ASSIGNMENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: ASSIGN
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: INTERR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: CLOSE_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: COMMA
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: DIV
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: PERCENT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_LEFT_SHIFT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: RIGHT_SHIFT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_EQ
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_NE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: CARET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_AND
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_OR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: BITWISE_OR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: AMP
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: AS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: IS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_COALESCING
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_GE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: OP_LE
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: GT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: LT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: MINUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: PLUS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> type OP_PTR IDENTIFIER_WITH_KEYWORD
Conflict at state: 867, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 868, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 868, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 868, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 868, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 868, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 868, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 868, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 868, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 868, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 868, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 868, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 868, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 868, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 868, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 868, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 868, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 868, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 868, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 868, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 868, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 868, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 868, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 868, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 868, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 868, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 868, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 868, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 868, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 868, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 868, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 868, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 868, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 868, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 868, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 868, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 868, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 868, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 868, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 868, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 868, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 868, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 868, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 868, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 868, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 868, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 868, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 868, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 868, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 868, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 868, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 868, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 868, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 868, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 868, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 868, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 868, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 868, token: TILDE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 221)
Conflict at state: 868, token: BANG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 220)
Conflict at state: 873, token: OPEN_BRACE
  reduce by rule: delegate-creation-expression -> NEW type OPEN_PARENS CLOSE_PARENS
  shift token (then go to state 403)
Conflict at state: 875, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 403)
Conflict at state: 875, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 875, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 875, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 875, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 875, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 875, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 875, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 875, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 875, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 875, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 875, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 875, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 875, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 875, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 875, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 875, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 875, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 875, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 875, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 875, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 875, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 875, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 875, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 875, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 875, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 875, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 875, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 875, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 875, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 875, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 875, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 875, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 875, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 875, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 875, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 875, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 875, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 875, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 875, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 875, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 875, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 875, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 875, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 875, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 875, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 875, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 875, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 875, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 875, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 881, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 881, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 881, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 881, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 881, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 881, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 881, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 881, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 888, token: OP_PTR
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 888, token: DOT
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 888, token: OPEN_PARENS
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 888, token: OPEN_BRACKET
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 888, token: OP_DEC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 888, token: OP_INC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS CLOSE_PARENS
Conflict at state: 890, token: SEMICOLON
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 890, token: COMMA
  reduce by rule: constant-declarators -> constant-declarator
  reduce by rule: constant-declarators -> constant-declarator
Conflict at state: 922, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 922, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 922, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 922, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 922, token: OPEN_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 640)
Conflict at state: 922, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 922, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 922, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 922, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 947, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 952, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 957, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 979, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 979, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 979, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 979, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 979, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 979, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 979, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 979, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 986, token: DEFAULT
  reduce by rule: labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON switch-labels
  shift token (then go to state 1172)
Conflict at state: 986, token: CASE
  reduce by rule: labeled-statement -> IDENTIFIER_WITH_KEYWORD COLON switch-labels
  shift token (then go to state 989)
Conflict at state: 989, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 989, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 989, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 989, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 989, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 989, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 989, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 989, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 990, token: COLON
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> DEFAULT
  shift token (then go to state 1174)
Conflict at state: 992, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 992, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 992, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 992, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 992, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 992, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 992, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 992, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 1010, token: CLOSE_PARENS
  reduce by rule: boolean-expression -> expression
  reduce by rule: boolean-expression -> expression
Conflict at state: 1010, token: SEMICOLON
  reduce by rule: boolean-expression -> expression
  reduce by rule: boolean-expression -> expression
Conflict at state: 1014, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1014, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1014, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1014, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1014, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1193)
Conflict at state: 1014, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1014, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 1014, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 1014, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 1031, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1031, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1031, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1031, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1031, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1203)
Conflict at state: 1031, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1031, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 1031, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 1031, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 1032, token: OPEN_BRACKET
  reduce by rule: array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
  shift token (then go to state 188)
Conflict at state: 1032, token: OPEN_BRACE
  reduce by rule: array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
  shift token (then go to state 640)
Conflict at state: 1034, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1034, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1034, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1034, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1034, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1206)
Conflict at state: 1034, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1034, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 1034, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 1034, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 1043, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1043, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1043, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1043, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1043, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1043, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 1043, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 1043, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 1044, token: OPEN_BRACE
  reduce by rule: cast-expression -> OPEN_PARENS expression CLOSE_PARENS OP_DBLPTR expression
  shift token (then go to state 382)
Conflict at state: 1045, token: OPEN_BRACE
  reduce by rule: delegate-creation-expression -> NEW type OPEN_PARENS argument-list CLOSE_PARENS
  shift token (then go to state 403)
Conflict at state: 1047, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1047, token: TRUE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 270)
Conflict at state: 1047, token: FALSE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 271)
Conflict at state: 1047, token: REAL_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 254)
Conflict at state: 1047, token: INTEGER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 255)
Conflict at state: 1047, token: STRING_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 256)
Conflict at state: 1047, token: CHARACTER_LITERAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 257)
Conflict at state: 1047, token: NULL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 258)
Conflict at state: 1047, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 1047, token: AWAIT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 272)
Conflict at state: 1047, token: DELEGATE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 249)
Conflict at state: 1047, token: STACKALLOC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 251)
Conflict at state: 1047, token: SBYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 118)
Conflict at state: 1047, token: BYTE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 119)
Conflict at state: 1047, token: SHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 120)
Conflict at state: 1047, token: USHORT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 121)
Conflict at state: 1047, token: INT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 122)
Conflict at state: 1047, token: UINT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 123)
Conflict at state: 1047, token: LONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 124)
Conflict at state: 1047, token: ULONG
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 125)
Conflict at state: 1047, token: CHAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 126)
Conflict at state: 1047, token: FLOAT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 127)
Conflict at state: 1047, token: DOUBLE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 128)
Conflict at state: 1047, token: DECIMAL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 129)
Conflict at state: 1047, token: BOOL
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 130)
Conflict at state: 1047, token: OBJECT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 131)
Conflict at state: 1047, token: STRING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 132)
Conflict at state: 1047, token: VOID
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 133)
Conflict at state: 1047, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 1047, token: BASE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 263)
Conflict at state: 1047, token: NEW
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 264)
Conflict at state: 1047, token: TYPEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 265)
Conflict at state: 1047, token: SIZEOF
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 266)
Conflict at state: 1047, token: CHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 267)
Conflict at state: 1047, token: UNCHECKED
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 268)
Conflict at state: 1047, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 1047, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 1047, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 1047, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 1047, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 1047, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 1047, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 1047, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 1047, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 1047, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 1047, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 1047, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 1047, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 75)
Conflict at state: 1047, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 1048, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 378)
Conflict at state: 1048, token: DOT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 1213)
Conflict at state: 1048, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 1048, token: OP_PTR
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  shift token (then go to state 378)
Conflict at state: 1048, token: DOT
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  shift token (then go to state 1213)
Conflict at state: 1048, token: OP_INC
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 1048, token: OP_DEC
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 1048, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 1050, token: OPEN_BRACE
  reduce by rule: object-creation-expression -> NEW type-with-identifier OPEN_BRACKET argument-list CLOSE_BRACKET
  shift token (then go to state 403)
Conflict at state: 1051, token: OPEN_BRACE
  reduce by rule: object-creation-expression -> NEW non-array-type OPEN_BRACKET argument-list CLOSE_BRACKET
  shift token (then go to state 403)
Conflict at state: 1053, token: OP_PTR
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 1053, token: DOT
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 1053, token: OPEN_PARENS
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 1053, token: OPEN_BRACKET
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 1053, token: OP_DEC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 1053, token: OP_INC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS type CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS type CLOSE_PARENS
Conflict at state: 1054, token: OP_PTR
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 1054, token: DOT
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 1054, token: OPEN_PARENS
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 1054, token: OPEN_BRACKET
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 1054, token: OP_DEC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 1054, token: OP_INC
  reduce by rule: invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS
  reduce by rule: invocation-expression -> AWAIT primary-expression OPEN_PARENS argument-list CLOSE_PARENS
Conflict at state: 1057, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1057, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1057, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1057, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1057, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1057, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 1057, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 1057, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 1083, token: OPEN_PARENS
  reduce by rule: overloadable-binary-operator -> MINUS
  reduce by rule: overloadable-unary-operator -> MINUS
Conflict at state: 1086, token: OPEN_PARENS
  reduce by rule: overloadable-binary-operator -> PLUS
  reduce by rule: overloadable-unary-operator -> PLUS
Conflict at state: 1106, token: OPEN_BRACE
  reduce by rule: constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
  shift token (then go to state 382)
Conflict at state: 1106, token: SEMICOLON
  reduce by rule: constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
  shift token (then go to state 729)
Conflict at state: 1110, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 1143, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 1148, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 1185, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 597)
Conflict at state: 1185, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1185, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1185, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1185, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1186, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 597)
Conflict at state: 1186, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1186, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1186, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1186, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1189, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 597)
Conflict at state: 1189, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1189, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1189, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1189, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1191, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 597)
Conflict at state: 1191, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1191, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1191, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1191, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1192, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1192, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1192, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1192, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1192, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1192, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 1192, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 1192, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 1193, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1307)
Conflict at state: 1193, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1193, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1193, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1193, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1196, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1196, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1196, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1196, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1196, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1311)
Conflict at state: 1196, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1196, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 1196, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 1196, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 1197, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1197, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1197, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1197, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1204, token: OPEN_BRACKET
  reduce by rule: array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
  shift token (then go to state 188)
Conflict at state: 1204, token: OPEN_BRACE
  reduce by rule: array-creation-expression -> STACKALLOC non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
  shift token (then go to state 640)
Conflict at state: 1211, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 378)
Conflict at state: 1211, token: DOT
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
  shift token (then go to state 1213)
Conflict at state: 1211, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 1211, token: OP_PTR
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  shift token (then go to state 378)
Conflict at state: 1211, token: DOT
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  shift token (then go to state 1213)
Conflict at state: 1211, token: OP_INC
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 1211, token: OP_DEC
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 1211, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_DOT -> 
  reduce by rule: primary-no-array-creation-expression -> invocation-expressions
Conflict at state: 1212, token: OPEN_BRACE
  reduce by rule: object-creation-expression -> NEW type-with-identifier OPEN_PARENS CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
  shift token (then go to state 403)
Conflict at state: 1213, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1216, token: SEMICOLON
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1216, token: COMMA
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
  reduce by rule: constant-declarators -> constant-declarators COMMA constant-declarator
Conflict at state: 1217, token: SEMICOLON
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1217, token: COMMA
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
  reduce by rule: constant-declarator -> IDENTIFIER_WITH_TEMPLATE ASSIGN constant-expression
Conflict at state: 1226, token: OPEN_BRACE
  reduce by rule: constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
  shift token (then go to state 382)
Conflict at state: 1226, token: SEMICOLON
  reduce by rule: constructor-declarator -> IDENTIFIER_WITH_TEMPLATE OPEN_PARENS CLOSE_PARENS
  shift token (then go to state 729)
Conflict at state: 1228, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 1237, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 1248, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 1275, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 1282, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 1291, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 1301, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 597)
Conflict at state: 1301, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1301, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1301, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1301, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1302, token: ELSE
  reduce by rule: if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
  shift token (then go to state 1385)
Conflict at state: 1307, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 597)
Conflict at state: 1307, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1307, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1307, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1307, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1310, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1393)
Conflict at state: 1310, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1310, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1310, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1310, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1311, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1395)
Conflict at state: 1311, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1311, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1311, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1311, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1314, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1314, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1314, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1314, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1314, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1314, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 1314, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 1314, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 1315, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1315, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1315, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1315, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1315, token: CLOSE_BRACE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1399)
Conflict at state: 1315, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1315, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 1315, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 1315, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 1319, token: OPEN_BRACE
  reduce by rule: object-creation-expression -> NEW type-with-identifier OPEN_PARENS argument-list CLOSE_PARENS invocation-expressions IDENTIFIER_WITH_DOT
  shift token (then go to state 403)
Conflict at state: 1321, token: OPEN_PARENS
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1321, token: OP_PTR
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1321, token: DOT
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1321, token: OP_INC
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1321, token: OP_DEC
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1321, token: OPEN_BRACKET
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1321, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1321, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1321, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1321, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1321, token: OP_PTR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1321, token: DOT
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1321, token: STAR
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1321, token: OPEN_PARENS
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1321, token: OPEN_BRACKET
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1321, token: OP_DEC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1321, token: OP_INC
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1321, token: OP_PTR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1321, token: DOT
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: member-access -> invocation-expressions DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1321, token: STAR
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: IDENTIFIER_WITH_DOT -> DOT IDENTIFIER_WITH_KEYWORD
Conflict at state: 1321, token: DOUBLE_COLON
  reduce by rule: namespace-or-type-name -> IDENTIFIER_WITH_KEYWORD
  reduce by rule: primary-no-array-creation-expression -> IDENTIFIER_WITH_KEYWORD
Conflict at state: 1324, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 1332, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 1338, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 1356, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1356, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1356, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1356, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1356, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1417)
Conflict at state: 1356, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1356, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 1356, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 1356, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 1357, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1357, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1357, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1357, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1357, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1419)
Conflict at state: 1357, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1357, token: OP_COALESCING
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 218)
Conflict at state: 1357, token: MINUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 219)
Conflict at state: 1357, token: PLUS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 216)
Conflict at state: 1369, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 1372, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 1378, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 1383, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 597)
Conflict at state: 1383, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1383, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1383, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1383, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1385, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 597)
Conflict at state: 1385, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1385, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1385, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1385, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1389, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 597)
Conflict at state: 1389, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1389, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 1389, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 1389, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 1389, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 1389, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 990)
Conflict at state: 1389, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 1389, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 1389, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 1389, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 1389, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 1389, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 1389, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 1389, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 1389, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 456)
Conflict at state: 1389, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 1389, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 1389, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1389, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1389, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1389, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1392, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 597)
Conflict at state: 1392, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1392, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1392, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1392, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1393, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 597)
Conflict at state: 1393, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1393, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1393, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1393, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1395, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 597)
Conflict at state: 1395, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1395, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1395, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1395, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1397, token: CLOSE_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 1454)
Conflict at state: 1397, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1397, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1397, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1397, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1403, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 1411, token: CLOSE_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 1461)
Conflict at state: 1413, token: CLOSE_PARENS
  reduce by rule: IDENTIFIER_WITH_KEYWORD -> IDENTIFIER_WITH_TEMPLATE
  shift token (then go to state 1463)
Conflict at state: 1435, token: WHERE
  reduce by rule: where-unit -> 
  shift token (then go to state 158)
Conflict at state: 1447, token: DEFAULT
  reduce by rule: switch-section -> switch-labels statement-list
  shift token (then go to state 66)
Conflict at state: 1447, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 597)
Conflict at state: 1447, token: STAR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 222)
Conflict at state: 1447, token: ADD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 62)
Conflict at state: 1447, token: REMOVE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 63)
Conflict at state: 1447, token: SET
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 64)
Conflict at state: 1447, token: PARAMS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 65)
Conflict at state: 1447, token: DEFAULT
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 66)
Conflict at state: 1447, token: METHOD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 67)
Conflict at state: 1447, token: PARAM
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 68)
Conflict at state: 1447, token: ASSEMBLY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 69)
Conflict at state: 1447, token: PROPERTY
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 70)
Conflict at state: 1447, token: MODULE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 71)
Conflict at state: 1447, token: FIELD
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 72)
Conflict at state: 1447, token: TYPE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 73)
Conflict at state: 1447, token: THIS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 262)
Conflict at state: 1447, token: ASYNC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 456)
Conflict at state: 1447, token: WHERE
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 76)
Conflict at state: 1447, token: IDENTIFIER
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 59)
Conflict at state: 1447, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1447, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1447, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1447, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1451, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 597)
Conflict at state: 1451, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1451, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1451, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1451, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1453, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 597)
Conflict at state: 1453, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1453, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1453, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1453, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1454, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 597)
Conflict at state: 1454, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1454, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1454, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1454, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1456, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 597)
Conflict at state: 1456, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1456, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1456, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1456, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)
Conflict at state: 1485, token: SEMICOLON
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 597)
Conflict at state: 1485, token: OP_INC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 225)
Conflict at state: 1485, token: OP_DEC
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 226)
Conflict at state: 1485, token: OPEN_PARENS
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 259)
Conflict at state: 1485, token: OP_PTR
  reduce by rule: invocation-expressions -> 
  shift token (then go to state 217)

4343 Conflict(s) found in grammar.
Done.
