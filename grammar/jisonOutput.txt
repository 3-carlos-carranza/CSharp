Processing grammar.
$accept(0)
$end(1)
error(2)
compilationUnit(3)
es(4)
EOF(5)
e(6)
block(7)
BOOLEAN_LITERAL(8)
TRUE(9)
FALSE(10)
literal(11)
REAL_LITERAL(12)
INTEGER_LITERAL(13)
STRING_LITERAL(14)
CHARACTER_LITERAL(15)
NULL(16)
namespace-name(17)
namespace-or-type-name(18)
type-name(19)
IDENTIFIER(20)
DOT(21)
type(22)
value-type(23)
reference-type(24)
struct-type(25)
enum-type(26)
simple-type(27)
numeric-type(28)
BOOL(29)
integral-type(30)
floating-point-type(31)
DECIMAL(32)
SBYTE(33)
BYTE(34)
SHORT(35)
USHORT(36)
INT(37)
UINT(38)
LONG(39)
ULONG(40)
CHAR(41)
FLOAT(42)
DOUBLE(43)
class-type(44)
interface-type(45)
array-type(46)
delegate-type(47)
OBJECT(48)
STRING(49)
non-array-type(50)
rank-specifiers(51)
rank-specifier(52)
OPEN_BRACKET(53)
CLOSE_BRACKET(54)
dim-separators(55)
COMMA(56)
variable-reference(57)
expression(58)
argument-list(59)
argument(60)
REF(61)
OUT(62)
primary-expression(63)
primary-no-array-creation-expression(64)
array-creation-expression(65)
simple-name(66)
parenthesized-expression(67)
member-access(68)
invocation-expression(69)
element-access(70)
this-access(71)
base-access(72)
post-increment-expression(73)
post-decrement-expression(74)
object-creation-expression(75)
delegate-creation-expression(76)
typeof-expression(77)
sizeof-expression(78)
checked-expression(79)
unchecked-expression(80)
OPEN_PARENS(81)
CLOSE_PARENS(82)
predefined-type(83)
expression-list(84)
THIS(85)
base(86)
OP_INC(87)
OP_DEC(88)
NEW(89)
array-initializer(90)
TYPEOF(91)
VOID(92)
CHECKED(93)
UNCHECKED(94)
unary-expression(95)
PLUS(96)
MINUS(97)
BANG(98)
TILDE(99)
STAR(100)
pre-increment-expression(101)
pre-decrement-expression(102)
cast-expression(103)
multiplicative-expression(104)
DIV(105)
PERCENT(106)
additive-expression(107)
shift-expression(108)
OP_LEFT_SHIFT(109)
RIGHT_SHIFT(110)
relational-expression(111)
LT(112)
GT(113)
OP_LE(114)
OP_GE(115)
IS(116)
AS(117)
equality-expression(118)
OP_EQ(119)
OP_NE(120)
and-expression(121)
AMP(122)
exclusive-or-expression(123)
CARET(124)
inclusive-or-expression(125)
BITWISE_OR(126)
conditional-and-expression(127)
OP_AND(128)
conditional-or-expression(129)
OP_OR(130)
conditional-expression(131)
INTERR(132)
COLON(133)
assignment(134)
assignment-operator(135)
ASSIGN(136)
OP_ADD_ASSIGNMENT(137)
OP_SUB_ASSIGNMENT(138)
OP_MULT_ASSIGNMENT(139)
OP_DIV_ASSIGNMENT(140)
OP_MOD_ASSIGNMENT(141)
OP_AND_ASSIGNMENT(142)
OP_OR_ASSIGNMENT(143)
OP_XOR_ASSIGNMENT(144)
OP_LEFT_SHIFT_ASSIGNMENT(145)
RIGHT_SHIFT_ASSIGNMENT(146)
constant-expression(147)
boolean-expression(148)
statement(149)
labeled-statement(150)
declaration-statement(151)
embedded-statement(152)
empty-statement(153)
expression-statement(154)
selection-statement(155)
iteration-statement(156)
jump-statement(157)
try-statement(158)
checked-statement(159)
unchecked-statement(160)
lock-statement(161)
using-statement(162)
OPEN_BRACE(163)
CLOSE_BRACE(164)
statement-list(165)
SEMICOLON(166)
local-variable-declaration(167)
local-constant-declaration(168)
local-variable-declarators(169)
local-variable-declarator(170)
local-variable(171)
local-variable-initializer(172)
CONST(173)
constant-declarators(174)
constant-declarator(175)
statement-expression(176)
if-statement(177)
switch-statement(178)
IF(179)
ELSE(180)
SWITCH(181)
switch-block(182)
switch-sections(183)
switch-section(184)
switch-labels(185)
switch-label(186)
CASE(187)
DEFAULT(188)
while-statement(189)
do-statement(190)
for-statement(191)
foreach-statement(192)
WHILE(193)
DO(194)
FOR(195)
for-initializer(196)
for-condition(197)
for-iterator(198)
statement-expression-list(199)
FOREACH(200)
IN(201)
break-statement(202)
continue-statement(203)
goto-statement(204)
return-statement(205)
throw-statement(206)
BREAK(207)
CONTINUE(208)
GOTO(209)
RETURN(210)
THROW(211)
TRY(212)
catch-clauses(213)
finally-clause(214)
specific-catch-clauses(215)
general-catch-clause(216)
specific-catch-clause(217)
CATCH(218)
FINALLY(219)
LOCK(220)
USING(221)
resource-acquisition(222)
variable-initializer-list(223)
variable-initializer(224)

Item sets
------

item set 0 
$accept -> .compilationUnit $end #lookaheads= $end
compilationUnit -> .es EOF
es -> .es e
es -> .e
e -> .block
e -> .
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"compilationUnit":1,"es":2,"e":3,"block":4,"OPEN_BRACE":5}

item set 1 
$accept -> compilationUnit .$end #lookaheads= $end 
transitions ->  {}

item set 2 
compilationUnit -> es .EOF
es -> es .e
e -> .block
e -> .
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"EOF":6,"e":7,"block":4,"OPEN_BRACE":5}

item set 3 
es -> e . 
transitions ->  {}

item set 4 
e -> block . 
transitions ->  {}

item set 5 
block -> OPEN_BRACE .CLOSE_BRACE
block -> OPEN_BRACE .statement-list CLOSE_BRACE
statement-list -> .statement
statement-list -> .statement-list statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_BRACE":8,"statement-list":9,"statement":10,"labeled-statement":11,"declaration-statement":12,"embedded-statement":13,"IDENTIFIER":14,"local-variable-declaration":15,"local-constant-declaration":16,"block":17,"empty-statement":18,"expression-statement":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"type":28,"CONST":29,"OPEN_BRACE":5,"SEMICOLON":30,"statement-expression":31,"if-statement":32,"switch-statement":33,"while-statement":34,"do-statement":35,"for-statement":36,"foreach-statement":37,"break-statement":38,"continue-statement":39,"goto-statement":40,"return-statement":41,"throw-statement":42,"TRY":43,"CHECKED":44,"UNCHECKED":45,"LOCK":46,"USING":47,"value-type":48,"reference-type":49,"invocation-expression":50,"object-creation-expression":51,"assignment":52,"post-increment-expression":53,"post-decrement-expression":54,"pre-increment-expression":55,"pre-decrement-expression":56,"IF":57,"SWITCH":58,"WHILE":59,"DO":60,"FOR":61,"FOREACH":62,"BREAK":63,"CONTINUE":64,"GOTO":65,"RETURN":66,"THROW":67,"struct-type":68,"enum-type":69,"class-type":70,"interface-type":71,"array-type":72,"delegate-type":73,"primary-expression":74,"NEW":75,"unary-expression":76,"OP_INC":77,"OP_DEC":78,"type-name":79,"simple-type":80,"OBJECT":81,"STRING":82,"non-array-type":83,"primary-no-array-creation-expression":84,"array-creation-expression":85,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"cast-expression":91,"namespace-or-type-name":92,"numeric-type":93,"BOOL":94,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"element-access":99,"this-access":100,"base-access":101,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"OPEN_PARENS":107,"integral-type":108,"floating-point-type":109,"DECIMAL":110,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"SBYTE":121,"BYTE":122,"SHORT":123,"USHORT":124,"INT":125,"UINT":126,"LONG":127,"ULONG":128,"CHAR":129,"FLOAT":130,"DOUBLE":131,"TRUE":132,"FALSE":133}

item set 6 
compilationUnit -> es EOF . 
transitions ->  {}

item set 7 
es -> es e . 
transitions ->  {}

item set 8 
block -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 9 
block -> OPEN_BRACE statement-list .CLOSE_BRACE
statement-list -> statement-list .statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_BRACE":134,"statement":135,"labeled-statement":11,"declaration-statement":12,"embedded-statement":13,"IDENTIFIER":14,"local-variable-declaration":15,"local-constant-declaration":16,"block":17,"empty-statement":18,"expression-statement":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"type":28,"CONST":29,"OPEN_BRACE":5,"SEMICOLON":30,"statement-expression":31,"if-statement":32,"switch-statement":33,"while-statement":34,"do-statement":35,"for-statement":36,"foreach-statement":37,"break-statement":38,"continue-statement":39,"goto-statement":40,"return-statement":41,"throw-statement":42,"TRY":43,"CHECKED":44,"UNCHECKED":45,"LOCK":46,"USING":47,"value-type":48,"reference-type":49,"invocation-expression":50,"object-creation-expression":51,"assignment":52,"post-increment-expression":53,"post-decrement-expression":54,"pre-increment-expression":55,"pre-decrement-expression":56,"IF":57,"SWITCH":58,"WHILE":59,"DO":60,"FOR":61,"FOREACH":62,"BREAK":63,"CONTINUE":64,"GOTO":65,"RETURN":66,"THROW":67,"struct-type":68,"enum-type":69,"class-type":70,"interface-type":71,"array-type":72,"delegate-type":73,"primary-expression":74,"NEW":75,"unary-expression":76,"OP_INC":77,"OP_DEC":78,"type-name":79,"simple-type":80,"OBJECT":81,"STRING":82,"non-array-type":83,"primary-no-array-creation-expression":84,"array-creation-expression":85,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"cast-expression":91,"namespace-or-type-name":92,"numeric-type":93,"BOOL":94,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"element-access":99,"this-access":100,"base-access":101,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"OPEN_PARENS":107,"integral-type":108,"floating-point-type":109,"DECIMAL":110,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"SBYTE":121,"BYTE":122,"SHORT":123,"USHORT":124,"INT":125,"UINT":126,"LONG":127,"ULONG":128,"CHAR":129,"FLOAT":130,"DOUBLE":131,"TRUE":132,"FALSE":133}

item set 10 
statement-list -> statement . 
transitions ->  {}

item set 11 
statement -> labeled-statement . 
transitions ->  {}

item set 12 
statement -> declaration-statement . 
transitions ->  {}

item set 13 
statement -> embedded-statement . 
transitions ->  {}

item set 14 
labeled-statement -> IDENTIFIER .COLON statement
namespace-or-type-name -> IDENTIFIER .
simple-name -> IDENTIFIER . 
transitions ->  {"COLON":136}

item set 15 
declaration-statement -> local-variable-declaration .SEMICOLON 
transitions ->  {"SEMICOLON":137}

item set 16 
declaration-statement -> local-constant-declaration .SEMICOLON 
transitions ->  {"SEMICOLON":138}

item set 17 
embedded-statement -> block . 
transitions ->  {}

item set 18 
embedded-statement -> empty-statement . 
transitions ->  {}

item set 19 
embedded-statement -> expression-statement . 
transitions ->  {}

item set 20 
embedded-statement -> selection-statement . 
transitions ->  {}

item set 21 
embedded-statement -> iteration-statement . 
transitions ->  {}

item set 22 
embedded-statement -> jump-statement . 
transitions ->  {}

item set 23 
embedded-statement -> try-statement . 
transitions ->  {}

item set 24 
embedded-statement -> checked-statement . 
transitions ->  {}

item set 25 
embedded-statement -> unchecked-statement . 
transitions ->  {}

item set 26 
embedded-statement -> lock-statement . 
transitions ->  {}

item set 27 
embedded-statement -> using-statement . 
transitions ->  {}

item set 28 
local-variable-declaration -> type .local-variable-declarators
non-array-type -> type .
local-variable-declarators -> .local-variable-declarator
local-variable-declarators -> .local-variable-declarators COMMA local-variable-declarator
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
local-variable -> .
local-variable -> .IDENTIFIER 
transitions ->  {"local-variable-declarators":139,"local-variable-declarator":140,"local-variable":141,"IDENTIFIER":142}

item set 29 
local-constant-declaration -> CONST .type constant-declarators
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":143,"value-type":48,"reference-type":49,"struct-type":68,"enum-type":69,"class-type":70,"interface-type":71,"array-type":72,"delegate-type":73,"type-name":79,"simple-type":80,"OBJECT":144,"STRING":145,"non-array-type":83,"namespace-or-type-name":92,"numeric-type":93,"BOOL":146,"IDENTIFIER":147,"integral-type":108,"floating-point-type":109,"DECIMAL":148,"SBYTE":149,"BYTE":150,"SHORT":151,"USHORT":152,"INT":153,"UINT":154,"LONG":155,"ULONG":156,"CHAR":157,"FLOAT":158,"DOUBLE":159}

item set 30 
empty-statement -> SEMICOLON . 
transitions ->  {}

item set 31 
expression-statement -> statement-expression .SEMICOLON 
transitions ->  {"SEMICOLON":160}

item set 32 
selection-statement -> if-statement . 
transitions ->  {}

item set 33 
selection-statement -> switch-statement . 
transitions ->  {}

item set 34 
iteration-statement -> while-statement . 
transitions ->  {}

item set 35 
iteration-statement -> do-statement . 
transitions ->  {}

item set 36 
iteration-statement -> for-statement . 
transitions ->  {}

item set 37 
iteration-statement -> foreach-statement . 
transitions ->  {}

item set 38 
jump-statement -> break-statement . 
transitions ->  {}

item set 39 
jump-statement -> continue-statement . 
transitions ->  {}

item set 40 
jump-statement -> goto-statement . 
transitions ->  {}

item set 41 
jump-statement -> return-statement . 
transitions ->  {}

item set 42 
jump-statement -> throw-statement . 
transitions ->  {}

item set 43 
try-statement -> TRY .block catch-clauses
try-statement -> TRY .block finally-clause
try-statement -> TRY .block catch-clauses finally-clause
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":161,"OPEN_BRACE":5}

item set 44 
checked-statement -> CHECKED .block
checked-expression -> CHECKED .OPEN_PARENS expression CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":162,"OPEN_PARENS":163,"OPEN_BRACE":5}

item set 45 
unchecked-statement -> UNCHECKED .block
unchecked-expression -> UNCHECKED .OPEN_PARENS expression CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":164,"OPEN_PARENS":165,"OPEN_BRACE":5}

item set 46 
lock-statement -> LOCK .OPEN_PARENS expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":166}

item set 47 
using-statement -> USING .OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":167}

item set 48 
type -> value-type . 
transitions ->  {}

item set 49 
type -> reference-type . 
transitions ->  {}

item set 50 
statement-expression -> invocation-expression .
primary-no-array-creation-expression -> invocation-expression . 
transitions ->  {}

item set 51 
statement-expression -> object-creation-expression .
primary-no-array-creation-expression -> object-creation-expression . 
transitions ->  {}

item set 52 
statement-expression -> assignment . 
transitions ->  {}

item set 53 
statement-expression -> post-increment-expression .
primary-no-array-creation-expression -> post-increment-expression . 
transitions ->  {}

item set 54 
statement-expression -> post-decrement-expression .
primary-no-array-creation-expression -> post-decrement-expression . 
transitions ->  {}

item set 55 
statement-expression -> pre-increment-expression .
unary-expression -> pre-increment-expression . 
transitions ->  {}

item set 56 
statement-expression -> pre-decrement-expression .
unary-expression -> pre-decrement-expression . 
transitions ->  {}

item set 57 
if-statement -> IF .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> IF .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement 
transitions ->  {"OPEN_PARENS":168}

item set 58 
switch-statement -> SWITCH .OPEN_PARENS expression CLOSE_PARENS switch-block 
transitions ->  {"OPEN_PARENS":169}

item set 59 
while-statement -> WHILE .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":170}

item set 60 
do-statement -> DO .embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":171,"block":17,"empty-statement":18,"expression-statement":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"OPEN_BRACE":5,"SEMICOLON":30,"statement-expression":31,"if-statement":32,"switch-statement":33,"while-statement":34,"do-statement":35,"for-statement":36,"foreach-statement":37,"break-statement":38,"continue-statement":39,"goto-statement":40,"return-statement":41,"throw-statement":42,"TRY":43,"CHECKED":44,"UNCHECKED":45,"LOCK":46,"USING":47,"invocation-expression":50,"object-creation-expression":51,"assignment":52,"post-increment-expression":53,"post-decrement-expression":54,"pre-increment-expression":55,"pre-decrement-expression":56,"IF":57,"SWITCH":58,"WHILE":59,"DO":60,"FOR":61,"FOREACH":62,"BREAK":63,"CONTINUE":64,"GOTO":65,"RETURN":66,"THROW":67,"primary-expression":74,"NEW":75,"unary-expression":76,"OP_INC":77,"OP_DEC":78,"primary-no-array-creation-expression":84,"array-creation-expression":85,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"cast-expression":91,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"element-access":99,"this-access":100,"base-access":101,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"OPEN_PARENS":107,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 61 
for-statement -> FOR .OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":188}

item set 62 
foreach-statement -> FOREACH .OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":189}

item set 63 
break-statement -> BREAK .SEMICOLON 
transitions ->  {"SEMICOLON":190}

item set 64 
continue-statement -> CONTINUE .SEMICOLON 
transitions ->  {"SEMICOLON":191}

item set 65 
goto-statement -> GOTO .IDENTIFIER SEMICOLON
goto-statement -> GOTO .CASE constant-expression SEMICOLON
goto-statement -> GOTO .DEFAULT SEMICOLON 
transitions ->  {"IDENTIFIER":192,"CASE":193,"DEFAULT":194}

item set 66 
return-statement -> RETURN .SEMICOLON
return-statement -> RETURN .expression SEMICOLON
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":195,"expression":196,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 67 
throw-statement -> THROW .SEMICOLON
throw-statement -> THROW .expression SEMICOLON
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":218,"expression":219,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 68 
value-type -> struct-type . 
transitions ->  {}

item set 69 
value-type -> enum-type . 
transitions ->  {}

item set 70 
reference-type -> class-type . 
transitions ->  {}

item set 71 
reference-type -> interface-type . 
transitions ->  {}

item set 72 
reference-type -> array-type . 
transitions ->  {}

item set 73 
reference-type -> delegate-type . 
transitions ->  {}

item set 74 
invocation-expression -> primary-expression .OPEN_PARENS CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
post-increment-expression -> primary-expression .OP_INC
post-decrement-expression -> primary-expression .OP_DEC
unary-expression -> primary-expression .
member-access -> primary-expression .DOT IDENTIFIER 
transitions ->  {"OPEN_PARENS":220,"OP_INC":221,"OP_DEC":222,"DOT":223}

item set 75 
object-creation-expression -> NEW .type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> NEW .type OPEN_PARENS argument-list CLOSE_PARENS
array-creation-expression -> NEW .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> NEW .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> NEW .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> NEW .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> NEW .array-type array-initializer
delegate-creation-expression -> NEW .delegate-type OPEN_PARENS expression CLOSE_PARENS
type -> .value-type
type -> .reference-type
non-array-type -> .type
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
type-name -> .namespace-or-type-name
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
simple-type -> .numeric-type
simple-type -> .BOOL
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":224,"non-array-type":225,"array-type":226,"delegate-type":227,"value-type":48,"reference-type":49,"type-name":79,"struct-type":68,"enum-type":69,"class-type":70,"interface-type":71,"namespace-or-type-name":92,"simple-type":80,"OBJECT":144,"STRING":145,"IDENTIFIER":147,"numeric-type":93,"BOOL":146,"integral-type":108,"floating-point-type":109,"DECIMAL":148,"SBYTE":149,"BYTE":150,"SHORT":151,"USHORT":152,"INT":153,"UINT":154,"LONG":155,"ULONG":156,"CHAR":157,"FLOAT":158,"DOUBLE":159}

item set 76 
assignment -> unary-expression .assignment-operator expression
assignment-operator -> .ASSIGN
assignment-operator -> .OP_ADD_ASSIGNMENT
assignment-operator -> .OP_SUB_ASSIGNMENT
assignment-operator -> .OP_MULT_ASSIGNMENT
assignment-operator -> .OP_DIV_ASSIGNMENT
assignment-operator -> .OP_MOD_ASSIGNMENT
assignment-operator -> .OP_AND_ASSIGNMENT
assignment-operator -> .OP_OR_ASSIGNMENT
assignment-operator -> .OP_XOR_ASSIGNMENT
assignment-operator -> .OP_LEFT_SHIFT_ASSIGNMENT
assignment-operator -> .RIGHT_SHIFT_ASSIGNMENT 
transitions ->  {"assignment-operator":228,"ASSIGN":229,"OP_ADD_ASSIGNMENT":230,"OP_SUB_ASSIGNMENT":231,"OP_MULT_ASSIGNMENT":232,"OP_DIV_ASSIGNMENT":233,"OP_MOD_ASSIGNMENT":234,"OP_AND_ASSIGNMENT":235,"OP_OR_ASSIGNMENT":236,"OP_XOR_ASSIGNMENT":237,"OP_LEFT_SHIFT_ASSIGNMENT":238,"RIGHT_SHIFT_ASSIGNMENT":239}

item set 77 
pre-increment-expression -> OP_INC .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":240,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 78 
pre-decrement-expression -> OP_DEC .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":241,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 79 
struct-type -> type-name .
enum-type -> type-name .
class-type -> type-name .
interface-type -> type-name .
delegate-type -> type-name . 
transitions ->  {}

item set 80 
struct-type -> simple-type . 
transitions ->  {}

item set 81 
class-type -> OBJECT .
predefined-type -> OBJECT . 
transitions ->  {}

item set 82 
class-type -> STRING .
predefined-type -> STRING . 
transitions ->  {}

item set 83 
array-type -> non-array-type .rank-specifiers
rank-specifiers -> .rank-specifier
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET 
transitions ->  {"rank-specifiers":242,"rank-specifier":243,"OPEN_BRACKET":244}

item set 84 
primary-expression -> primary-no-array-creation-expression .
element-access -> primary-no-array-creation-expression .OPEN_BRACKET expression-list CLOSE_BRACKET 
transitions ->  {"OPEN_BRACKET":245}

item set 85 
primary-expression -> array-creation-expression . 
transitions ->  {}

item set 86 
unary-expression -> PLUS .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":246,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 87 
unary-expression -> MINUS .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":247,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 88 
unary-expression -> BANG .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":248,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 89 
unary-expression -> TILDE .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":249,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 90 
unary-expression -> STAR .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":250,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 91 
unary-expression -> cast-expression . 
transitions ->  {}

item set 92 
type-name -> namespace-or-type-name .
namespace-or-type-name -> namespace-or-type-name .DOT IDENTIFIER 
transitions ->  {"DOT":251}

item set 93 
simple-type -> numeric-type . 
transitions ->  {}

item set 94 
simple-type -> BOOL .
predefined-type -> BOOL . 
transitions ->  {}

item set 95 
primary-no-array-creation-expression -> literal . 
transitions ->  {}

item set 96 
primary-no-array-creation-expression -> simple-name . 
transitions ->  {}

item set 97 
primary-no-array-creation-expression -> parenthesized-expression . 
transitions ->  {}

item set 98 
primary-no-array-creation-expression -> member-access . 
transitions ->  {}

item set 99 
primary-no-array-creation-expression -> element-access . 
transitions ->  {}

item set 100 
primary-no-array-creation-expression -> this-access . 
transitions ->  {}

item set 101 
primary-no-array-creation-expression -> base-access . 
transitions ->  {}

item set 102 
primary-no-array-creation-expression -> delegate-creation-expression . 
transitions ->  {}

item set 103 
primary-no-array-creation-expression -> typeof-expression . 
transitions ->  {}

item set 104 
primary-no-array-creation-expression -> sizeof-expression . 
transitions ->  {}

item set 105 
primary-no-array-creation-expression -> checked-expression . 
transitions ->  {}

item set 106 
primary-no-array-creation-expression -> unchecked-expression . 
transitions ->  {}

item set 107 
cast-expression -> OPEN_PARENS .type CLOSE_PARENS unary-expression
parenthesized-expression -> OPEN_PARENS .expression CLOSE_PARENS
type -> .value-type
type -> .reference-type
expression -> .conditional-expression
expression -> .assignment
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"type":252,"expression":253,"value-type":48,"reference-type":49,"conditional-expression":197,"assignment":198,"struct-type":68,"enum-type":69,"class-type":70,"interface-type":71,"array-type":72,"delegate-type":73,"conditional-or-expression":199,"unary-expression":200,"type-name":79,"simple-type":80,"OBJECT":81,"STRING":82,"non-array-type":83,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"namespace-or-type-name":92,"numeric-type":93,"BOOL":94,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"IDENTIFIER":254,"integral-type":108,"floating-point-type":109,"DECIMAL":110,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"SBYTE":121,"BYTE":122,"SHORT":123,"USHORT":124,"INT":125,"UINT":126,"LONG":127,"ULONG":128,"CHAR":129,"FLOAT":130,"DOUBLE":131,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 108 
numeric-type -> integral-type . 
transitions ->  {}

item set 109 
numeric-type -> floating-point-type . 
transitions ->  {}

item set 110 
numeric-type -> DECIMAL .
predefined-type -> DECIMAL . 
transitions ->  {}

item set 111 
literal -> BOOLEAN_LITERAL . 
transitions ->  {}

item set 112 
literal -> REAL_LITERAL . 
transitions ->  {}

item set 113 
literal -> INTEGER_LITERAL . 
transitions ->  {}

item set 114 
literal -> STRING_LITERAL . 
transitions ->  {}

item set 115 
literal -> CHARACTER_LITERAL . 
transitions ->  {}

item set 116 
literal -> NULL . 
transitions ->  {}

item set 117 
member-access -> predefined-type .DOT IDENTIFIER 
transitions ->  {"DOT":255}

item set 118 
this-access -> THIS . 
transitions ->  {}

item set 119 
base-access -> base .DOT IDENTIFIER
base-access -> base .OPEN_BRACKET expression-list CLOSE_BRACKET 
transitions ->  {"DOT":256,"OPEN_BRACKET":257}

item set 120 
typeof-expression -> TYPEOF .OPEN_PARENS type CLOSE_PARENS
typeof-expression -> TYPEOF .OPEN_PARENS VOID CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":258}

item set 121 
integral-type -> SBYTE .
predefined-type -> SBYTE . 
transitions ->  {}

item set 122 
integral-type -> BYTE .
predefined-type -> BYTE . 
transitions ->  {}

item set 123 
integral-type -> SHORT .
predefined-type -> SHORT . 
transitions ->  {}

item set 124 
integral-type -> USHORT .
predefined-type -> USHORT . 
transitions ->  {}

item set 125 
integral-type -> INT .
predefined-type -> INT . 
transitions ->  {}

item set 126 
integral-type -> UINT .
predefined-type -> UINT . 
transitions ->  {}

item set 127 
integral-type -> LONG .
predefined-type -> LONG . 
transitions ->  {}

item set 128 
integral-type -> ULONG .
predefined-type -> ULONG . 
transitions ->  {}

item set 129 
integral-type -> CHAR .
predefined-type -> CHAR . 
transitions ->  {}

item set 130 
floating-point-type -> FLOAT .
predefined-type -> FLOAT . 
transitions ->  {}

item set 131 
floating-point-type -> DOUBLE .
predefined-type -> DOUBLE . 
transitions ->  {}

item set 132 
BOOLEAN_LITERAL -> TRUE . 
transitions ->  {}

item set 133 
BOOLEAN_LITERAL -> FALSE . 
transitions ->  {}

item set 134 
block -> OPEN_BRACE statement-list CLOSE_BRACE . 
transitions ->  {}

item set 135 
statement-list -> statement-list statement . 
transitions ->  {}

item set 136 
labeled-statement -> IDENTIFIER COLON .statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"statement":259,"labeled-statement":11,"declaration-statement":12,"embedded-statement":13,"IDENTIFIER":14,"local-variable-declaration":15,"local-constant-declaration":16,"block":17,"empty-statement":18,"expression-statement":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"type":28,"CONST":29,"OPEN_BRACE":5,"SEMICOLON":30,"statement-expression":31,"if-statement":32,"switch-statement":33,"while-statement":34,"do-statement":35,"for-statement":36,"foreach-statement":37,"break-statement":38,"continue-statement":39,"goto-statement":40,"return-statement":41,"throw-statement":42,"TRY":43,"CHECKED":44,"UNCHECKED":45,"LOCK":46,"USING":47,"value-type":48,"reference-type":49,"invocation-expression":50,"object-creation-expression":51,"assignment":52,"post-increment-expression":53,"post-decrement-expression":54,"pre-increment-expression":55,"pre-decrement-expression":56,"IF":57,"SWITCH":58,"WHILE":59,"DO":60,"FOR":61,"FOREACH":62,"BREAK":63,"CONTINUE":64,"GOTO":65,"RETURN":66,"THROW":67,"struct-type":68,"enum-type":69,"class-type":70,"interface-type":71,"array-type":72,"delegate-type":73,"primary-expression":74,"NEW":75,"unary-expression":76,"OP_INC":77,"OP_DEC":78,"type-name":79,"simple-type":80,"OBJECT":81,"STRING":82,"non-array-type":83,"primary-no-array-creation-expression":84,"array-creation-expression":85,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"cast-expression":91,"namespace-or-type-name":92,"numeric-type":93,"BOOL":94,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"element-access":99,"this-access":100,"base-access":101,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"OPEN_PARENS":107,"integral-type":108,"floating-point-type":109,"DECIMAL":110,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"SBYTE":121,"BYTE":122,"SHORT":123,"USHORT":124,"INT":125,"UINT":126,"LONG":127,"ULONG":128,"CHAR":129,"FLOAT":130,"DOUBLE":131,"TRUE":132,"FALSE":133}

item set 137 
declaration-statement -> local-variable-declaration SEMICOLON . 
transitions ->  {}

item set 138 
declaration-statement -> local-constant-declaration SEMICOLON . 
transitions ->  {}

item set 139 
local-variable-declaration -> type local-variable-declarators .
local-variable-declarators -> local-variable-declarators .COMMA local-variable-declarator 
transitions ->  {"COMMA":260}

item set 140 
local-variable-declarators -> local-variable-declarator . 
transitions ->  {}

item set 141 
local-variable-declarator -> local-variable .
local-variable-declarator -> local-variable .ASSIGN local-variable-initializer 
transitions ->  {"ASSIGN":261}

item set 142 
local-variable -> IDENTIFIER . 
transitions ->  {}

item set 143 
local-constant-declaration -> CONST type .constant-declarators
non-array-type -> type .
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarator -> .IDENTIFIER ASSIGN constant-expression 
transitions ->  {"constant-declarators":262,"constant-declarator":263,"IDENTIFIER":264}

item set 144 
class-type -> OBJECT . 
transitions ->  {}

item set 145 
class-type -> STRING . 
transitions ->  {}

item set 146 
simple-type -> BOOL . 
transitions ->  {}

item set 147 
namespace-or-type-name -> IDENTIFIER . 
transitions ->  {}

item set 148 
numeric-type -> DECIMAL . 
transitions ->  {}

item set 149 
integral-type -> SBYTE . 
transitions ->  {}

item set 150 
integral-type -> BYTE . 
transitions ->  {}

item set 151 
integral-type -> SHORT . 
transitions ->  {}

item set 152 
integral-type -> USHORT . 
transitions ->  {}

item set 153 
integral-type -> INT . 
transitions ->  {}

item set 154 
integral-type -> UINT . 
transitions ->  {}

item set 155 
integral-type -> LONG . 
transitions ->  {}

item set 156 
integral-type -> ULONG . 
transitions ->  {}

item set 157 
integral-type -> CHAR . 
transitions ->  {}

item set 158 
floating-point-type -> FLOAT . 
transitions ->  {}

item set 159 
floating-point-type -> DOUBLE . 
transitions ->  {}

item set 160 
expression-statement -> statement-expression SEMICOLON . 
transitions ->  {}

item set 161 
try-statement -> TRY block .catch-clauses
try-statement -> TRY block .finally-clause
try-statement -> TRY block .catch-clauses finally-clause
catch-clauses -> .specific-catch-clauses
catch-clauses -> .general-catch-clause
catch-clauses -> .specific-catch-clauses general-catch-clause
finally-clause -> .FINALLY block
specific-catch-clauses -> .specific-catch-clause
specific-catch-clauses -> .specific-catch-clauses specific-catch-clause
general-catch-clause -> .CATCH block
specific-catch-clause -> .CATCH OPEN_PARENS class-type CLOSE_PARENS block
specific-catch-clause -> .CATCH OPEN_PARENS class-type IDENTIFIER CLOSE_PARENS block 
transitions ->  {"catch-clauses":265,"finally-clause":266,"specific-catch-clauses":267,"general-catch-clause":268,"FINALLY":269,"specific-catch-clause":270,"CATCH":271}

item set 162 
checked-statement -> CHECKED block . 
transitions ->  {}

item set 163 
checked-expression -> CHECKED OPEN_PARENS .expression CLOSE_PARENS
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":272,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 164 
unchecked-statement -> UNCHECKED block . 
transitions ->  {}

item set 165 
unchecked-expression -> UNCHECKED OPEN_PARENS .expression CLOSE_PARENS
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":273,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 166 
lock-statement -> LOCK OPEN_PARENS .expression CLOSE_PARENS embedded-statement
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":274,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 167 
using-statement -> USING OPEN_PARENS .resource-acquisition CLOSE_PARENS embedded-statement
resource-acquisition -> .local-variable-declaration
resource-acquisition -> .expression
local-variable-declaration -> .type local-variable-declarators
expression -> .conditional-expression
expression -> .assignment
type -> .value-type
type -> .reference-type
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"resource-acquisition":275,"local-variable-declaration":276,"expression":277,"type":28,"conditional-expression":197,"assignment":198,"value-type":48,"reference-type":49,"conditional-or-expression":199,"unary-expression":200,"struct-type":68,"enum-type":69,"class-type":70,"interface-type":71,"array-type":72,"delegate-type":73,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"type-name":79,"simple-type":80,"OBJECT":81,"STRING":82,"non-array-type":83,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"namespace-or-type-name":92,"numeric-type":93,"BOOL":94,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"IDENTIFIER":254,"integral-type":108,"floating-point-type":109,"DECIMAL":110,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"SBYTE":121,"BYTE":122,"SHORT":123,"USHORT":124,"INT":125,"UINT":126,"LONG":127,"ULONG":128,"CHAR":129,"FLOAT":130,"DOUBLE":131,"equality-expression":213,"TRUE":132,"FALSE":133,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 168 
if-statement -> IF OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement
if-statement -> IF OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":278,"expression":279,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 169 
switch-statement -> SWITCH OPEN_PARENS .expression CLOSE_PARENS switch-block
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":280,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 170 
while-statement -> WHILE OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":281,"expression":279,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 171 
do-statement -> DO embedded-statement .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON 
transitions ->  {"WHILE":282}

item set 172 
simple-name -> IDENTIFIER . 
transitions ->  {}

item set 173 
predefined-type -> BOOL . 
transitions ->  {}

item set 174 
predefined-type -> BYTE . 
transitions ->  {}

item set 175 
predefined-type -> CHAR . 
transitions ->  {}

item set 176 
predefined-type -> DECIMAL . 
transitions ->  {}

item set 177 
predefined-type -> DOUBLE . 
transitions ->  {}

item set 178 
predefined-type -> FLOAT . 
transitions ->  {}

item set 179 
predefined-type -> INT . 
transitions ->  {}

item set 180 
predefined-type -> LONG . 
transitions ->  {}

item set 181 
predefined-type -> OBJECT . 
transitions ->  {}

item set 182 
predefined-type -> SBYTE . 
transitions ->  {}

item set 183 
predefined-type -> SHORT . 
transitions ->  {}

item set 184 
predefined-type -> STRING . 
transitions ->  {}

item set 185 
predefined-type -> UINT . 
transitions ->  {}

item set 186 
predefined-type -> ULONG . 
transitions ->  {}

item set 187 
predefined-type -> USHORT . 
transitions ->  {}

item set 188 
for-statement -> FOR OPEN_PARENS .SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-initializer -> .local-variable-declaration
for-initializer -> .statement-expression-list
local-variable-declaration -> .type local-variable-declarators
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"SEMICOLON":283,"for-initializer":284,"local-variable-declaration":285,"statement-expression-list":286,"type":28,"statement-expression":287,"value-type":48,"reference-type":49,"invocation-expression":50,"object-creation-expression":51,"assignment":52,"post-increment-expression":53,"post-decrement-expression":54,"pre-increment-expression":55,"pre-decrement-expression":56,"struct-type":68,"enum-type":69,"class-type":70,"interface-type":71,"array-type":72,"delegate-type":73,"primary-expression":74,"NEW":75,"unary-expression":76,"OP_INC":77,"OP_DEC":78,"type-name":79,"simple-type":80,"OBJECT":81,"STRING":82,"non-array-type":83,"primary-no-array-creation-expression":84,"array-creation-expression":85,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"cast-expression":91,"namespace-or-type-name":92,"numeric-type":93,"BOOL":94,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"element-access":99,"this-access":100,"base-access":101,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"OPEN_PARENS":107,"IDENTIFIER":254,"integral-type":108,"floating-point-type":109,"DECIMAL":110,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"SBYTE":121,"BYTE":122,"SHORT":123,"USHORT":124,"INT":125,"UINT":126,"LONG":127,"ULONG":128,"CHAR":129,"FLOAT":130,"DOUBLE":131,"TRUE":132,"FALSE":133}

item set 189 
foreach-statement -> FOREACH OPEN_PARENS .type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":288,"value-type":48,"reference-type":49,"struct-type":68,"enum-type":69,"class-type":70,"interface-type":71,"array-type":72,"delegate-type":73,"type-name":79,"simple-type":80,"OBJECT":144,"STRING":145,"non-array-type":83,"namespace-or-type-name":92,"numeric-type":93,"BOOL":146,"IDENTIFIER":147,"integral-type":108,"floating-point-type":109,"DECIMAL":148,"SBYTE":149,"BYTE":150,"SHORT":151,"USHORT":152,"INT":153,"UINT":154,"LONG":155,"ULONG":156,"CHAR":157,"FLOAT":158,"DOUBLE":159}

item set 190 
break-statement -> BREAK SEMICOLON . 
transitions ->  {}

item set 191 
continue-statement -> CONTINUE SEMICOLON . 
transitions ->  {}

item set 192 
goto-statement -> GOTO IDENTIFIER .SEMICOLON 
transitions ->  {"SEMICOLON":289}

item set 193 
goto-statement -> GOTO CASE .constant-expression SEMICOLON
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":290,"expression":291,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 194 
goto-statement -> GOTO DEFAULT .SEMICOLON 
transitions ->  {"SEMICOLON":292}

item set 195 
return-statement -> RETURN SEMICOLON . 
transitions ->  {}

item set 196 
return-statement -> RETURN expression .SEMICOLON 
transitions ->  {"SEMICOLON":293}

item set 197 
expression -> conditional-expression . 
transitions ->  {}

item set 198 
expression -> assignment . 
transitions ->  {}

item set 199 
conditional-expression -> conditional-or-expression .
conditional-expression -> conditional-or-expression .INTERR expression COLON expression
conditional-or-expression -> conditional-or-expression .OP_OR conditional-and-expression 
transitions ->  {"INTERR":294,"OP_OR":295}

item set 200 
assignment -> unary-expression .assignment-operator expression
multiplicative-expression -> unary-expression .
assignment-operator -> .ASSIGN
assignment-operator -> .OP_ADD_ASSIGNMENT
assignment-operator -> .OP_SUB_ASSIGNMENT
assignment-operator -> .OP_MULT_ASSIGNMENT
assignment-operator -> .OP_DIV_ASSIGNMENT
assignment-operator -> .OP_MOD_ASSIGNMENT
assignment-operator -> .OP_AND_ASSIGNMENT
assignment-operator -> .OP_OR_ASSIGNMENT
assignment-operator -> .OP_XOR_ASSIGNMENT
assignment-operator -> .OP_LEFT_SHIFT_ASSIGNMENT
assignment-operator -> .RIGHT_SHIFT_ASSIGNMENT 
transitions ->  {"assignment-operator":228,"ASSIGN":229,"OP_ADD_ASSIGNMENT":230,"OP_SUB_ASSIGNMENT":231,"OP_MULT_ASSIGNMENT":232,"OP_DIV_ASSIGNMENT":233,"OP_MOD_ASSIGNMENT":234,"OP_AND_ASSIGNMENT":235,"OP_OR_ASSIGNMENT":236,"OP_XOR_ASSIGNMENT":237,"OP_LEFT_SHIFT_ASSIGNMENT":238,"RIGHT_SHIFT_ASSIGNMENT":239}

item set 201 
conditional-or-expression -> conditional-and-expression .
conditional-and-expression -> conditional-and-expression .OP_AND inclusive-or-expression 
transitions ->  {"OP_AND":296}

item set 202 
unary-expression -> pre-increment-expression . 
transitions ->  {}

item set 203 
unary-expression -> pre-decrement-expression . 
transitions ->  {}

item set 204 
conditional-and-expression -> inclusive-or-expression .
inclusive-or-expression -> inclusive-or-expression .BITWISE_OR exclusive-or-expression 
transitions ->  {"BITWISE_OR":297}

item set 205 
inclusive-or-expression -> exclusive-or-expression .
exclusive-or-expression -> exclusive-or-expression .CARET and-expression 
transitions ->  {"CARET":298}

item set 206 
primary-no-array-creation-expression -> invocation-expression . 
transitions ->  {}

item set 207 
primary-no-array-creation-expression -> post-increment-expression . 
transitions ->  {}

item set 208 
primary-no-array-creation-expression -> post-decrement-expression . 
transitions ->  {}

item set 209 
primary-no-array-creation-expression -> object-creation-expression . 
transitions ->  {}

item set 210 
exclusive-or-expression -> and-expression .
and-expression -> and-expression .AMP equality-expression 
transitions ->  {"AMP":299}

item set 211 
checked-expression -> CHECKED .OPEN_PARENS expression CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":163}

item set 212 
unchecked-expression -> UNCHECKED .OPEN_PARENS expression CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":165}

item set 213 
and-expression -> equality-expression .
equality-expression -> equality-expression .OP_EQ relational-expression
equality-expression -> equality-expression .OP_NE relational-expression 
transitions ->  {"OP_EQ":300,"OP_NE":301}

item set 214 
equality-expression -> relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":302,"GT":303,"OP_LE":304,"OP_GE":305,"IS":306,"AS":307}

item set 215 
relational-expression -> shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":308,"RIGHT_SHIFT":309}

item set 216 
shift-expression -> additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":310,"MINUS":311}

item set 217 
additive-expression -> multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":312,"DIV":313,"PERCENT":314}

item set 218 
throw-statement -> THROW SEMICOLON . 
transitions ->  {}

item set 219 
throw-statement -> THROW expression .SEMICOLON 
transitions ->  {"SEMICOLON":315}

item set 220 
invocation-expression -> primary-expression OPEN_PARENS .CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .argument-list CLOSE_PARENS
argument-list -> .argument
argument-list -> .argument-list COMMA argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":316,"argument-list":317,"argument":318,"expression":319,"REF":320,"OUT":321,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 221 
post-increment-expression -> primary-expression OP_INC . 
transitions ->  {}

item set 222 
post-decrement-expression -> primary-expression OP_DEC . 
transitions ->  {}

item set 223 
member-access -> primary-expression DOT .IDENTIFIER 
transitions ->  {"IDENTIFIER":322}

item set 224 
object-creation-expression -> NEW type .OPEN_PARENS CLOSE_PARENS
object-creation-expression -> NEW type .OPEN_PARENS argument-list CLOSE_PARENS
non-array-type -> type . 
transitions ->  {"OPEN_PARENS":323}

item set 225 
array-creation-expression -> NEW non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> NEW non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> NEW non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> NEW non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-type -> non-array-type .rank-specifiers
rank-specifiers -> .rank-specifier
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET 
transitions ->  {"OPEN_BRACKET":324,"rank-specifiers":242,"rank-specifier":243}

item set 226 
array-creation-expression -> NEW array-type .array-initializer
reference-type -> array-type .
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE 
transitions ->  {"array-initializer":325,"OPEN_BRACE":326}

item set 227 
delegate-creation-expression -> NEW delegate-type .OPEN_PARENS expression CLOSE_PARENS
reference-type -> delegate-type . 
transitions ->  {"OPEN_PARENS":327}

item set 228 
assignment -> unary-expression assignment-operator .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":328,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 229 
assignment-operator -> ASSIGN . 
transitions ->  {}

item set 230 
assignment-operator -> OP_ADD_ASSIGNMENT . 
transitions ->  {}

item set 231 
assignment-operator -> OP_SUB_ASSIGNMENT . 
transitions ->  {}

item set 232 
assignment-operator -> OP_MULT_ASSIGNMENT . 
transitions ->  {}

item set 233 
assignment-operator -> OP_DIV_ASSIGNMENT . 
transitions ->  {}

item set 234 
assignment-operator -> OP_MOD_ASSIGNMENT . 
transitions ->  {}

item set 235 
assignment-operator -> OP_AND_ASSIGNMENT . 
transitions ->  {}

item set 236 
assignment-operator -> OP_OR_ASSIGNMENT . 
transitions ->  {}

item set 237 
assignment-operator -> OP_XOR_ASSIGNMENT . 
transitions ->  {}

item set 238 
assignment-operator -> OP_LEFT_SHIFT_ASSIGNMENT . 
transitions ->  {}

item set 239 
assignment-operator -> RIGHT_SHIFT_ASSIGNMENT . 
transitions ->  {}

item set 240 
pre-increment-expression -> OP_INC unary-expression . 
transitions ->  {}

item set 241 
pre-decrement-expression -> OP_DEC unary-expression . 
transitions ->  {}

item set 242 
array-type -> non-array-type rank-specifiers .
rank-specifiers -> rank-specifiers .rank-specifier
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET 
transitions ->  {"rank-specifier":329,"OPEN_BRACKET":244}

item set 243 
rank-specifiers -> rank-specifier . 
transitions ->  {}

item set 244 
rank-specifier -> OPEN_BRACKET .CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .dim-separators CLOSE_BRACKET
dim-separators -> .COMMA
dim-separators -> .dim-separators COMMA 
transitions ->  {"CLOSE_BRACKET":330,"dim-separators":331,"COMMA":332}

item set 245 
element-access -> primary-no-array-creation-expression OPEN_BRACKET .expression-list CLOSE_BRACKET
expression-list -> .expression
expression-list -> .expression-list COMMA expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression-list":333,"expression":334,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 246 
unary-expression -> PLUS unary-expression . 
transitions ->  {}

item set 247 
unary-expression -> MINUS unary-expression . 
transitions ->  {}

item set 248 
unary-expression -> BANG unary-expression . 
transitions ->  {}

item set 249 
unary-expression -> TILDE unary-expression . 
transitions ->  {}

item set 250 
unary-expression -> STAR unary-expression . 
transitions ->  {}

item set 251 
namespace-or-type-name -> namespace-or-type-name DOT .IDENTIFIER 
transitions ->  {"IDENTIFIER":335}

item set 252 
cast-expression -> OPEN_PARENS type .CLOSE_PARENS unary-expression
non-array-type -> type . 
transitions ->  {"CLOSE_PARENS":336}

item set 253 
parenthesized-expression -> OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":337}

item set 254 
namespace-or-type-name -> IDENTIFIER .
simple-name -> IDENTIFIER . 
transitions ->  {}

item set 255 
member-access -> predefined-type DOT .IDENTIFIER 
transitions ->  {"IDENTIFIER":338}

item set 256 
base-access -> base DOT .IDENTIFIER 
transitions ->  {"IDENTIFIER":339}

item set 257 
base-access -> base OPEN_BRACKET .expression-list CLOSE_BRACKET
expression-list -> .expression
expression-list -> .expression-list COMMA expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression-list":340,"expression":334,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 258 
typeof-expression -> TYPEOF OPEN_PARENS .type CLOSE_PARENS
typeof-expression -> TYPEOF OPEN_PARENS .VOID CLOSE_PARENS
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":341,"VOID":342,"value-type":48,"reference-type":49,"struct-type":68,"enum-type":69,"class-type":70,"interface-type":71,"array-type":72,"delegate-type":73,"type-name":79,"simple-type":80,"OBJECT":144,"STRING":145,"non-array-type":83,"namespace-or-type-name":92,"numeric-type":93,"BOOL":146,"IDENTIFIER":147,"integral-type":108,"floating-point-type":109,"DECIMAL":148,"SBYTE":149,"BYTE":150,"SHORT":151,"USHORT":152,"INT":153,"UINT":154,"LONG":155,"ULONG":156,"CHAR":157,"FLOAT":158,"DOUBLE":159}

item set 259 
labeled-statement -> IDENTIFIER COLON statement . 
transitions ->  {}

item set 260 
local-variable-declarators -> local-variable-declarators COMMA .local-variable-declarator
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
local-variable -> .
local-variable -> .IDENTIFIER 
transitions ->  {"local-variable-declarator":343,"local-variable":141,"IDENTIFIER":142}

item set 261 
local-variable-declarator -> local-variable ASSIGN .local-variable-initializer
local-variable-initializer -> .expression
local-variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"local-variable-initializer":344,"expression":345,"array-initializer":346,"conditional-expression":197,"assignment":198,"OPEN_BRACE":326,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 262 
local-constant-declaration -> CONST type constant-declarators .
constant-declarators -> constant-declarators .COMMA constant-declarator 
transitions ->  {"COMMA":347}

item set 263 
constant-declarators -> constant-declarator . 
transitions ->  {}

item set 264 
constant-declarator -> IDENTIFIER .ASSIGN constant-expression 
transitions ->  {"ASSIGN":348}

item set 265 
try-statement -> TRY block catch-clauses .
try-statement -> TRY block catch-clauses .finally-clause
finally-clause -> .FINALLY block 
transitions ->  {"finally-clause":349,"FINALLY":269}

item set 266 
try-statement -> TRY block finally-clause . 
transitions ->  {}

item set 267 
catch-clauses -> specific-catch-clauses .
catch-clauses -> specific-catch-clauses .general-catch-clause
specific-catch-clauses -> specific-catch-clauses .specific-catch-clause
general-catch-clause -> .CATCH block
specific-catch-clause -> .CATCH OPEN_PARENS class-type CLOSE_PARENS block
specific-catch-clause -> .CATCH OPEN_PARENS class-type IDENTIFIER CLOSE_PARENS block 
transitions ->  {"general-catch-clause":350,"specific-catch-clause":351,"CATCH":271}

item set 268 
catch-clauses -> general-catch-clause . 
transitions ->  {}

item set 269 
finally-clause -> FINALLY .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":352,"OPEN_BRACE":5}

item set 270 
specific-catch-clauses -> specific-catch-clause . 
transitions ->  {}

item set 271 
general-catch-clause -> CATCH .block
specific-catch-clause -> CATCH .OPEN_PARENS class-type CLOSE_PARENS block
specific-catch-clause -> CATCH .OPEN_PARENS class-type IDENTIFIER CLOSE_PARENS block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":353,"OPEN_PARENS":354,"OPEN_BRACE":5}

item set 272 
checked-expression -> CHECKED OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":355}

item set 273 
unchecked-expression -> UNCHECKED OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":356}

item set 274 
lock-statement -> LOCK OPEN_PARENS expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":357}

item set 275 
using-statement -> USING OPEN_PARENS resource-acquisition .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":358}

item set 276 
resource-acquisition -> local-variable-declaration . 
transitions ->  {}

item set 277 
resource-acquisition -> expression . 
transitions ->  {}

item set 278 
if-statement -> IF OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement
if-statement -> IF OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement ELSE embedded-statement 
transitions ->  {"CLOSE_PARENS":359}

item set 279 
boolean-expression -> expression .
boolean-expression -> expression . 
transitions ->  {}

item set 280 
switch-statement -> SWITCH OPEN_PARENS expression .CLOSE_PARENS switch-block 
transitions ->  {"CLOSE_PARENS":360}

item set 281 
while-statement -> WHILE OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":361}

item set 282 
do-statement -> DO embedded-statement WHILE .OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON 
transitions ->  {"OPEN_PARENS":362}

item set 283 
for-statement -> FOR OPEN_PARENS SEMICOLON .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-condition -> .boolean-expression
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":363,"for-condition":364,"boolean-expression":365,"expression":279,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 284 
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":366}

item set 285 
for-initializer -> local-variable-declaration . 
transitions ->  {}

item set 286 
for-initializer -> statement-expression-list .
statement-expression-list -> statement-expression-list .COMMA statement-expression 
transitions ->  {"COMMA":367}

item set 287 
statement-expression-list -> statement-expression . 
transitions ->  {}

item set 288 
foreach-statement -> FOREACH OPEN_PARENS type .IDENTIFIER IN expression CLOSE_PARENS embedded-statement
non-array-type -> type . 
transitions ->  {"IDENTIFIER":368}

item set 289 
goto-statement -> GOTO IDENTIFIER SEMICOLON . 
transitions ->  {}

item set 290 
goto-statement -> GOTO CASE constant-expression .SEMICOLON 
transitions ->  {"SEMICOLON":369}

item set 291 
constant-expression -> expression . 
transitions ->  {}

item set 292 
goto-statement -> GOTO DEFAULT SEMICOLON . 
transitions ->  {}

item set 293 
return-statement -> RETURN expression SEMICOLON . 
transitions ->  {}

item set 294 
conditional-expression -> conditional-or-expression INTERR .expression COLON expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":370,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 295 
conditional-or-expression -> conditional-or-expression OP_OR .conditional-and-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"conditional-and-expression":371,"inclusive-or-expression":204,"exclusive-or-expression":205,"and-expression":210,"equality-expression":213,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217,"unary-expression":372,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 296 
conditional-and-expression -> conditional-and-expression OP_AND .inclusive-or-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"inclusive-or-expression":373,"exclusive-or-expression":205,"and-expression":210,"equality-expression":213,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217,"unary-expression":372,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 297 
inclusive-or-expression -> inclusive-or-expression BITWISE_OR .exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"exclusive-or-expression":374,"and-expression":210,"equality-expression":213,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217,"unary-expression":372,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 298 
exclusive-or-expression -> exclusive-or-expression CARET .and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"and-expression":375,"equality-expression":213,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217,"unary-expression":372,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 299 
and-expression -> and-expression AMP .equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"equality-expression":376,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217,"unary-expression":372,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 300 
equality-expression -> equality-expression OP_EQ .relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"relational-expression":377,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217,"unary-expression":372,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 301 
equality-expression -> equality-expression OP_NE .relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"relational-expression":378,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217,"unary-expression":372,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 302 
relational-expression -> relational-expression LT .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"shift-expression":379,"additive-expression":216,"multiplicative-expression":217,"unary-expression":372,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 303 
relational-expression -> relational-expression GT .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"shift-expression":380,"additive-expression":216,"multiplicative-expression":217,"unary-expression":372,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 304 
relational-expression -> relational-expression OP_LE .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"shift-expression":381,"additive-expression":216,"multiplicative-expression":217,"unary-expression":372,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 305 
relational-expression -> relational-expression OP_GE .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"shift-expression":382,"additive-expression":216,"multiplicative-expression":217,"unary-expression":372,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 306 
relational-expression -> relational-expression IS .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":383,"value-type":48,"reference-type":49,"struct-type":68,"enum-type":69,"class-type":70,"interface-type":71,"array-type":72,"delegate-type":73,"type-name":79,"simple-type":80,"OBJECT":144,"STRING":145,"non-array-type":83,"namespace-or-type-name":92,"numeric-type":93,"BOOL":146,"IDENTIFIER":147,"integral-type":108,"floating-point-type":109,"DECIMAL":148,"SBYTE":149,"BYTE":150,"SHORT":151,"USHORT":152,"INT":153,"UINT":154,"LONG":155,"ULONG":156,"CHAR":157,"FLOAT":158,"DOUBLE":159}

item set 307 
relational-expression -> relational-expression AS .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":384,"value-type":48,"reference-type":49,"struct-type":68,"enum-type":69,"class-type":70,"interface-type":71,"array-type":72,"delegate-type":73,"type-name":79,"simple-type":80,"OBJECT":144,"STRING":145,"non-array-type":83,"namespace-or-type-name":92,"numeric-type":93,"BOOL":146,"IDENTIFIER":147,"integral-type":108,"floating-point-type":109,"DECIMAL":148,"SBYTE":149,"BYTE":150,"SHORT":151,"USHORT":152,"INT":153,"UINT":154,"LONG":155,"ULONG":156,"CHAR":157,"FLOAT":158,"DOUBLE":159}

item set 308 
shift-expression -> shift-expression OP_LEFT_SHIFT .additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"additive-expression":385,"multiplicative-expression":217,"unary-expression":372,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 309 
shift-expression -> shift-expression RIGHT_SHIFT .additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"additive-expression":386,"multiplicative-expression":217,"unary-expression":372,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 310 
additive-expression -> additive-expression PLUS .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"multiplicative-expression":387,"unary-expression":372,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 311 
additive-expression -> additive-expression MINUS .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"multiplicative-expression":388,"unary-expression":372,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 312 
multiplicative-expression -> multiplicative-expression STAR .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":389,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 313 
multiplicative-expression -> multiplicative-expression DIV .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":390,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 314 
multiplicative-expression -> multiplicative-expression PERCENT .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":391,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 315 
throw-statement -> THROW expression SEMICOLON . 
transitions ->  {}

item set 316 
invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 317 
invocation-expression -> primary-expression OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":392,"COMMA":393}

item set 318 
argument-list -> argument . 
transitions ->  {}

item set 319 
argument -> expression . 
transitions ->  {}

item set 320 
argument -> REF .variable-reference
variable-reference -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"variable-reference":394,"expression":395,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 321 
argument -> OUT .variable-reference
variable-reference -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"variable-reference":396,"expression":395,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 322 
member-access -> primary-expression DOT IDENTIFIER . 
transitions ->  {}

item set 323 
object-creation-expression -> NEW type OPEN_PARENS .CLOSE_PARENS
object-creation-expression -> NEW type OPEN_PARENS .argument-list CLOSE_PARENS
argument-list -> .argument
argument-list -> .argument-list COMMA argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":397,"argument-list":398,"argument":318,"expression":319,"REF":320,"OUT":321,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 324 
array-creation-expression -> NEW non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET
array-creation-expression -> NEW non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> NEW non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> NEW non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET rank-specifiers array-initializer
rank-specifier -> OPEN_BRACKET .CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .dim-separators CLOSE_BRACKET
expression-list -> .expression
expression-list -> .expression-list COMMA expression
dim-separators -> .COMMA
dim-separators -> .dim-separators COMMA
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression-list":399,"CLOSE_BRACKET":330,"dim-separators":331,"expression":334,"COMMA":332,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 325 
array-creation-expression -> NEW array-type array-initializer . 
transitions ->  {}

item set 326 
array-initializer -> OPEN_BRACE .CLOSE_BRACE
array-initializer -> OPEN_BRACE .variable-initializer-list CLOSE_BRACE
array-initializer -> OPEN_BRACE .variable-initializer-list COMMA CLOSE_BRACE
variable-initializer-list -> .variable-initializer
variable-initializer-list -> .variable-initializer-list COMMA variable-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACE":400,"variable-initializer-list":401,"variable-initializer":402,"expression":403,"array-initializer":404,"conditional-expression":197,"assignment":198,"OPEN_BRACE":326,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 327 
delegate-creation-expression -> NEW delegate-type OPEN_PARENS .expression CLOSE_PARENS
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":405,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 328 
assignment -> unary-expression assignment-operator expression . 
transitions ->  {}

item set 329 
rank-specifiers -> rank-specifiers rank-specifier . 
transitions ->  {}

item set 330 
rank-specifier -> OPEN_BRACKET CLOSE_BRACKET . 
transitions ->  {}

item set 331 
rank-specifier -> OPEN_BRACKET dim-separators .CLOSE_BRACKET
dim-separators -> dim-separators .COMMA 
transitions ->  {"CLOSE_BRACKET":406,"COMMA":407}

item set 332 
dim-separators -> COMMA . 
transitions ->  {}

item set 333 
element-access -> primary-no-array-creation-expression OPEN_BRACKET expression-list .CLOSE_BRACKET
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":408,"COMMA":409}

item set 334 
expression-list -> expression . 
transitions ->  {}

item set 335 
namespace-or-type-name -> namespace-or-type-name DOT IDENTIFIER . 
transitions ->  {}

item set 336 
cast-expression -> OPEN_PARENS type CLOSE_PARENS .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":410,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 337 
parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 338 
member-access -> predefined-type DOT IDENTIFIER . 
transitions ->  {}

item set 339 
base-access -> base DOT IDENTIFIER . 
transitions ->  {}

item set 340 
base-access -> base OPEN_BRACKET expression-list .CLOSE_BRACKET
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":411,"COMMA":409}

item set 341 
typeof-expression -> TYPEOF OPEN_PARENS type .CLOSE_PARENS
non-array-type -> type . 
transitions ->  {"CLOSE_PARENS":412}

item set 342 
typeof-expression -> TYPEOF OPEN_PARENS VOID .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":413}

item set 343 
local-variable-declarators -> local-variable-declarators COMMA local-variable-declarator . 
transitions ->  {}

item set 344 
local-variable-declarator -> local-variable ASSIGN local-variable-initializer . 
transitions ->  {}

item set 345 
local-variable-initializer -> expression . 
transitions ->  {}

item set 346 
local-variable-initializer -> array-initializer . 
transitions ->  {}

item set 347 
constant-declarators -> constant-declarators COMMA .constant-declarator
constant-declarator -> .IDENTIFIER ASSIGN constant-expression 
transitions ->  {"constant-declarator":414,"IDENTIFIER":264}

item set 348 
constant-declarator -> IDENTIFIER ASSIGN .constant-expression
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":415,"expression":291,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 349 
try-statement -> TRY block catch-clauses finally-clause . 
transitions ->  {}

item set 350 
catch-clauses -> specific-catch-clauses general-catch-clause . 
transitions ->  {}

item set 351 
specific-catch-clauses -> specific-catch-clauses specific-catch-clause . 
transitions ->  {}

item set 352 
finally-clause -> FINALLY block . 
transitions ->  {}

item set 353 
general-catch-clause -> CATCH block . 
transitions ->  {}

item set 354 
specific-catch-clause -> CATCH OPEN_PARENS .class-type CLOSE_PARENS block
specific-catch-clause -> CATCH OPEN_PARENS .class-type IDENTIFIER CLOSE_PARENS block
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
type-name -> .namespace-or-type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER 
transitions ->  {"class-type":416,"type-name":417,"OBJECT":144,"STRING":145,"namespace-or-type-name":92,"IDENTIFIER":147}

item set 355 
checked-expression -> CHECKED OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 356 
unchecked-expression -> UNCHECKED OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 357 
lock-statement -> LOCK OPEN_PARENS expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":418,"block":17,"empty-statement":18,"expression-statement":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"OPEN_BRACE":5,"SEMICOLON":30,"statement-expression":31,"if-statement":32,"switch-statement":33,"while-statement":34,"do-statement":35,"for-statement":36,"foreach-statement":37,"break-statement":38,"continue-statement":39,"goto-statement":40,"return-statement":41,"throw-statement":42,"TRY":43,"CHECKED":44,"UNCHECKED":45,"LOCK":46,"USING":47,"invocation-expression":50,"object-creation-expression":51,"assignment":52,"post-increment-expression":53,"post-decrement-expression":54,"pre-increment-expression":55,"pre-decrement-expression":56,"IF":57,"SWITCH":58,"WHILE":59,"DO":60,"FOR":61,"FOREACH":62,"BREAK":63,"CONTINUE":64,"GOTO":65,"RETURN":66,"THROW":67,"primary-expression":74,"NEW":75,"unary-expression":76,"OP_INC":77,"OP_DEC":78,"primary-no-array-creation-expression":84,"array-creation-expression":85,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"cast-expression":91,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"element-access":99,"this-access":100,"base-access":101,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"OPEN_PARENS":107,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 358 
using-statement -> USING OPEN_PARENS resource-acquisition CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":419,"block":17,"empty-statement":18,"expression-statement":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"OPEN_BRACE":5,"SEMICOLON":30,"statement-expression":31,"if-statement":32,"switch-statement":33,"while-statement":34,"do-statement":35,"for-statement":36,"foreach-statement":37,"break-statement":38,"continue-statement":39,"goto-statement":40,"return-statement":41,"throw-statement":42,"TRY":43,"CHECKED":44,"UNCHECKED":45,"LOCK":46,"USING":47,"invocation-expression":50,"object-creation-expression":51,"assignment":52,"post-increment-expression":53,"post-decrement-expression":54,"pre-increment-expression":55,"pre-decrement-expression":56,"IF":57,"SWITCH":58,"WHILE":59,"DO":60,"FOR":61,"FOREACH":62,"BREAK":63,"CONTINUE":64,"GOTO":65,"RETURN":66,"THROW":67,"primary-expression":74,"NEW":75,"unary-expression":76,"OP_INC":77,"OP_DEC":78,"primary-no-array-creation-expression":84,"array-creation-expression":85,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"cast-expression":91,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"element-access":99,"this-access":100,"base-access":101,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"OPEN_PARENS":107,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 359 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement ELSE embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":420,"block":17,"empty-statement":18,"expression-statement":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"OPEN_BRACE":5,"SEMICOLON":30,"statement-expression":31,"if-statement":32,"switch-statement":33,"while-statement":34,"do-statement":35,"for-statement":36,"foreach-statement":37,"break-statement":38,"continue-statement":39,"goto-statement":40,"return-statement":41,"throw-statement":42,"TRY":43,"CHECKED":44,"UNCHECKED":45,"LOCK":46,"USING":47,"invocation-expression":50,"object-creation-expression":51,"assignment":52,"post-increment-expression":53,"post-decrement-expression":54,"pre-increment-expression":55,"pre-decrement-expression":56,"IF":57,"SWITCH":58,"WHILE":59,"DO":60,"FOR":61,"FOREACH":62,"BREAK":63,"CONTINUE":64,"GOTO":65,"RETURN":66,"THROW":67,"primary-expression":74,"NEW":75,"unary-expression":76,"OP_INC":77,"OP_DEC":78,"primary-no-array-creation-expression":84,"array-creation-expression":85,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"cast-expression":91,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"element-access":99,"this-access":100,"base-access":101,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"OPEN_PARENS":107,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 360 
switch-statement -> SWITCH OPEN_PARENS expression CLOSE_PARENS .switch-block
switch-block -> .OPEN_BRACE CLOSE_BRACE
switch-block -> .OPEN_BRACE switch-sections CLOSE_BRACE 
transitions ->  {"switch-block":421,"OPEN_BRACE":422}

item set 361 
while-statement -> WHILE OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":423,"block":17,"empty-statement":18,"expression-statement":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"OPEN_BRACE":5,"SEMICOLON":30,"statement-expression":31,"if-statement":32,"switch-statement":33,"while-statement":34,"do-statement":35,"for-statement":36,"foreach-statement":37,"break-statement":38,"continue-statement":39,"goto-statement":40,"return-statement":41,"throw-statement":42,"TRY":43,"CHECKED":44,"UNCHECKED":45,"LOCK":46,"USING":47,"invocation-expression":50,"object-creation-expression":51,"assignment":52,"post-increment-expression":53,"post-decrement-expression":54,"pre-increment-expression":55,"pre-decrement-expression":56,"IF":57,"SWITCH":58,"WHILE":59,"DO":60,"FOR":61,"FOREACH":62,"BREAK":63,"CONTINUE":64,"GOTO":65,"RETURN":66,"THROW":67,"primary-expression":74,"NEW":75,"unary-expression":76,"OP_INC":77,"OP_DEC":78,"primary-no-array-creation-expression":84,"array-creation-expression":85,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"cast-expression":91,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"element-access":99,"this-access":100,"base-access":101,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"OPEN_PARENS":107,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 362 
do-statement -> DO embedded-statement WHILE OPEN_PARENS .boolean-expression CLOSE_PARENS SEMICOLON
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":424,"expression":279,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 363 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_PARENS":425,"for-iterator":426,"statement-expression-list":427,"statement-expression":287,"invocation-expression":50,"object-creation-expression":51,"assignment":52,"post-increment-expression":53,"post-decrement-expression":54,"pre-increment-expression":55,"pre-decrement-expression":56,"primary-expression":74,"NEW":75,"unary-expression":76,"OP_INC":77,"OP_DEC":78,"primary-no-array-creation-expression":84,"array-creation-expression":85,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"cast-expression":91,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"element-access":99,"this-access":100,"base-access":101,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"OPEN_PARENS":107,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 364 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition .SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":428}

item set 365 
for-condition -> boolean-expression . 
transitions ->  {}

item set 366 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-condition -> .boolean-expression
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":429,"for-condition":430,"boolean-expression":365,"expression":279,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 367 
statement-expression-list -> statement-expression-list COMMA .statement-expression
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"statement-expression":431,"invocation-expression":50,"object-creation-expression":51,"assignment":52,"post-increment-expression":53,"post-decrement-expression":54,"pre-increment-expression":55,"pre-decrement-expression":56,"primary-expression":74,"NEW":75,"unary-expression":76,"OP_INC":77,"OP_DEC":78,"primary-no-array-creation-expression":84,"array-creation-expression":85,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"cast-expression":91,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"element-access":99,"this-access":100,"base-access":101,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"OPEN_PARENS":107,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 368 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER .IN expression CLOSE_PARENS embedded-statement 
transitions ->  {"IN":432}

item set 369 
goto-statement -> GOTO CASE constant-expression SEMICOLON . 
transitions ->  {}

item set 370 
conditional-expression -> conditional-or-expression INTERR expression .COLON expression 
transitions ->  {"COLON":433}

item set 371 
conditional-or-expression -> conditional-or-expression OP_OR conditional-and-expression .
conditional-and-expression -> conditional-and-expression .OP_AND inclusive-or-expression 
transitions ->  {"OP_AND":296}

item set 372 
multiplicative-expression -> unary-expression . 
transitions ->  {}

item set 373 
conditional-and-expression -> conditional-and-expression OP_AND inclusive-or-expression .
inclusive-or-expression -> inclusive-or-expression .BITWISE_OR exclusive-or-expression 
transitions ->  {"BITWISE_OR":297}

item set 374 
inclusive-or-expression -> inclusive-or-expression BITWISE_OR exclusive-or-expression .
exclusive-or-expression -> exclusive-or-expression .CARET and-expression 
transitions ->  {"CARET":298}

item set 375 
exclusive-or-expression -> exclusive-or-expression CARET and-expression .
and-expression -> and-expression .AMP equality-expression 
transitions ->  {"AMP":299}

item set 376 
and-expression -> and-expression AMP equality-expression .
equality-expression -> equality-expression .OP_EQ relational-expression
equality-expression -> equality-expression .OP_NE relational-expression 
transitions ->  {"OP_EQ":300,"OP_NE":301}

item set 377 
equality-expression -> equality-expression OP_EQ relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":302,"GT":303,"OP_LE":304,"OP_GE":305,"IS":306,"AS":307}

item set 378 
equality-expression -> equality-expression OP_NE relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":302,"GT":303,"OP_LE":304,"OP_GE":305,"IS":306,"AS":307}

item set 379 
relational-expression -> relational-expression LT shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":308,"RIGHT_SHIFT":309}

item set 380 
relational-expression -> relational-expression GT shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":308,"RIGHT_SHIFT":309}

item set 381 
relational-expression -> relational-expression OP_LE shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":308,"RIGHT_SHIFT":309}

item set 382 
relational-expression -> relational-expression OP_GE shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":308,"RIGHT_SHIFT":309}

item set 383 
relational-expression -> relational-expression IS type .
non-array-type -> type . 
transitions ->  {}

item set 384 
relational-expression -> relational-expression AS type .
non-array-type -> type . 
transitions ->  {}

item set 385 
shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":310,"MINUS":311}

item set 386 
shift-expression -> shift-expression RIGHT_SHIFT additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":310,"MINUS":311}

item set 387 
additive-expression -> additive-expression PLUS multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":312,"DIV":313,"PERCENT":314}

item set 388 
additive-expression -> additive-expression MINUS multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":312,"DIV":313,"PERCENT":314}

item set 389 
multiplicative-expression -> multiplicative-expression STAR unary-expression . 
transitions ->  {}

item set 390 
multiplicative-expression -> multiplicative-expression DIV unary-expression . 
transitions ->  {}

item set 391 
multiplicative-expression -> multiplicative-expression PERCENT unary-expression . 
transitions ->  {}

item set 392 
invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 393 
argument-list -> argument-list COMMA .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument":434,"expression":319,"REF":320,"OUT":321,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 394 
argument -> REF variable-reference . 
transitions ->  {}

item set 395 
variable-reference -> expression . 
transitions ->  {}

item set 396 
argument -> OUT variable-reference . 
transitions ->  {}

item set 397 
object-creation-expression -> NEW type OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 398 
object-creation-expression -> NEW type OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":435,"COMMA":393}

item set 399 
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET rank-specifiers
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET array-initializer
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET rank-specifiers array-initializer
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":436,"COMMA":409}

item set 400 
array-initializer -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 401 
array-initializer -> OPEN_BRACE variable-initializer-list .CLOSE_BRACE
array-initializer -> OPEN_BRACE variable-initializer-list .COMMA CLOSE_BRACE
variable-initializer-list -> variable-initializer-list .COMMA variable-initializer 
transitions ->  {"CLOSE_BRACE":437,"COMMA":438}

item set 402 
variable-initializer-list -> variable-initializer . 
transitions ->  {}

item set 403 
variable-initializer -> expression . 
transitions ->  {}

item set 404 
variable-initializer -> array-initializer . 
transitions ->  {}

item set 405 
delegate-creation-expression -> NEW delegate-type OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":439}

item set 406 
rank-specifier -> OPEN_BRACKET dim-separators CLOSE_BRACKET . 
transitions ->  {}

item set 407 
dim-separators -> dim-separators COMMA . 
transitions ->  {}

item set 408 
element-access -> primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET . 
transitions ->  {}

item set 409 
expression-list -> expression-list COMMA .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":440,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 410 
cast-expression -> OPEN_PARENS type CLOSE_PARENS unary-expression . 
transitions ->  {}

item set 411 
base-access -> base OPEN_BRACKET expression-list CLOSE_BRACKET . 
transitions ->  {}

item set 412 
typeof-expression -> TYPEOF OPEN_PARENS type CLOSE_PARENS . 
transitions ->  {}

item set 413 
typeof-expression -> TYPEOF OPEN_PARENS VOID CLOSE_PARENS . 
transitions ->  {}

item set 414 
constant-declarators -> constant-declarators COMMA constant-declarator . 
transitions ->  {}

item set 415 
constant-declarator -> IDENTIFIER ASSIGN constant-expression . 
transitions ->  {}

item set 416 
specific-catch-clause -> CATCH OPEN_PARENS class-type .CLOSE_PARENS block
specific-catch-clause -> CATCH OPEN_PARENS class-type .IDENTIFIER CLOSE_PARENS block 
transitions ->  {"CLOSE_PARENS":441,"IDENTIFIER":442}

item set 417 
class-type -> type-name . 
transitions ->  {}

item set 418 
lock-statement -> LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 419 
using-statement -> USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 420 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement .
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement .ELSE embedded-statement 
transitions ->  {"ELSE":443}

item set 421 
switch-statement -> SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block . 
transitions ->  {}

item set 422 
switch-block -> OPEN_BRACE .CLOSE_BRACE
switch-block -> OPEN_BRACE .switch-sections CLOSE_BRACE
switch-sections -> .switch-section
switch-sections -> .switch-sections switch-section
switch-section -> .switch-labels statement-list
switch-labels -> .switch-label
switch-labels -> .switch-labels switch-label
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON 
transitions ->  {"CLOSE_BRACE":444,"switch-sections":445,"switch-section":446,"switch-labels":447,"switch-label":448,"CASE":449,"DEFAULT":450}

item set 423 
while-statement -> WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 424 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression .CLOSE_PARENS SEMICOLON 
transitions ->  {"CLOSE_PARENS":451}

item set 425 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":452,"block":17,"empty-statement":18,"expression-statement":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"OPEN_BRACE":5,"SEMICOLON":30,"statement-expression":31,"if-statement":32,"switch-statement":33,"while-statement":34,"do-statement":35,"for-statement":36,"foreach-statement":37,"break-statement":38,"continue-statement":39,"goto-statement":40,"return-statement":41,"throw-statement":42,"TRY":43,"CHECKED":44,"UNCHECKED":45,"LOCK":46,"USING":47,"invocation-expression":50,"object-creation-expression":51,"assignment":52,"post-increment-expression":53,"post-decrement-expression":54,"pre-increment-expression":55,"pre-decrement-expression":56,"IF":57,"SWITCH":58,"WHILE":59,"DO":60,"FOR":61,"FOREACH":62,"BREAK":63,"CONTINUE":64,"GOTO":65,"RETURN":66,"THROW":67,"primary-expression":74,"NEW":75,"unary-expression":76,"OP_INC":77,"OP_DEC":78,"primary-no-array-creation-expression":84,"array-creation-expression":85,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"cast-expression":91,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"element-access":99,"this-access":100,"base-access":101,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"OPEN_PARENS":107,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 426 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":453}

item set 427 
for-iterator -> statement-expression-list .
statement-expression-list -> statement-expression-list .COMMA statement-expression 
transitions ->  {"COMMA":367}

item set 428 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_PARENS":454,"for-iterator":455,"statement-expression-list":427,"statement-expression":287,"invocation-expression":50,"object-creation-expression":51,"assignment":52,"post-increment-expression":53,"post-decrement-expression":54,"pre-increment-expression":55,"pre-decrement-expression":56,"primary-expression":74,"NEW":75,"unary-expression":76,"OP_INC":77,"OP_DEC":78,"primary-no-array-creation-expression":84,"array-creation-expression":85,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"cast-expression":91,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"element-access":99,"this-access":100,"base-access":101,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"OPEN_PARENS":107,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 429 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_PARENS":456,"for-iterator":457,"statement-expression-list":427,"statement-expression":287,"invocation-expression":50,"object-creation-expression":51,"assignment":52,"post-increment-expression":53,"post-decrement-expression":54,"pre-increment-expression":55,"pre-decrement-expression":56,"primary-expression":74,"NEW":75,"unary-expression":76,"OP_INC":77,"OP_DEC":78,"primary-no-array-creation-expression":84,"array-creation-expression":85,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"cast-expression":91,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"element-access":99,"this-access":100,"base-access":101,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"OPEN_PARENS":107,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 430 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition .SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":458}

item set 431 
statement-expression-list -> statement-expression-list COMMA statement-expression . 
transitions ->  {}

item set 432 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER IN .expression CLOSE_PARENS embedded-statement
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":459,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 433 
conditional-expression -> conditional-or-expression INTERR expression COLON .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":460,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 434 
argument-list -> argument-list COMMA argument . 
transitions ->  {}

item set 435 
object-creation-expression -> NEW type OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 436 
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .rank-specifiers
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .array-initializer
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .rank-specifiers array-initializer
rank-specifiers -> .rank-specifier
rank-specifiers -> .rank-specifiers rank-specifier
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET 
transitions ->  {"rank-specifiers":461,"array-initializer":462,"rank-specifier":243,"OPEN_BRACE":326,"OPEN_BRACKET":244}

item set 437 
array-initializer -> OPEN_BRACE variable-initializer-list CLOSE_BRACE . 
transitions ->  {}

item set 438 
array-initializer -> OPEN_BRACE variable-initializer-list COMMA .CLOSE_BRACE
variable-initializer-list -> variable-initializer-list COMMA .variable-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACE":463,"variable-initializer":464,"expression":403,"array-initializer":404,"conditional-expression":197,"assignment":198,"OPEN_BRACE":326,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 439 
delegate-creation-expression -> NEW delegate-type OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 440 
expression-list -> expression-list COMMA expression . 
transitions ->  {}

item set 441 
specific-catch-clause -> CATCH OPEN_PARENS class-type CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":465,"OPEN_BRACE":5}

item set 442 
specific-catch-clause -> CATCH OPEN_PARENS class-type IDENTIFIER .CLOSE_PARENS block 
transitions ->  {"CLOSE_PARENS":466}

item set 443 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":467,"block":17,"empty-statement":18,"expression-statement":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"OPEN_BRACE":5,"SEMICOLON":30,"statement-expression":31,"if-statement":32,"switch-statement":33,"while-statement":34,"do-statement":35,"for-statement":36,"foreach-statement":37,"break-statement":38,"continue-statement":39,"goto-statement":40,"return-statement":41,"throw-statement":42,"TRY":43,"CHECKED":44,"UNCHECKED":45,"LOCK":46,"USING":47,"invocation-expression":50,"object-creation-expression":51,"assignment":52,"post-increment-expression":53,"post-decrement-expression":54,"pre-increment-expression":55,"pre-decrement-expression":56,"IF":57,"SWITCH":58,"WHILE":59,"DO":60,"FOR":61,"FOREACH":62,"BREAK":63,"CONTINUE":64,"GOTO":65,"RETURN":66,"THROW":67,"primary-expression":74,"NEW":75,"unary-expression":76,"OP_INC":77,"OP_DEC":78,"primary-no-array-creation-expression":84,"array-creation-expression":85,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"cast-expression":91,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"element-access":99,"this-access":100,"base-access":101,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"OPEN_PARENS":107,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 444 
switch-block -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 445 
switch-block -> OPEN_BRACE switch-sections .CLOSE_BRACE
switch-sections -> switch-sections .switch-section
switch-section -> .switch-labels statement-list
switch-labels -> .switch-label
switch-labels -> .switch-labels switch-label
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON 
transitions ->  {"CLOSE_BRACE":468,"switch-section":469,"switch-labels":447,"switch-label":448,"CASE":449,"DEFAULT":450}

item set 446 
switch-sections -> switch-section . 
transitions ->  {}

item set 447 
switch-section -> switch-labels .statement-list
switch-labels -> switch-labels .switch-label
statement-list -> .statement
statement-list -> .statement-list statement
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"statement-list":470,"switch-label":471,"statement":10,"CASE":449,"DEFAULT":450,"labeled-statement":11,"declaration-statement":12,"embedded-statement":13,"IDENTIFIER":14,"local-variable-declaration":15,"local-constant-declaration":16,"block":17,"empty-statement":18,"expression-statement":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"type":28,"CONST":29,"OPEN_BRACE":5,"SEMICOLON":30,"statement-expression":31,"if-statement":32,"switch-statement":33,"while-statement":34,"do-statement":35,"for-statement":36,"foreach-statement":37,"break-statement":38,"continue-statement":39,"goto-statement":40,"return-statement":41,"throw-statement":42,"TRY":43,"CHECKED":44,"UNCHECKED":45,"LOCK":46,"USING":47,"value-type":48,"reference-type":49,"invocation-expression":50,"object-creation-expression":51,"assignment":52,"post-increment-expression":53,"post-decrement-expression":54,"pre-increment-expression":55,"pre-decrement-expression":56,"IF":57,"SWITCH":58,"WHILE":59,"DO":60,"FOR":61,"FOREACH":62,"BREAK":63,"CONTINUE":64,"GOTO":65,"RETURN":66,"THROW":67,"struct-type":68,"enum-type":69,"class-type":70,"interface-type":71,"array-type":72,"delegate-type":73,"primary-expression":74,"NEW":75,"unary-expression":76,"OP_INC":77,"OP_DEC":78,"type-name":79,"simple-type":80,"OBJECT":81,"STRING":82,"non-array-type":83,"primary-no-array-creation-expression":84,"array-creation-expression":85,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"cast-expression":91,"namespace-or-type-name":92,"numeric-type":93,"BOOL":94,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"element-access":99,"this-access":100,"base-access":101,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"OPEN_PARENS":107,"integral-type":108,"floating-point-type":109,"DECIMAL":110,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"SBYTE":121,"BYTE":122,"SHORT":123,"USHORT":124,"INT":125,"UINT":126,"LONG":127,"ULONG":128,"CHAR":129,"FLOAT":130,"DOUBLE":131,"TRUE":132,"FALSE":133}

item set 448 
switch-labels -> switch-label . 
transitions ->  {}

item set 449 
switch-label -> CASE .constant-expression COLON
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":472,"expression":291,"conditional-expression":197,"assignment":198,"conditional-or-expression":199,"unary-expression":200,"conditional-and-expression":201,"primary-expression":74,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"pre-increment-expression":202,"pre-decrement-expression":203,"cast-expression":91,"inclusive-or-expression":204,"primary-no-array-creation-expression":84,"array-creation-expression":85,"OP_INC":77,"OP_DEC":78,"OPEN_PARENS":107,"exclusive-or-expression":205,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"invocation-expression":206,"element-access":99,"this-access":100,"base-access":101,"post-increment-expression":207,"post-decrement-expression":208,"object-creation-expression":209,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"NEW":75,"and-expression":210,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"equality-expression":213,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187,"relational-expression":214,"shift-expression":215,"additive-expression":216,"multiplicative-expression":217}

item set 450 
switch-label -> DEFAULT .COLON 
transitions ->  {"COLON":473}

item set 451 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":474}

item set 452 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 453 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":475,"block":17,"empty-statement":18,"expression-statement":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"OPEN_BRACE":5,"SEMICOLON":30,"statement-expression":31,"if-statement":32,"switch-statement":33,"while-statement":34,"do-statement":35,"for-statement":36,"foreach-statement":37,"break-statement":38,"continue-statement":39,"goto-statement":40,"return-statement":41,"throw-statement":42,"TRY":43,"CHECKED":44,"UNCHECKED":45,"LOCK":46,"USING":47,"invocation-expression":50,"object-creation-expression":51,"assignment":52,"post-increment-expression":53,"post-decrement-expression":54,"pre-increment-expression":55,"pre-decrement-expression":56,"IF":57,"SWITCH":58,"WHILE":59,"DO":60,"FOR":61,"FOREACH":62,"BREAK":63,"CONTINUE":64,"GOTO":65,"RETURN":66,"THROW":67,"primary-expression":74,"NEW":75,"unary-expression":76,"OP_INC":77,"OP_DEC":78,"primary-no-array-creation-expression":84,"array-creation-expression":85,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"cast-expression":91,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"element-access":99,"this-access":100,"base-access":101,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"OPEN_PARENS":107,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 454 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":476,"block":17,"empty-statement":18,"expression-statement":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"OPEN_BRACE":5,"SEMICOLON":30,"statement-expression":31,"if-statement":32,"switch-statement":33,"while-statement":34,"do-statement":35,"for-statement":36,"foreach-statement":37,"break-statement":38,"continue-statement":39,"goto-statement":40,"return-statement":41,"throw-statement":42,"TRY":43,"CHECKED":44,"UNCHECKED":45,"LOCK":46,"USING":47,"invocation-expression":50,"object-creation-expression":51,"assignment":52,"post-increment-expression":53,"post-decrement-expression":54,"pre-increment-expression":55,"pre-decrement-expression":56,"IF":57,"SWITCH":58,"WHILE":59,"DO":60,"FOR":61,"FOREACH":62,"BREAK":63,"CONTINUE":64,"GOTO":65,"RETURN":66,"THROW":67,"primary-expression":74,"NEW":75,"unary-expression":76,"OP_INC":77,"OP_DEC":78,"primary-no-array-creation-expression":84,"array-creation-expression":85,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"cast-expression":91,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"element-access":99,"this-access":100,"base-access":101,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"OPEN_PARENS":107,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 455 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":477}

item set 456 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":478,"block":17,"empty-statement":18,"expression-statement":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"OPEN_BRACE":5,"SEMICOLON":30,"statement-expression":31,"if-statement":32,"switch-statement":33,"while-statement":34,"do-statement":35,"for-statement":36,"foreach-statement":37,"break-statement":38,"continue-statement":39,"goto-statement":40,"return-statement":41,"throw-statement":42,"TRY":43,"CHECKED":44,"UNCHECKED":45,"LOCK":46,"USING":47,"invocation-expression":50,"object-creation-expression":51,"assignment":52,"post-increment-expression":53,"post-decrement-expression":54,"pre-increment-expression":55,"pre-decrement-expression":56,"IF":57,"SWITCH":58,"WHILE":59,"DO":60,"FOR":61,"FOREACH":62,"BREAK":63,"CONTINUE":64,"GOTO":65,"RETURN":66,"THROW":67,"primary-expression":74,"NEW":75,"unary-expression":76,"OP_INC":77,"OP_DEC":78,"primary-no-array-creation-expression":84,"array-creation-expression":85,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"cast-expression":91,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"element-access":99,"this-access":100,"base-access":101,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"OPEN_PARENS":107,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 457 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":479}

item set 458 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_PARENS":480,"for-iterator":481,"statement-expression-list":427,"statement-expression":287,"invocation-expression":50,"object-creation-expression":51,"assignment":52,"post-increment-expression":53,"post-decrement-expression":54,"pre-increment-expression":55,"pre-decrement-expression":56,"primary-expression":74,"NEW":75,"unary-expression":76,"OP_INC":77,"OP_DEC":78,"primary-no-array-creation-expression":84,"array-creation-expression":85,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"cast-expression":91,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"element-access":99,"this-access":100,"base-access":101,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"OPEN_PARENS":107,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"CHECKED":211,"UNCHECKED":212,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 459 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER IN expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":482}

item set 460 
conditional-expression -> conditional-or-expression INTERR expression COLON expression . 
transitions ->  {}

item set 461 
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers .
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers .array-initializer
rank-specifiers -> rank-specifiers .rank-specifier
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET 
transitions ->  {"array-initializer":483,"rank-specifier":329,"OPEN_BRACE":326,"OPEN_BRACKET":244}

item set 462 
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer . 
transitions ->  {}

item set 463 
array-initializer -> OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE . 
transitions ->  {}

item set 464 
variable-initializer-list -> variable-initializer-list COMMA variable-initializer . 
transitions ->  {}

item set 465 
specific-catch-clause -> CATCH OPEN_PARENS class-type CLOSE_PARENS block . 
transitions ->  {}

item set 466 
specific-catch-clause -> CATCH OPEN_PARENS class-type IDENTIFIER CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":484,"OPEN_BRACE":5}

item set 467 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement . 
transitions ->  {}

item set 468 
switch-block -> OPEN_BRACE switch-sections CLOSE_BRACE . 
transitions ->  {}

item set 469 
switch-sections -> switch-sections switch-section . 
transitions ->  {}

item set 470 
switch-section -> switch-labels statement-list .
statement-list -> statement-list .statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"statement":135,"labeled-statement":11,"declaration-statement":12,"embedded-statement":13,"IDENTIFIER":14,"local-variable-declaration":15,"local-constant-declaration":16,"block":17,"empty-statement":18,"expression-statement":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"type":28,"CONST":29,"OPEN_BRACE":5,"SEMICOLON":30,"statement-expression":31,"if-statement":32,"switch-statement":33,"while-statement":34,"do-statement":35,"for-statement":36,"foreach-statement":37,"break-statement":38,"continue-statement":39,"goto-statement":40,"return-statement":41,"throw-statement":42,"TRY":43,"CHECKED":44,"UNCHECKED":45,"LOCK":46,"USING":47,"value-type":48,"reference-type":49,"invocation-expression":50,"object-creation-expression":51,"assignment":52,"post-increment-expression":53,"post-decrement-expression":54,"pre-increment-expression":55,"pre-decrement-expression":56,"IF":57,"SWITCH":58,"WHILE":59,"DO":60,"FOR":61,"FOREACH":62,"BREAK":63,"CONTINUE":64,"GOTO":65,"RETURN":66,"THROW":67,"struct-type":68,"enum-type":69,"class-type":70,"interface-type":71,"array-type":72,"delegate-type":73,"primary-expression":74,"NEW":75,"unary-expression":76,"OP_INC":77,"OP_DEC":78,"type-name":79,"simple-type":80,"OBJECT":81,"STRING":82,"non-array-type":83,"primary-no-array-creation-expression":84,"array-creation-expression":85,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"cast-expression":91,"namespace-or-type-name":92,"numeric-type":93,"BOOL":94,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"element-access":99,"this-access":100,"base-access":101,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"OPEN_PARENS":107,"integral-type":108,"floating-point-type":109,"DECIMAL":110,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"SBYTE":121,"BYTE":122,"SHORT":123,"USHORT":124,"INT":125,"UINT":126,"LONG":127,"ULONG":128,"CHAR":129,"FLOAT":130,"DOUBLE":131,"TRUE":132,"FALSE":133}

item set 471 
switch-labels -> switch-labels switch-label . 
transitions ->  {}

item set 472 
switch-label -> CASE constant-expression .COLON 
transitions ->  {"COLON":485}

item set 473 
switch-label -> DEFAULT COLON . 
transitions ->  {}

item set 474 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 475 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 476 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 477 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":486,"block":17,"empty-statement":18,"expression-statement":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"OPEN_BRACE":5,"SEMICOLON":30,"statement-expression":31,"if-statement":32,"switch-statement":33,"while-statement":34,"do-statement":35,"for-statement":36,"foreach-statement":37,"break-statement":38,"continue-statement":39,"goto-statement":40,"return-statement":41,"throw-statement":42,"TRY":43,"CHECKED":44,"UNCHECKED":45,"LOCK":46,"USING":47,"invocation-expression":50,"object-creation-expression":51,"assignment":52,"post-increment-expression":53,"post-decrement-expression":54,"pre-increment-expression":55,"pre-decrement-expression":56,"IF":57,"SWITCH":58,"WHILE":59,"DO":60,"FOR":61,"FOREACH":62,"BREAK":63,"CONTINUE":64,"GOTO":65,"RETURN":66,"THROW":67,"primary-expression":74,"NEW":75,"unary-expression":76,"OP_INC":77,"OP_DEC":78,"primary-no-array-creation-expression":84,"array-creation-expression":85,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"cast-expression":91,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"element-access":99,"this-access":100,"base-access":101,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"OPEN_PARENS":107,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 478 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 479 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":487,"block":17,"empty-statement":18,"expression-statement":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"OPEN_BRACE":5,"SEMICOLON":30,"statement-expression":31,"if-statement":32,"switch-statement":33,"while-statement":34,"do-statement":35,"for-statement":36,"foreach-statement":37,"break-statement":38,"continue-statement":39,"goto-statement":40,"return-statement":41,"throw-statement":42,"TRY":43,"CHECKED":44,"UNCHECKED":45,"LOCK":46,"USING":47,"invocation-expression":50,"object-creation-expression":51,"assignment":52,"post-increment-expression":53,"post-decrement-expression":54,"pre-increment-expression":55,"pre-decrement-expression":56,"IF":57,"SWITCH":58,"WHILE":59,"DO":60,"FOR":61,"FOREACH":62,"BREAK":63,"CONTINUE":64,"GOTO":65,"RETURN":66,"THROW":67,"primary-expression":74,"NEW":75,"unary-expression":76,"OP_INC":77,"OP_DEC":78,"primary-no-array-creation-expression":84,"array-creation-expression":85,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"cast-expression":91,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"element-access":99,"this-access":100,"base-access":101,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"OPEN_PARENS":107,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 480 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":488,"block":17,"empty-statement":18,"expression-statement":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"OPEN_BRACE":5,"SEMICOLON":30,"statement-expression":31,"if-statement":32,"switch-statement":33,"while-statement":34,"do-statement":35,"for-statement":36,"foreach-statement":37,"break-statement":38,"continue-statement":39,"goto-statement":40,"return-statement":41,"throw-statement":42,"TRY":43,"CHECKED":44,"UNCHECKED":45,"LOCK":46,"USING":47,"invocation-expression":50,"object-creation-expression":51,"assignment":52,"post-increment-expression":53,"post-decrement-expression":54,"pre-increment-expression":55,"pre-decrement-expression":56,"IF":57,"SWITCH":58,"WHILE":59,"DO":60,"FOR":61,"FOREACH":62,"BREAK":63,"CONTINUE":64,"GOTO":65,"RETURN":66,"THROW":67,"primary-expression":74,"NEW":75,"unary-expression":76,"OP_INC":77,"OP_DEC":78,"primary-no-array-creation-expression":84,"array-creation-expression":85,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"cast-expression":91,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"element-access":99,"this-access":100,"base-access":101,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"OPEN_PARENS":107,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 481 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":489}

item set 482 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":490,"block":17,"empty-statement":18,"expression-statement":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"OPEN_BRACE":5,"SEMICOLON":30,"statement-expression":31,"if-statement":32,"switch-statement":33,"while-statement":34,"do-statement":35,"for-statement":36,"foreach-statement":37,"break-statement":38,"continue-statement":39,"goto-statement":40,"return-statement":41,"throw-statement":42,"TRY":43,"CHECKED":44,"UNCHECKED":45,"LOCK":46,"USING":47,"invocation-expression":50,"object-creation-expression":51,"assignment":52,"post-increment-expression":53,"post-decrement-expression":54,"pre-increment-expression":55,"pre-decrement-expression":56,"IF":57,"SWITCH":58,"WHILE":59,"DO":60,"FOR":61,"FOREACH":62,"BREAK":63,"CONTINUE":64,"GOTO":65,"RETURN":66,"THROW":67,"primary-expression":74,"NEW":75,"unary-expression":76,"OP_INC":77,"OP_DEC":78,"primary-no-array-creation-expression":84,"array-creation-expression":85,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"cast-expression":91,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"element-access":99,"this-access":100,"base-access":101,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"OPEN_PARENS":107,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 483 
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer . 
transitions ->  {}

item set 484 
specific-catch-clause -> CATCH OPEN_PARENS class-type IDENTIFIER CLOSE_PARENS block . 
transitions ->  {}

item set 485 
switch-label -> CASE constant-expression COLON . 
transitions ->  {}

item set 486 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 487 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 488 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 489 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":491,"block":17,"empty-statement":18,"expression-statement":19,"selection-statement":20,"iteration-statement":21,"jump-statement":22,"try-statement":23,"checked-statement":24,"unchecked-statement":25,"lock-statement":26,"using-statement":27,"OPEN_BRACE":5,"SEMICOLON":30,"statement-expression":31,"if-statement":32,"switch-statement":33,"while-statement":34,"do-statement":35,"for-statement":36,"foreach-statement":37,"break-statement":38,"continue-statement":39,"goto-statement":40,"return-statement":41,"throw-statement":42,"TRY":43,"CHECKED":44,"UNCHECKED":45,"LOCK":46,"USING":47,"invocation-expression":50,"object-creation-expression":51,"assignment":52,"post-increment-expression":53,"post-decrement-expression":54,"pre-increment-expression":55,"pre-decrement-expression":56,"IF":57,"SWITCH":58,"WHILE":59,"DO":60,"FOR":61,"FOREACH":62,"BREAK":63,"CONTINUE":64,"GOTO":65,"RETURN":66,"THROW":67,"primary-expression":74,"NEW":75,"unary-expression":76,"OP_INC":77,"OP_DEC":78,"primary-no-array-creation-expression":84,"array-creation-expression":85,"PLUS":86,"MINUS":87,"BANG":88,"TILDE":89,"STAR":90,"cast-expression":91,"literal":95,"simple-name":96,"parenthesized-expression":97,"member-access":98,"element-access":99,"this-access":100,"base-access":101,"delegate-creation-expression":102,"typeof-expression":103,"sizeof-expression":104,"checked-expression":105,"unchecked-expression":106,"OPEN_PARENS":107,"BOOLEAN_LITERAL":111,"REAL_LITERAL":112,"INTEGER_LITERAL":113,"STRING_LITERAL":114,"CHARACTER_LITERAL":115,"NULL":116,"IDENTIFIER":172,"predefined-type":117,"THIS":118,"base":119,"TYPEOF":120,"TRUE":132,"FALSE":133,"BOOL":173,"BYTE":174,"CHAR":175,"DECIMAL":176,"DOUBLE":177,"FLOAT":178,"INT":179,"LONG":180,"OBJECT":181,"SBYTE":182,"SHORT":183,"STRING":184,"UINT":185,"ULONG":186,"USHORT":187}

item set 490 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 491 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}
492 states.
Building lookahead grammar.
Computing lookaheads.
Building parse table.
Conflict at state: 0, token: OPEN_BRACE
  reduce by rule: e -> 
  shift token (then go to state 5)
Conflict at state: 2, token: OPEN_BRACE
  reduce by rule: e -> 
  shift token (then go to state 5)
Conflict at state: 2, token: EOF
  reduce by rule: e -> 
  shift token (then go to state 6)
Conflict at state: 14, token: SEMICOLON
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 14, token: IDENTIFIER
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 14, token: ASSIGN
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 14, token: COMMA
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 14, token: DOT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 14, token: OPEN_BRACKET
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 14, token: OPEN_PARENS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 14, token: OP_INC
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 14, token: OP_DEC
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 14, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 14, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 14, token: OP_XOR_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 14, token: OP_OR_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 14, token: OP_AND_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 14, token: OP_MOD_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 14, token: OP_DIV_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 14, token: OP_MULT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 14, token: OP_SUB_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 14, token: OP_ADD_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 50, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 50, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 50, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 50, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 50, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 50, token: DOT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 50, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 50, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 50, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 50, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 50, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 50, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 50, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 50, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 50, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 50, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 50, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 50, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 50, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 51, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 51, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 51, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 51, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 51, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 51, token: DOT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 51, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 51, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 51, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 51, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 51, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 51, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 51, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 51, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 51, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 51, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 51, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 51, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 51, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 53, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 53, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 53, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 53, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 53, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 53, token: DOT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 53, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 53, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 53, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 53, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 53, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 53, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 53, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 53, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 53, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 53, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 53, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 53, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 53, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 54, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 54, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 54, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 54, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 54, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 54, token: DOT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 54, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 54, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 54, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 54, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 54, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 54, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 54, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 54, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 54, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 54, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 54, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 54, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 54, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 55, token: SEMICOLON
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 55, token: ASSIGN
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 55, token: OP_ADD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 55, token: OP_SUB_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 55, token: OP_MULT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 55, token: OP_DIV_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 55, token: OP_MOD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 55, token: OP_AND_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 55, token: OP_OR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 55, token: OP_XOR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 55, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 55, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 55, token: COMMA
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 55, token: CLOSE_PARENS
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 56, token: SEMICOLON
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 56, token: ASSIGN
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 56, token: OP_ADD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 56, token: OP_SUB_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 56, token: OP_MULT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 56, token: OP_DIV_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 56, token: OP_MOD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 56, token: OP_AND_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 56, token: OP_OR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 56, token: OP_XOR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 56, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 56, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 56, token: COMMA
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 56, token: CLOSE_PARENS
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 79, token: SEMICOLON
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: IDENTIFIER
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: ASSIGN
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: COMMA
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OPEN_BRACKET
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OPEN_PARENS
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: CLOSE_PARENS
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: IS
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OP_GE
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OP_LE
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: GT
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: LT
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: INTERR
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: CLOSE_BRACKET
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: COLON
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OP_OR
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OP_AND
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: BITWISE_OR
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: CARET
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: AMP
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OP_EQ
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OP_NE
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: CLOSE_BRACE
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: AS
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: SEMICOLON
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: IDENTIFIER
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: ASSIGN
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: COMMA
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OPEN_BRACKET
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OPEN_PARENS
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: CLOSE_PARENS
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: IS
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OP_GE
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OP_LE
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: GT
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: LT
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: INTERR
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: CLOSE_BRACKET
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: COLON
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OP_OR
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OP_AND
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: BITWISE_OR
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: CARET
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: AMP
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OP_EQ
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OP_NE
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: CLOSE_BRACE
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: AS
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: SEMICOLON
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: IDENTIFIER
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: ASSIGN
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: COMMA
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OPEN_BRACKET
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OPEN_PARENS
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: CLOSE_PARENS
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: IS
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OP_GE
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OP_LE
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: GT
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: LT
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: INTERR
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: CLOSE_BRACKET
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: COLON
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OP_OR
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OP_AND
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: BITWISE_OR
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: CARET
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: AMP
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OP_EQ
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OP_NE
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: CLOSE_BRACE
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: AS
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: SEMICOLON
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: IDENTIFIER
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: ASSIGN
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: COMMA
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OPEN_BRACKET
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OPEN_PARENS
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: CLOSE_PARENS
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: IS
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OP_GE
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OP_LE
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: GT
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: LT
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: INTERR
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: CLOSE_BRACKET
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: COLON
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OP_OR
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OP_AND
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: BITWISE_OR
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: CARET
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: AMP
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OP_EQ
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: OP_NE
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: CLOSE_BRACE
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 79, token: AS
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 81, token: SEMICOLON
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 81, token: IDENTIFIER
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 81, token: ASSIGN
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 81, token: COMMA
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 81, token: OPEN_BRACKET
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 81, token: DOT
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 81, token: CLOSE_PARENS
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 82, token: SEMICOLON
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 82, token: IDENTIFIER
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 82, token: ASSIGN
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 82, token: COMMA
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 82, token: OPEN_BRACKET
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 82, token: DOT
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 82, token: CLOSE_PARENS
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 94, token: COMMA
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 94, token: ASSIGN
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 94, token: IDENTIFIER
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 94, token: SEMICOLON
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 94, token: OPEN_BRACKET
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 94, token: DOT
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 94, token: CLOSE_PARENS
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 110, token: SEMICOLON
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 110, token: IDENTIFIER
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 110, token: ASSIGN
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 110, token: COMMA
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 110, token: OPEN_BRACKET
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 110, token: DOT
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 110, token: CLOSE_PARENS
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 121, token: COMMA
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 121, token: ASSIGN
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 121, token: IDENTIFIER
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 121, token: SEMICOLON
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 121, token: OPEN_BRACKET
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 121, token: DOT
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 121, token: CLOSE_PARENS
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 122, token: COMMA
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 122, token: ASSIGN
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 122, token: IDENTIFIER
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 122, token: SEMICOLON
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 122, token: OPEN_BRACKET
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 122, token: DOT
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 122, token: CLOSE_PARENS
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 123, token: COMMA
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 123, token: ASSIGN
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 123, token: IDENTIFIER
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 123, token: SEMICOLON
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 123, token: OPEN_BRACKET
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 123, token: DOT
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 123, token: CLOSE_PARENS
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 124, token: COMMA
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 124, token: ASSIGN
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 124, token: IDENTIFIER
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 124, token: SEMICOLON
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 124, token: OPEN_BRACKET
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 124, token: DOT
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 124, token: CLOSE_PARENS
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 125, token: COMMA
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 125, token: ASSIGN
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 125, token: IDENTIFIER
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 125, token: SEMICOLON
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 125, token: OPEN_BRACKET
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 125, token: DOT
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 125, token: CLOSE_PARENS
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 126, token: COMMA
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 126, token: ASSIGN
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 126, token: IDENTIFIER
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 126, token: SEMICOLON
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 126, token: OPEN_BRACKET
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 126, token: DOT
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 126, token: CLOSE_PARENS
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 127, token: COMMA
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 127, token: ASSIGN
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 127, token: IDENTIFIER
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 127, token: SEMICOLON
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 127, token: OPEN_BRACKET
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 127, token: DOT
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 127, token: CLOSE_PARENS
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 128, token: COMMA
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 128, token: ASSIGN
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 128, token: IDENTIFIER
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 128, token: SEMICOLON
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 128, token: OPEN_BRACKET
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 128, token: DOT
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 128, token: CLOSE_PARENS
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 129, token: COMMA
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 129, token: ASSIGN
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 129, token: IDENTIFIER
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 129, token: SEMICOLON
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 129, token: OPEN_BRACKET
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 129, token: DOT
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 129, token: CLOSE_PARENS
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 130, token: COMMA
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 130, token: ASSIGN
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 130, token: IDENTIFIER
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 130, token: SEMICOLON
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 130, token: OPEN_BRACKET
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 130, token: DOT
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 130, token: CLOSE_PARENS
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 131, token: COMMA
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 131, token: ASSIGN
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 131, token: IDENTIFIER
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 131, token: SEMICOLON
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 131, token: OPEN_BRACKET
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 131, token: DOT
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 131, token: CLOSE_PARENS
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 227, token: OPEN_PARENS
  reduce by rule: reference-type -> delegate-type
  shift token (then go to state 327)
Conflict at state: 242, token: OPEN_BRACKET
  reduce by rule: array-type -> non-array-type rank-specifiers
  shift token (then go to state 244)
Conflict at state: 254, token: CLOSE_PARENS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: DOT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: OPEN_BRACKET
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: OP_XOR_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: OP_OR_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: OP_AND_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: OP_MOD_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: OP_DIV_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: OP_MULT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: OP_SUB_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: OP_ADD_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: ASSIGN
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: OPEN_PARENS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: OP_INC
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: OP_DEC
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: INTERR
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: STAR
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: DIV
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: PERCENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: OP_LEFT_SHIFT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: RIGHT_SHIFT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: OP_EQ
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: OP_NE
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: CARET
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: OP_AND
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: OP_OR
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: BITWISE_OR
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: AMP
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: AS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: IS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: OP_GE
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: OP_LE
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: GT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: LT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: MINUS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: PLUS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: IDENTIFIER
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: COMMA
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 254, token: SEMICOLON
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 279, token: CLOSE_PARENS
  reduce by rule: boolean-expression -> expression
  reduce by rule: boolean-expression -> expression
Conflict at state: 279, token: SEMICOLON
  reduce by rule: boolean-expression -> expression
  reduce by rule: boolean-expression -> expression
Conflict at state: 420, token: ELSE
  reduce by rule: if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
  shift token (then go to state 443)

373 Conflict(s) found in grammar.
Done.
