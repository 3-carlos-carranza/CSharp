Processing grammar.
$accept(0)
$end(1)
error(2)
compilationUnit(3)
es(4)
EOF(5)
e(6)
attributes(7)
delegate-declaration(8)
block(9)
BOOLEAN_LITERAL(10)
TRUE(11)
FALSE(12)
literal(13)
REAL_LITERAL(14)
INTEGER_LITERAL(15)
STRING_LITERAL(16)
CHARACTER_LITERAL(17)
NULL(18)
namespace-name(19)
namespace-or-type-name(20)
type-name(21)
IDENTIFIER(22)
DOT(23)
type(24)
value-type(25)
reference-type(26)
struct-type(27)
enum-type(28)
simple-type(29)
numeric-type(30)
BOOL(31)
integral-type(32)
floating-point-type(33)
DECIMAL(34)
SBYTE(35)
BYTE(36)
SHORT(37)
USHORT(38)
INT(39)
UINT(40)
LONG(41)
ULONG(42)
CHAR(43)
FLOAT(44)
DOUBLE(45)
class-type(46)
interface-type(47)
array-type(48)
delegate-type(49)
OBJECT(50)
STRING(51)
non-array-type(52)
rank-specifiers(53)
rank-specifier(54)
OPEN_BRACKET(55)
CLOSE_BRACKET(56)
dim-separators(57)
COMMA(58)
variable-reference(59)
expression(60)
argument-list(61)
argument(62)
REF(63)
OUT(64)
primary-expression(65)
primary-no-array-creation-expression(66)
array-creation-expression(67)
simple-name(68)
parenthesized-expression(69)
member-access(70)
invocation-expression(71)
element-access(72)
this-access(73)
base-access(74)
post-increment-expression(75)
post-decrement-expression(76)
object-creation-expression(77)
delegate-creation-expression(78)
typeof-expression(79)
sizeof-expression(80)
checked-expression(81)
unchecked-expression(82)
OPEN_PARENS(83)
CLOSE_PARENS(84)
predefined-type(85)
expression-list(86)
THIS(87)
base(88)
OP_INC(89)
OP_DEC(90)
NEW(91)
array-initializer(92)
TYPEOF(93)
VOID(94)
CHECKED(95)
UNCHECKED(96)
unary-expression(97)
PLUS(98)
MINUS(99)
BANG(100)
TILDE(101)
STAR(102)
pre-increment-expression(103)
pre-decrement-expression(104)
cast-expression(105)
multiplicative-expression(106)
DIV(107)
PERCENT(108)
additive-expression(109)
shift-expression(110)
OP_LEFT_SHIFT(111)
RIGHT_SHIFT(112)
relational-expression(113)
LT(114)
GT(115)
OP_LE(116)
OP_GE(117)
IS(118)
AS(119)
equality-expression(120)
OP_EQ(121)
OP_NE(122)
and-expression(123)
AMP(124)
exclusive-or-expression(125)
CARET(126)
inclusive-or-expression(127)
BITWISE_OR(128)
conditional-and-expression(129)
OP_AND(130)
conditional-or-expression(131)
OP_OR(132)
conditional-expression(133)
INTERR(134)
COLON(135)
assignment(136)
assignment-operator(137)
ASSIGN(138)
OP_ADD_ASSIGNMENT(139)
OP_SUB_ASSIGNMENT(140)
OP_MULT_ASSIGNMENT(141)
OP_DIV_ASSIGNMENT(142)
OP_MOD_ASSIGNMENT(143)
OP_AND_ASSIGNMENT(144)
OP_OR_ASSIGNMENT(145)
OP_XOR_ASSIGNMENT(146)
OP_LEFT_SHIFT_ASSIGNMENT(147)
RIGHT_SHIFT_ASSIGNMENT(148)
constant-expression(149)
boolean-expression(150)
statement(151)
labeled-statement(152)
declaration-statement(153)
embedded-statement(154)
empty-statement(155)
expression-statement(156)
selection-statement(157)
iteration-statement(158)
jump-statement(159)
try-statement(160)
checked-statement(161)
unchecked-statement(162)
lock-statement(163)
using-statement(164)
OPEN_BRACE(165)
CLOSE_BRACE(166)
statement-list(167)
SEMICOLON(168)
local-variable-declaration(169)
local-constant-declaration(170)
local-variable-declarators(171)
local-variable-declarator(172)
local-variable(173)
local-variable-initializer(174)
CONST(175)
constant-declarators(176)
constant-declarator(177)
statement-expression(178)
if-statement(179)
switch-statement(180)
IF(181)
ELSE(182)
SWITCH(183)
switch-block(184)
switch-sections(185)
switch-section(186)
switch-labels(187)
switch-label(188)
CASE(189)
DEFAULT(190)
while-statement(191)
do-statement(192)
for-statement(193)
foreach-statement(194)
WHILE(195)
DO(196)
FOR(197)
for-initializer(198)
for-condition(199)
for-iterator(200)
statement-expression-list(201)
FOREACH(202)
IN(203)
break-statement(204)
continue-statement(205)
goto-statement(206)
return-statement(207)
throw-statement(208)
BREAK(209)
CONTINUE(210)
GOTO(211)
RETURN(212)
THROW(213)
TRY(214)
catch-clauses(215)
finally-clause(216)
specific-catch-clauses(217)
general-catch-clause(218)
specific-catch-clause(219)
CATCH(220)
FINALLY(221)
LOCK(222)
USING(223)
resource-acquisition(224)
variable-initializer-list(225)
variable-initializer(226)
global-attributes(227)
global-attribute-sections(228)
global-attribute-section(229)
global-attribute-target-specifier(230)
attribute-list(231)
global-attribute-target(232)
ASSEMBLY(233)
MODULE(234)
attribute-sections(235)
attribute-section(236)
attribute-target-specifier(237)
attribute-target(238)
FIELD(239)
EVENT(240)
METHOD(241)
PARAM(242)
PROPERTY(243)
TYPE(244)
attribute(245)
attribute-name(246)
attribute-arguments(247)
positional-argument-list(248)
named-argument-list(249)
positional-argument(250)
attribute-argument-expression(251)
named-argument(252)
formal-parameter-list(253)
fixed-parameters(254)
parameter-array(255)
fixed-parameter(256)
parameter-modifier(257)
parameter-modifieropt(258)
params(259)
return-type(260)
DELEGATE(261)
delegate-modifiers(262)
delegate-modifier(263)
PUBLIC(264)
PROTECTED(265)
INTERNAL(266)
PRIVATE(267)

Item sets
------

item set 0 
$accept -> .compilationUnit $end #lookaheads= $end
compilationUnit -> .es EOF
es -> .es e
es -> .e
e -> .attributes
e -> .delegate-declaration
e -> .block
e -> .
attributes -> .attribute-sections
delegate-declaration -> .DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> .attributes DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> .delegate-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> .DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
delegate-declaration -> .delegate-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
delegate-declaration -> .attributes DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
delegate-declaration -> .attributes delegate-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> .attributes delegate-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
delegate-modifiers -> .delegate-modifier
delegate-modifiers -> .delegate-modifiers delegate-modifier
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
delegate-modifier -> .NEW
delegate-modifier -> .PUBLIC
delegate-modifier -> .PROTECTED
delegate-modifier -> .INTERNAL
delegate-modifier -> .PRIVATE 
transitions ->  {"compilationUnit":1,"es":2,"e":3,"attributes":4,"delegate-declaration":5,"block":6,"attribute-sections":7,"DELEGATE":8,"delegate-modifiers":9,"OPEN_BRACE":10,"attribute-section":11,"delegate-modifier":12,"OPEN_BRACKET":13,"NEW":14,"PUBLIC":15,"PROTECTED":16,"INTERNAL":17,"PRIVATE":18}

item set 1 
$accept -> compilationUnit .$end #lookaheads= $end 
transitions ->  {}

item set 2 
compilationUnit -> es .EOF
es -> es .e
e -> .attributes
e -> .delegate-declaration
e -> .block
e -> .
attributes -> .attribute-sections
delegate-declaration -> .DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> .attributes DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> .delegate-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> .DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
delegate-declaration -> .delegate-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
delegate-declaration -> .attributes DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
delegate-declaration -> .attributes delegate-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> .attributes delegate-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
delegate-modifiers -> .delegate-modifier
delegate-modifiers -> .delegate-modifiers delegate-modifier
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
delegate-modifier -> .NEW
delegate-modifier -> .PUBLIC
delegate-modifier -> .PROTECTED
delegate-modifier -> .INTERNAL
delegate-modifier -> .PRIVATE 
transitions ->  {"EOF":19,"e":20,"attributes":4,"delegate-declaration":5,"block":6,"attribute-sections":7,"DELEGATE":8,"delegate-modifiers":9,"OPEN_BRACE":10,"attribute-section":11,"delegate-modifier":12,"OPEN_BRACKET":13,"NEW":14,"PUBLIC":15,"PROTECTED":16,"INTERNAL":17,"PRIVATE":18}

item set 3 
es -> e . 
transitions ->  {}

item set 4 
e -> attributes .
delegate-declaration -> attributes .DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes .DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes .delegate-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes .delegate-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
delegate-modifiers -> .delegate-modifier
delegate-modifiers -> .delegate-modifiers delegate-modifier
delegate-modifier -> .NEW
delegate-modifier -> .PUBLIC
delegate-modifier -> .PROTECTED
delegate-modifier -> .INTERNAL
delegate-modifier -> .PRIVATE 
transitions ->  {"DELEGATE":21,"delegate-modifiers":22,"delegate-modifier":12,"NEW":14,"PUBLIC":15,"PROTECTED":16,"INTERNAL":17,"PRIVATE":18}

item set 5 
e -> delegate-declaration . 
transitions ->  {}

item set 6 
e -> block . 
transitions ->  {}

item set 7 
attributes -> attribute-sections .
attribute-sections -> attribute-sections .attribute-section
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET 
transitions ->  {"attribute-section":23,"OPEN_BRACKET":13}

item set 8 
delegate-declaration -> DELEGATE .return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> DELEGATE .return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
return-type -> .VOID
return-type -> .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"return-type":24,"VOID":25,"type":26,"value-type":27,"reference-type":28,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"array-type":33,"delegate-type":34,"type-name":35,"simple-type":36,"OBJECT":37,"STRING":38,"non-array-type":39,"namespace-or-type-name":40,"numeric-type":41,"BOOL":42,"IDENTIFIER":43,"integral-type":44,"floating-point-type":45,"DECIMAL":46,"SBYTE":47,"BYTE":48,"SHORT":49,"USHORT":50,"INT":51,"UINT":52,"LONG":53,"ULONG":54,"CHAR":55,"FLOAT":56,"DOUBLE":57}

item set 9 
delegate-declaration -> delegate-modifiers .DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> delegate-modifiers .DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
delegate-modifiers -> delegate-modifiers .delegate-modifier
delegate-modifier -> .NEW
delegate-modifier -> .PUBLIC
delegate-modifier -> .PROTECTED
delegate-modifier -> .INTERNAL
delegate-modifier -> .PRIVATE 
transitions ->  {"DELEGATE":58,"delegate-modifier":59,"NEW":14,"PUBLIC":15,"PROTECTED":16,"INTERNAL":17,"PRIVATE":18}

item set 10 
block -> OPEN_BRACE .CLOSE_BRACE
block -> OPEN_BRACE .statement-list CLOSE_BRACE
statement-list -> .statement
statement-list -> .statement-list statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_BRACE":60,"statement-list":61,"statement":62,"labeled-statement":63,"declaration-statement":64,"embedded-statement":65,"IDENTIFIER":66,"local-variable-declaration":67,"local-constant-declaration":68,"block":69,"empty-statement":70,"expression-statement":71,"selection-statement":72,"iteration-statement":73,"jump-statement":74,"try-statement":75,"checked-statement":76,"unchecked-statement":77,"lock-statement":78,"using-statement":79,"type":80,"CONST":81,"OPEN_BRACE":10,"SEMICOLON":82,"statement-expression":83,"if-statement":84,"switch-statement":85,"while-statement":86,"do-statement":87,"for-statement":88,"foreach-statement":89,"break-statement":90,"continue-statement":91,"goto-statement":92,"return-statement":93,"throw-statement":94,"TRY":95,"CHECKED":96,"UNCHECKED":97,"LOCK":98,"USING":99,"value-type":27,"reference-type":28,"invocation-expression":100,"object-creation-expression":101,"assignment":102,"post-increment-expression":103,"post-decrement-expression":104,"pre-increment-expression":105,"pre-decrement-expression":106,"IF":107,"SWITCH":108,"WHILE":109,"DO":110,"FOR":111,"FOREACH":112,"BREAK":113,"CONTINUE":114,"GOTO":115,"RETURN":116,"THROW":117,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"array-type":33,"delegate-type":34,"primary-expression":118,"NEW":119,"unary-expression":120,"OP_INC":121,"OP_DEC":122,"type-name":35,"simple-type":36,"OBJECT":123,"STRING":124,"non-array-type":39,"primary-no-array-creation-expression":125,"array-creation-expression":126,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"cast-expression":132,"namespace-or-type-name":40,"numeric-type":41,"BOOL":133,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"element-access":138,"this-access":139,"base-access":140,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"OPEN_PARENS":146,"integral-type":44,"floating-point-type":45,"DECIMAL":147,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"SBYTE":158,"BYTE":159,"SHORT":160,"USHORT":161,"INT":162,"UINT":163,"LONG":164,"ULONG":165,"CHAR":166,"FLOAT":167,"DOUBLE":168,"TRUE":169,"FALSE":170}

item set 11 
attribute-sections -> attribute-section . 
transitions ->  {}

item set 12 
delegate-modifiers -> delegate-modifier . 
transitions ->  {}

item set 13 
attribute-section -> OPEN_BRACKET .attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-list COMMA CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET .attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
attribute-list -> .attribute
attribute-list -> .attribute-list COMMA attribute
attribute-target-specifier -> .attribute-target COLON
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-target -> .FIELD
attribute-target -> .EVENT
attribute-target -> .METHOD
attribute-target -> .PARAM
attribute-target -> .PROPERTY
attribute-target -> .RETURN
attribute-target -> .TYPE
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER 
transitions ->  {"attribute-list":171,"attribute-target-specifier":172,"attribute":173,"attribute-target":174,"attribute-name":175,"FIELD":176,"EVENT":177,"METHOD":178,"PARAM":179,"PROPERTY":180,"RETURN":181,"TYPE":182,"type-name":183,"namespace-or-type-name":40,"IDENTIFIER":43}

item set 14 
delegate-modifier -> NEW . 
transitions ->  {}

item set 15 
delegate-modifier -> PUBLIC . 
transitions ->  {}

item set 16 
delegate-modifier -> PROTECTED . 
transitions ->  {}

item set 17 
delegate-modifier -> INTERNAL . 
transitions ->  {}

item set 18 
delegate-modifier -> PRIVATE . 
transitions ->  {}

item set 19 
compilationUnit -> es EOF . 
transitions ->  {}

item set 20 
es -> es e . 
transitions ->  {}

item set 21 
delegate-declaration -> attributes DELEGATE .return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes DELEGATE .return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
return-type -> .VOID
return-type -> .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"return-type":184,"VOID":25,"type":26,"value-type":27,"reference-type":28,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"array-type":33,"delegate-type":34,"type-name":35,"simple-type":36,"OBJECT":37,"STRING":38,"non-array-type":39,"namespace-or-type-name":40,"numeric-type":41,"BOOL":42,"IDENTIFIER":43,"integral-type":44,"floating-point-type":45,"DECIMAL":46,"SBYTE":47,"BYTE":48,"SHORT":49,"USHORT":50,"INT":51,"UINT":52,"LONG":53,"ULONG":54,"CHAR":55,"FLOAT":56,"DOUBLE":57}

item set 22 
delegate-declaration -> attributes delegate-modifiers .DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes delegate-modifiers .DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
delegate-modifiers -> delegate-modifiers .delegate-modifier
delegate-modifier -> .NEW
delegate-modifier -> .PUBLIC
delegate-modifier -> .PROTECTED
delegate-modifier -> .INTERNAL
delegate-modifier -> .PRIVATE 
transitions ->  {"DELEGATE":185,"delegate-modifier":59,"NEW":14,"PUBLIC":15,"PROTECTED":16,"INTERNAL":17,"PRIVATE":18}

item set 23 
attribute-sections -> attribute-sections attribute-section . 
transitions ->  {}

item set 24 
delegate-declaration -> DELEGATE return-type .IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> DELEGATE return-type .IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"IDENTIFIER":186}

item set 25 
return-type -> VOID . 
transitions ->  {}

item set 26 
return-type -> type .
non-array-type -> type . 
transitions ->  {}

item set 27 
type -> value-type . 
transitions ->  {}

item set 28 
type -> reference-type . 
transitions ->  {}

item set 29 
value-type -> struct-type . 
transitions ->  {}

item set 30 
value-type -> enum-type . 
transitions ->  {}

item set 31 
reference-type -> class-type . 
transitions ->  {}

item set 32 
reference-type -> interface-type . 
transitions ->  {}

item set 33 
reference-type -> array-type . 
transitions ->  {}

item set 34 
reference-type -> delegate-type . 
transitions ->  {}

item set 35 
struct-type -> type-name .
enum-type -> type-name .
class-type -> type-name .
interface-type -> type-name .
delegate-type -> type-name . 
transitions ->  {}

item set 36 
struct-type -> simple-type . 
transitions ->  {}

item set 37 
class-type -> OBJECT . 
transitions ->  {}

item set 38 
class-type -> STRING . 
transitions ->  {}

item set 39 
array-type -> non-array-type .rank-specifiers
rank-specifiers -> .rank-specifier
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET 
transitions ->  {"rank-specifiers":187,"rank-specifier":188,"OPEN_BRACKET":189}

item set 40 
type-name -> namespace-or-type-name .
namespace-or-type-name -> namespace-or-type-name .DOT IDENTIFIER 
transitions ->  {"DOT":190}

item set 41 
simple-type -> numeric-type . 
transitions ->  {}

item set 42 
simple-type -> BOOL . 
transitions ->  {}

item set 43 
namespace-or-type-name -> IDENTIFIER . 
transitions ->  {}

item set 44 
numeric-type -> integral-type . 
transitions ->  {}

item set 45 
numeric-type -> floating-point-type . 
transitions ->  {}

item set 46 
numeric-type -> DECIMAL . 
transitions ->  {}

item set 47 
integral-type -> SBYTE . 
transitions ->  {}

item set 48 
integral-type -> BYTE . 
transitions ->  {}

item set 49 
integral-type -> SHORT . 
transitions ->  {}

item set 50 
integral-type -> USHORT . 
transitions ->  {}

item set 51 
integral-type -> INT . 
transitions ->  {}

item set 52 
integral-type -> UINT . 
transitions ->  {}

item set 53 
integral-type -> LONG . 
transitions ->  {}

item set 54 
integral-type -> ULONG . 
transitions ->  {}

item set 55 
integral-type -> CHAR . 
transitions ->  {}

item set 56 
floating-point-type -> FLOAT . 
transitions ->  {}

item set 57 
floating-point-type -> DOUBLE . 
transitions ->  {}

item set 58 
delegate-declaration -> delegate-modifiers DELEGATE .return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> delegate-modifiers DELEGATE .return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
return-type -> .VOID
return-type -> .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"return-type":191,"VOID":25,"type":26,"value-type":27,"reference-type":28,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"array-type":33,"delegate-type":34,"type-name":35,"simple-type":36,"OBJECT":37,"STRING":38,"non-array-type":39,"namespace-or-type-name":40,"numeric-type":41,"BOOL":42,"IDENTIFIER":43,"integral-type":44,"floating-point-type":45,"DECIMAL":46,"SBYTE":47,"BYTE":48,"SHORT":49,"USHORT":50,"INT":51,"UINT":52,"LONG":53,"ULONG":54,"CHAR":55,"FLOAT":56,"DOUBLE":57}

item set 59 
delegate-modifiers -> delegate-modifiers delegate-modifier . 
transitions ->  {}

item set 60 
block -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 61 
block -> OPEN_BRACE statement-list .CLOSE_BRACE
statement-list -> statement-list .statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_BRACE":192,"statement":193,"labeled-statement":63,"declaration-statement":64,"embedded-statement":65,"IDENTIFIER":66,"local-variable-declaration":67,"local-constant-declaration":68,"block":69,"empty-statement":70,"expression-statement":71,"selection-statement":72,"iteration-statement":73,"jump-statement":74,"try-statement":75,"checked-statement":76,"unchecked-statement":77,"lock-statement":78,"using-statement":79,"type":80,"CONST":81,"OPEN_BRACE":10,"SEMICOLON":82,"statement-expression":83,"if-statement":84,"switch-statement":85,"while-statement":86,"do-statement":87,"for-statement":88,"foreach-statement":89,"break-statement":90,"continue-statement":91,"goto-statement":92,"return-statement":93,"throw-statement":94,"TRY":95,"CHECKED":96,"UNCHECKED":97,"LOCK":98,"USING":99,"value-type":27,"reference-type":28,"invocation-expression":100,"object-creation-expression":101,"assignment":102,"post-increment-expression":103,"post-decrement-expression":104,"pre-increment-expression":105,"pre-decrement-expression":106,"IF":107,"SWITCH":108,"WHILE":109,"DO":110,"FOR":111,"FOREACH":112,"BREAK":113,"CONTINUE":114,"GOTO":115,"RETURN":116,"THROW":117,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"array-type":33,"delegate-type":34,"primary-expression":118,"NEW":119,"unary-expression":120,"OP_INC":121,"OP_DEC":122,"type-name":35,"simple-type":36,"OBJECT":123,"STRING":124,"non-array-type":39,"primary-no-array-creation-expression":125,"array-creation-expression":126,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"cast-expression":132,"namespace-or-type-name":40,"numeric-type":41,"BOOL":133,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"element-access":138,"this-access":139,"base-access":140,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"OPEN_PARENS":146,"integral-type":44,"floating-point-type":45,"DECIMAL":147,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"SBYTE":158,"BYTE":159,"SHORT":160,"USHORT":161,"INT":162,"UINT":163,"LONG":164,"ULONG":165,"CHAR":166,"FLOAT":167,"DOUBLE":168,"TRUE":169,"FALSE":170}

item set 62 
statement-list -> statement . 
transitions ->  {}

item set 63 
statement -> labeled-statement . 
transitions ->  {}

item set 64 
statement -> declaration-statement . 
transitions ->  {}

item set 65 
statement -> embedded-statement . 
transitions ->  {}

item set 66 
labeled-statement -> IDENTIFIER .COLON statement
namespace-or-type-name -> IDENTIFIER .
simple-name -> IDENTIFIER . 
transitions ->  {"COLON":194}

item set 67 
declaration-statement -> local-variable-declaration .SEMICOLON 
transitions ->  {"SEMICOLON":195}

item set 68 
declaration-statement -> local-constant-declaration .SEMICOLON 
transitions ->  {"SEMICOLON":196}

item set 69 
embedded-statement -> block . 
transitions ->  {}

item set 70 
embedded-statement -> empty-statement . 
transitions ->  {}

item set 71 
embedded-statement -> expression-statement . 
transitions ->  {}

item set 72 
embedded-statement -> selection-statement . 
transitions ->  {}

item set 73 
embedded-statement -> iteration-statement . 
transitions ->  {}

item set 74 
embedded-statement -> jump-statement . 
transitions ->  {}

item set 75 
embedded-statement -> try-statement . 
transitions ->  {}

item set 76 
embedded-statement -> checked-statement . 
transitions ->  {}

item set 77 
embedded-statement -> unchecked-statement . 
transitions ->  {}

item set 78 
embedded-statement -> lock-statement . 
transitions ->  {}

item set 79 
embedded-statement -> using-statement . 
transitions ->  {}

item set 80 
local-variable-declaration -> type .local-variable-declarators
non-array-type -> type .
local-variable-declarators -> .local-variable-declarator
local-variable-declarators -> .local-variable-declarators COMMA local-variable-declarator
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
local-variable -> .
local-variable -> .IDENTIFIER 
transitions ->  {"local-variable-declarators":197,"local-variable-declarator":198,"local-variable":199,"IDENTIFIER":200}

item set 81 
local-constant-declaration -> CONST .type constant-declarators
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":201,"value-type":27,"reference-type":28,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"array-type":33,"delegate-type":34,"type-name":35,"simple-type":36,"OBJECT":37,"STRING":38,"non-array-type":39,"namespace-or-type-name":40,"numeric-type":41,"BOOL":42,"IDENTIFIER":43,"integral-type":44,"floating-point-type":45,"DECIMAL":46,"SBYTE":47,"BYTE":48,"SHORT":49,"USHORT":50,"INT":51,"UINT":52,"LONG":53,"ULONG":54,"CHAR":55,"FLOAT":56,"DOUBLE":57}

item set 82 
empty-statement -> SEMICOLON . 
transitions ->  {}

item set 83 
expression-statement -> statement-expression .SEMICOLON 
transitions ->  {"SEMICOLON":202}

item set 84 
selection-statement -> if-statement . 
transitions ->  {}

item set 85 
selection-statement -> switch-statement . 
transitions ->  {}

item set 86 
iteration-statement -> while-statement . 
transitions ->  {}

item set 87 
iteration-statement -> do-statement . 
transitions ->  {}

item set 88 
iteration-statement -> for-statement . 
transitions ->  {}

item set 89 
iteration-statement -> foreach-statement . 
transitions ->  {}

item set 90 
jump-statement -> break-statement . 
transitions ->  {}

item set 91 
jump-statement -> continue-statement . 
transitions ->  {}

item set 92 
jump-statement -> goto-statement . 
transitions ->  {}

item set 93 
jump-statement -> return-statement . 
transitions ->  {}

item set 94 
jump-statement -> throw-statement . 
transitions ->  {}

item set 95 
try-statement -> TRY .block catch-clauses
try-statement -> TRY .block finally-clause
try-statement -> TRY .block catch-clauses finally-clause
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":203,"OPEN_BRACE":10}

item set 96 
checked-statement -> CHECKED .block
checked-expression -> CHECKED .OPEN_PARENS expression CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":204,"OPEN_PARENS":205,"OPEN_BRACE":10}

item set 97 
unchecked-statement -> UNCHECKED .block
unchecked-expression -> UNCHECKED .OPEN_PARENS expression CLOSE_PARENS
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":206,"OPEN_PARENS":207,"OPEN_BRACE":10}

item set 98 
lock-statement -> LOCK .OPEN_PARENS expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":208}

item set 99 
using-statement -> USING .OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":209}

item set 100 
statement-expression -> invocation-expression .
primary-no-array-creation-expression -> invocation-expression . 
transitions ->  {}

item set 101 
statement-expression -> object-creation-expression .
primary-no-array-creation-expression -> object-creation-expression . 
transitions ->  {}

item set 102 
statement-expression -> assignment . 
transitions ->  {}

item set 103 
statement-expression -> post-increment-expression .
primary-no-array-creation-expression -> post-increment-expression . 
transitions ->  {}

item set 104 
statement-expression -> post-decrement-expression .
primary-no-array-creation-expression -> post-decrement-expression . 
transitions ->  {}

item set 105 
statement-expression -> pre-increment-expression .
unary-expression -> pre-increment-expression . 
transitions ->  {}

item set 106 
statement-expression -> pre-decrement-expression .
unary-expression -> pre-decrement-expression . 
transitions ->  {}

item set 107 
if-statement -> IF .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> IF .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement 
transitions ->  {"OPEN_PARENS":210}

item set 108 
switch-statement -> SWITCH .OPEN_PARENS expression CLOSE_PARENS switch-block 
transitions ->  {"OPEN_PARENS":211}

item set 109 
while-statement -> WHILE .OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":212}

item set 110 
do-statement -> DO .embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":213,"block":69,"empty-statement":70,"expression-statement":71,"selection-statement":72,"iteration-statement":73,"jump-statement":74,"try-statement":75,"checked-statement":76,"unchecked-statement":77,"lock-statement":78,"using-statement":79,"OPEN_BRACE":10,"SEMICOLON":82,"statement-expression":83,"if-statement":84,"switch-statement":85,"while-statement":86,"do-statement":87,"for-statement":88,"foreach-statement":89,"break-statement":90,"continue-statement":91,"goto-statement":92,"return-statement":93,"throw-statement":94,"TRY":95,"CHECKED":96,"UNCHECKED":97,"LOCK":98,"USING":99,"invocation-expression":100,"object-creation-expression":101,"assignment":102,"post-increment-expression":103,"post-decrement-expression":104,"pre-increment-expression":105,"pre-decrement-expression":106,"IF":107,"SWITCH":108,"WHILE":109,"DO":110,"FOR":111,"FOREACH":112,"BREAK":113,"CONTINUE":114,"GOTO":115,"RETURN":116,"THROW":117,"primary-expression":118,"NEW":119,"unary-expression":120,"OP_INC":121,"OP_DEC":122,"primary-no-array-creation-expression":125,"array-creation-expression":126,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"cast-expression":132,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"element-access":138,"this-access":139,"base-access":140,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"OPEN_PARENS":146,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 111 
for-statement -> FOR .OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR .OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":230}

item set 112 
foreach-statement -> FOREACH .OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement 
transitions ->  {"OPEN_PARENS":231}

item set 113 
break-statement -> BREAK .SEMICOLON 
transitions ->  {"SEMICOLON":232}

item set 114 
continue-statement -> CONTINUE .SEMICOLON 
transitions ->  {"SEMICOLON":233}

item set 115 
goto-statement -> GOTO .IDENTIFIER SEMICOLON
goto-statement -> GOTO .CASE constant-expression SEMICOLON
goto-statement -> GOTO .DEFAULT SEMICOLON 
transitions ->  {"IDENTIFIER":234,"CASE":235,"DEFAULT":236}

item set 116 
return-statement -> RETURN .SEMICOLON
return-statement -> RETURN .expression SEMICOLON
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":237,"expression":238,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 117 
throw-statement -> THROW .SEMICOLON
throw-statement -> THROW .expression SEMICOLON
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":260,"expression":261,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 118 
invocation-expression -> primary-expression .OPEN_PARENS CLOSE_PARENS
invocation-expression -> primary-expression .OPEN_PARENS argument-list CLOSE_PARENS
post-increment-expression -> primary-expression .OP_INC
post-decrement-expression -> primary-expression .OP_DEC
unary-expression -> primary-expression .
member-access -> primary-expression .DOT IDENTIFIER 
transitions ->  {"OPEN_PARENS":262,"OP_INC":263,"OP_DEC":264,"DOT":265}

item set 119 
object-creation-expression -> NEW .type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> NEW .type OPEN_PARENS argument-list CLOSE_PARENS
array-creation-expression -> NEW .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> NEW .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> NEW .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> NEW .non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> NEW .array-type array-initializer
delegate-creation-expression -> NEW .delegate-type OPEN_PARENS expression CLOSE_PARENS
type -> .value-type
type -> .reference-type
non-array-type -> .type
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
type-name -> .namespace-or-type-name
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
simple-type -> .numeric-type
simple-type -> .BOOL
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":266,"non-array-type":267,"array-type":268,"delegate-type":269,"value-type":27,"reference-type":28,"type-name":35,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"namespace-or-type-name":40,"simple-type":36,"OBJECT":37,"STRING":38,"IDENTIFIER":43,"numeric-type":41,"BOOL":42,"integral-type":44,"floating-point-type":45,"DECIMAL":46,"SBYTE":47,"BYTE":48,"SHORT":49,"USHORT":50,"INT":51,"UINT":52,"LONG":53,"ULONG":54,"CHAR":55,"FLOAT":56,"DOUBLE":57}

item set 120 
assignment -> unary-expression .assignment-operator expression
assignment-operator -> .ASSIGN
assignment-operator -> .OP_ADD_ASSIGNMENT
assignment-operator -> .OP_SUB_ASSIGNMENT
assignment-operator -> .OP_MULT_ASSIGNMENT
assignment-operator -> .OP_DIV_ASSIGNMENT
assignment-operator -> .OP_MOD_ASSIGNMENT
assignment-operator -> .OP_AND_ASSIGNMENT
assignment-operator -> .OP_OR_ASSIGNMENT
assignment-operator -> .OP_XOR_ASSIGNMENT
assignment-operator -> .OP_LEFT_SHIFT_ASSIGNMENT
assignment-operator -> .RIGHT_SHIFT_ASSIGNMENT 
transitions ->  {"assignment-operator":270,"ASSIGN":271,"OP_ADD_ASSIGNMENT":272,"OP_SUB_ASSIGNMENT":273,"OP_MULT_ASSIGNMENT":274,"OP_DIV_ASSIGNMENT":275,"OP_MOD_ASSIGNMENT":276,"OP_AND_ASSIGNMENT":277,"OP_OR_ASSIGNMENT":278,"OP_XOR_ASSIGNMENT":279,"OP_LEFT_SHIFT_ASSIGNMENT":280,"RIGHT_SHIFT_ASSIGNMENT":281}

item set 121 
pre-increment-expression -> OP_INC .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":282,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 122 
pre-decrement-expression -> OP_DEC .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":283,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 123 
class-type -> OBJECT .
predefined-type -> OBJECT . 
transitions ->  {}

item set 124 
class-type -> STRING .
predefined-type -> STRING . 
transitions ->  {}

item set 125 
primary-expression -> primary-no-array-creation-expression .
element-access -> primary-no-array-creation-expression .OPEN_BRACKET expression-list CLOSE_BRACKET 
transitions ->  {"OPEN_BRACKET":284}

item set 126 
primary-expression -> array-creation-expression . 
transitions ->  {}

item set 127 
unary-expression -> PLUS .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":285,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 128 
unary-expression -> MINUS .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":286,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 129 
unary-expression -> BANG .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":287,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 130 
unary-expression -> TILDE .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":288,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 131 
unary-expression -> STAR .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":289,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 132 
unary-expression -> cast-expression . 
transitions ->  {}

item set 133 
simple-type -> BOOL .
predefined-type -> BOOL . 
transitions ->  {}

item set 134 
primary-no-array-creation-expression -> literal . 
transitions ->  {}

item set 135 
primary-no-array-creation-expression -> simple-name . 
transitions ->  {}

item set 136 
primary-no-array-creation-expression -> parenthesized-expression . 
transitions ->  {}

item set 137 
primary-no-array-creation-expression -> member-access . 
transitions ->  {}

item set 138 
primary-no-array-creation-expression -> element-access . 
transitions ->  {}

item set 139 
primary-no-array-creation-expression -> this-access . 
transitions ->  {}

item set 140 
primary-no-array-creation-expression -> base-access . 
transitions ->  {}

item set 141 
primary-no-array-creation-expression -> delegate-creation-expression . 
transitions ->  {}

item set 142 
primary-no-array-creation-expression -> typeof-expression . 
transitions ->  {}

item set 143 
primary-no-array-creation-expression -> sizeof-expression . 
transitions ->  {}

item set 144 
primary-no-array-creation-expression -> checked-expression . 
transitions ->  {}

item set 145 
primary-no-array-creation-expression -> unchecked-expression . 
transitions ->  {}

item set 146 
cast-expression -> OPEN_PARENS .type CLOSE_PARENS unary-expression
parenthesized-expression -> OPEN_PARENS .expression CLOSE_PARENS
type -> .value-type
type -> .reference-type
expression -> .conditional-expression
expression -> .assignment
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"type":290,"expression":291,"value-type":27,"reference-type":28,"conditional-expression":239,"assignment":240,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"array-type":33,"delegate-type":34,"conditional-or-expression":241,"unary-expression":242,"type-name":35,"simple-type":36,"OBJECT":123,"STRING":124,"non-array-type":39,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"namespace-or-type-name":40,"numeric-type":41,"BOOL":133,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"IDENTIFIER":292,"integral-type":44,"floating-point-type":45,"DECIMAL":147,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"SBYTE":158,"BYTE":159,"SHORT":160,"USHORT":161,"INT":162,"UINT":163,"LONG":164,"ULONG":165,"CHAR":166,"FLOAT":167,"DOUBLE":168,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 147 
numeric-type -> DECIMAL .
predefined-type -> DECIMAL . 
transitions ->  {}

item set 148 
literal -> BOOLEAN_LITERAL . 
transitions ->  {}

item set 149 
literal -> REAL_LITERAL . 
transitions ->  {}

item set 150 
literal -> INTEGER_LITERAL . 
transitions ->  {}

item set 151 
literal -> STRING_LITERAL . 
transitions ->  {}

item set 152 
literal -> CHARACTER_LITERAL . 
transitions ->  {}

item set 153 
literal -> NULL . 
transitions ->  {}

item set 154 
member-access -> predefined-type .DOT IDENTIFIER 
transitions ->  {"DOT":293}

item set 155 
this-access -> THIS . 
transitions ->  {}

item set 156 
base-access -> base .DOT IDENTIFIER
base-access -> base .OPEN_BRACKET expression-list CLOSE_BRACKET 
transitions ->  {"DOT":294,"OPEN_BRACKET":295}

item set 157 
typeof-expression -> TYPEOF .OPEN_PARENS type CLOSE_PARENS
typeof-expression -> TYPEOF .OPEN_PARENS VOID CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":296}

item set 158 
integral-type -> SBYTE .
predefined-type -> SBYTE . 
transitions ->  {}

item set 159 
integral-type -> BYTE .
predefined-type -> BYTE . 
transitions ->  {}

item set 160 
integral-type -> SHORT .
predefined-type -> SHORT . 
transitions ->  {}

item set 161 
integral-type -> USHORT .
predefined-type -> USHORT . 
transitions ->  {}

item set 162 
integral-type -> INT .
predefined-type -> INT . 
transitions ->  {}

item set 163 
integral-type -> UINT .
predefined-type -> UINT . 
transitions ->  {}

item set 164 
integral-type -> LONG .
predefined-type -> LONG . 
transitions ->  {}

item set 165 
integral-type -> ULONG .
predefined-type -> ULONG . 
transitions ->  {}

item set 166 
integral-type -> CHAR .
predefined-type -> CHAR . 
transitions ->  {}

item set 167 
floating-point-type -> FLOAT .
predefined-type -> FLOAT . 
transitions ->  {}

item set 168 
floating-point-type -> DOUBLE .
predefined-type -> DOUBLE . 
transitions ->  {}

item set 169 
BOOLEAN_LITERAL -> TRUE . 
transitions ->  {}

item set 170 
BOOLEAN_LITERAL -> FALSE . 
transitions ->  {}

item set 171 
attribute-section -> OPEN_BRACKET attribute-list .CLOSE_BRACKET
attribute-section -> OPEN_BRACKET attribute-list .COMMA CLOSE_BRACKET
attribute-list -> attribute-list .COMMA attribute 
transitions ->  {"CLOSE_BRACKET":297,"COMMA":298}

item set 172 
attribute-section -> OPEN_BRACKET attribute-target-specifier .attribute-list CLOSE_BRACKET
attribute-section -> OPEN_BRACKET attribute-target-specifier .attribute-list COMMA CLOSE_BRACKET
attribute-list -> .attribute
attribute-list -> .attribute-list COMMA attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER 
transitions ->  {"attribute-list":299,"attribute":173,"attribute-name":175,"type-name":183,"namespace-or-type-name":40,"IDENTIFIER":43}

item set 173 
attribute-list -> attribute . 
transitions ->  {}

item set 174 
attribute-target-specifier -> attribute-target .COLON 
transitions ->  {"COLON":300}

item set 175 
attribute -> attribute-name .
attribute -> attribute-name .attribute-arguments
attribute-arguments -> .OPEN_PARENS CLOSE_PARENS
attribute-arguments -> .OPEN_PARENS positional-argument-list CLOSE_PARENS
attribute-arguments -> .OPEN_PARENS positional-argument-list COMMA named-argument-list CLOSE_PARENS
attribute-arguments -> .OPEN_PARENS named-argument-list CLOSE_PARENS 
transitions ->  {"attribute-arguments":301,"OPEN_PARENS":302}

item set 176 
attribute-target -> FIELD . 
transitions ->  {}

item set 177 
attribute-target -> EVENT . 
transitions ->  {}

item set 178 
attribute-target -> METHOD . 
transitions ->  {}

item set 179 
attribute-target -> PARAM . 
transitions ->  {}

item set 180 
attribute-target -> PROPERTY . 
transitions ->  {}

item set 181 
attribute-target -> RETURN . 
transitions ->  {}

item set 182 
attribute-target -> TYPE . 
transitions ->  {}

item set 183 
attribute-name -> type-name . 
transitions ->  {}

item set 184 
delegate-declaration -> attributes DELEGATE return-type .IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes DELEGATE return-type .IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"IDENTIFIER":303}

item set 185 
delegate-declaration -> attributes delegate-modifiers DELEGATE .return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes delegate-modifiers DELEGATE .return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON
return-type -> .VOID
return-type -> .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"return-type":304,"VOID":25,"type":26,"value-type":27,"reference-type":28,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"array-type":33,"delegate-type":34,"type-name":35,"simple-type":36,"OBJECT":37,"STRING":38,"non-array-type":39,"namespace-or-type-name":40,"numeric-type":41,"BOOL":42,"IDENTIFIER":43,"integral-type":44,"floating-point-type":45,"DECIMAL":46,"SBYTE":47,"BYTE":48,"SHORT":49,"USHORT":50,"INT":51,"UINT":52,"LONG":53,"ULONG":54,"CHAR":55,"FLOAT":56,"DOUBLE":57}

item set 186 
delegate-declaration -> DELEGATE return-type IDENTIFIER .OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> DELEGATE return-type IDENTIFIER .OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"OPEN_PARENS":305}

item set 187 
array-type -> non-array-type rank-specifiers .
rank-specifiers -> rank-specifiers .rank-specifier
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET 
transitions ->  {"rank-specifier":306,"OPEN_BRACKET":189}

item set 188 
rank-specifiers -> rank-specifier . 
transitions ->  {}

item set 189 
rank-specifier -> OPEN_BRACKET .CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .dim-separators CLOSE_BRACKET
dim-separators -> .COMMA
dim-separators -> .dim-separators COMMA 
transitions ->  {"CLOSE_BRACKET":307,"dim-separators":308,"COMMA":309}

item set 190 
namespace-or-type-name -> namespace-or-type-name DOT .IDENTIFIER 
transitions ->  {"IDENTIFIER":310}

item set 191 
delegate-declaration -> delegate-modifiers DELEGATE return-type .IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> delegate-modifiers DELEGATE return-type .IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"IDENTIFIER":311}

item set 192 
block -> OPEN_BRACE statement-list CLOSE_BRACE . 
transitions ->  {}

item set 193 
statement-list -> statement-list statement . 
transitions ->  {}

item set 194 
labeled-statement -> IDENTIFIER COLON .statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"statement":312,"labeled-statement":63,"declaration-statement":64,"embedded-statement":65,"IDENTIFIER":66,"local-variable-declaration":67,"local-constant-declaration":68,"block":69,"empty-statement":70,"expression-statement":71,"selection-statement":72,"iteration-statement":73,"jump-statement":74,"try-statement":75,"checked-statement":76,"unchecked-statement":77,"lock-statement":78,"using-statement":79,"type":80,"CONST":81,"OPEN_BRACE":10,"SEMICOLON":82,"statement-expression":83,"if-statement":84,"switch-statement":85,"while-statement":86,"do-statement":87,"for-statement":88,"foreach-statement":89,"break-statement":90,"continue-statement":91,"goto-statement":92,"return-statement":93,"throw-statement":94,"TRY":95,"CHECKED":96,"UNCHECKED":97,"LOCK":98,"USING":99,"value-type":27,"reference-type":28,"invocation-expression":100,"object-creation-expression":101,"assignment":102,"post-increment-expression":103,"post-decrement-expression":104,"pre-increment-expression":105,"pre-decrement-expression":106,"IF":107,"SWITCH":108,"WHILE":109,"DO":110,"FOR":111,"FOREACH":112,"BREAK":113,"CONTINUE":114,"GOTO":115,"RETURN":116,"THROW":117,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"array-type":33,"delegate-type":34,"primary-expression":118,"NEW":119,"unary-expression":120,"OP_INC":121,"OP_DEC":122,"type-name":35,"simple-type":36,"OBJECT":123,"STRING":124,"non-array-type":39,"primary-no-array-creation-expression":125,"array-creation-expression":126,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"cast-expression":132,"namespace-or-type-name":40,"numeric-type":41,"BOOL":133,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"element-access":138,"this-access":139,"base-access":140,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"OPEN_PARENS":146,"integral-type":44,"floating-point-type":45,"DECIMAL":147,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"SBYTE":158,"BYTE":159,"SHORT":160,"USHORT":161,"INT":162,"UINT":163,"LONG":164,"ULONG":165,"CHAR":166,"FLOAT":167,"DOUBLE":168,"TRUE":169,"FALSE":170}

item set 195 
declaration-statement -> local-variable-declaration SEMICOLON . 
transitions ->  {}

item set 196 
declaration-statement -> local-constant-declaration SEMICOLON . 
transitions ->  {}

item set 197 
local-variable-declaration -> type local-variable-declarators .
local-variable-declarators -> local-variable-declarators .COMMA local-variable-declarator 
transitions ->  {"COMMA":313}

item set 198 
local-variable-declarators -> local-variable-declarator . 
transitions ->  {}

item set 199 
local-variable-declarator -> local-variable .
local-variable-declarator -> local-variable .ASSIGN local-variable-initializer 
transitions ->  {"ASSIGN":314}

item set 200 
local-variable -> IDENTIFIER . 
transitions ->  {}

item set 201 
local-constant-declaration -> CONST type .constant-declarators
non-array-type -> type .
constant-declarators -> .constant-declarator
constant-declarators -> .constant-declarators COMMA constant-declarator
constant-declarator -> .IDENTIFIER ASSIGN constant-expression 
transitions ->  {"constant-declarators":315,"constant-declarator":316,"IDENTIFIER":317}

item set 202 
expression-statement -> statement-expression SEMICOLON . 
transitions ->  {}

item set 203 
try-statement -> TRY block .catch-clauses
try-statement -> TRY block .finally-clause
try-statement -> TRY block .catch-clauses finally-clause
catch-clauses -> .specific-catch-clauses
catch-clauses -> .general-catch-clause
catch-clauses -> .specific-catch-clauses general-catch-clause
finally-clause -> .FINALLY block
specific-catch-clauses -> .specific-catch-clause
specific-catch-clauses -> .specific-catch-clauses specific-catch-clause
general-catch-clause -> .CATCH block
specific-catch-clause -> .CATCH OPEN_PARENS class-type CLOSE_PARENS block
specific-catch-clause -> .CATCH OPEN_PARENS class-type IDENTIFIER CLOSE_PARENS block 
transitions ->  {"catch-clauses":318,"finally-clause":319,"specific-catch-clauses":320,"general-catch-clause":321,"FINALLY":322,"specific-catch-clause":323,"CATCH":324}

item set 204 
checked-statement -> CHECKED block . 
transitions ->  {}

item set 205 
checked-expression -> CHECKED OPEN_PARENS .expression CLOSE_PARENS
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":325,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 206 
unchecked-statement -> UNCHECKED block . 
transitions ->  {}

item set 207 
unchecked-expression -> UNCHECKED OPEN_PARENS .expression CLOSE_PARENS
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":326,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 208 
lock-statement -> LOCK OPEN_PARENS .expression CLOSE_PARENS embedded-statement
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":327,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 209 
using-statement -> USING OPEN_PARENS .resource-acquisition CLOSE_PARENS embedded-statement
resource-acquisition -> .local-variable-declaration
resource-acquisition -> .expression
local-variable-declaration -> .type local-variable-declarators
expression -> .conditional-expression
expression -> .assignment
type -> .value-type
type -> .reference-type
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"resource-acquisition":328,"local-variable-declaration":329,"expression":330,"type":80,"conditional-expression":239,"assignment":240,"value-type":27,"reference-type":28,"conditional-or-expression":241,"unary-expression":242,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"array-type":33,"delegate-type":34,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"type-name":35,"simple-type":36,"OBJECT":123,"STRING":124,"non-array-type":39,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"namespace-or-type-name":40,"numeric-type":41,"BOOL":133,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"IDENTIFIER":292,"integral-type":44,"floating-point-type":45,"DECIMAL":147,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"SBYTE":158,"BYTE":159,"SHORT":160,"USHORT":161,"INT":162,"UINT":163,"LONG":164,"ULONG":165,"CHAR":166,"FLOAT":167,"DOUBLE":168,"equality-expression":255,"TRUE":169,"FALSE":170,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 210 
if-statement -> IF OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement
if-statement -> IF OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":331,"expression":332,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 211 
switch-statement -> SWITCH OPEN_PARENS .expression CLOSE_PARENS switch-block
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":333,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 212 
while-statement -> WHILE OPEN_PARENS .boolean-expression CLOSE_PARENS embedded-statement
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":334,"expression":332,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 213 
do-statement -> DO embedded-statement .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON 
transitions ->  {"WHILE":335}

item set 214 
simple-name -> IDENTIFIER . 
transitions ->  {}

item set 215 
predefined-type -> BOOL . 
transitions ->  {}

item set 216 
predefined-type -> BYTE . 
transitions ->  {}

item set 217 
predefined-type -> CHAR . 
transitions ->  {}

item set 218 
predefined-type -> DECIMAL . 
transitions ->  {}

item set 219 
predefined-type -> DOUBLE . 
transitions ->  {}

item set 220 
predefined-type -> FLOAT . 
transitions ->  {}

item set 221 
predefined-type -> INT . 
transitions ->  {}

item set 222 
predefined-type -> LONG . 
transitions ->  {}

item set 223 
predefined-type -> OBJECT . 
transitions ->  {}

item set 224 
predefined-type -> SBYTE . 
transitions ->  {}

item set 225 
predefined-type -> SHORT . 
transitions ->  {}

item set 226 
predefined-type -> STRING . 
transitions ->  {}

item set 227 
predefined-type -> UINT . 
transitions ->  {}

item set 228 
predefined-type -> ULONG . 
transitions ->  {}

item set 229 
predefined-type -> USHORT . 
transitions ->  {}

item set 230 
for-statement -> FOR OPEN_PARENS .SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS .for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-initializer -> .local-variable-declaration
for-initializer -> .statement-expression-list
local-variable-declaration -> .type local-variable-declarators
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"SEMICOLON":336,"for-initializer":337,"local-variable-declaration":338,"statement-expression-list":339,"type":80,"statement-expression":340,"value-type":27,"reference-type":28,"invocation-expression":100,"object-creation-expression":101,"assignment":102,"post-increment-expression":103,"post-decrement-expression":104,"pre-increment-expression":105,"pre-decrement-expression":106,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"array-type":33,"delegate-type":34,"primary-expression":118,"NEW":119,"unary-expression":120,"OP_INC":121,"OP_DEC":122,"type-name":35,"simple-type":36,"OBJECT":123,"STRING":124,"non-array-type":39,"primary-no-array-creation-expression":125,"array-creation-expression":126,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"cast-expression":132,"namespace-or-type-name":40,"numeric-type":41,"BOOL":133,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"element-access":138,"this-access":139,"base-access":140,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"OPEN_PARENS":146,"IDENTIFIER":292,"integral-type":44,"floating-point-type":45,"DECIMAL":147,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"SBYTE":158,"BYTE":159,"SHORT":160,"USHORT":161,"INT":162,"UINT":163,"LONG":164,"ULONG":165,"CHAR":166,"FLOAT":167,"DOUBLE":168,"TRUE":169,"FALSE":170}

item set 231 
foreach-statement -> FOREACH OPEN_PARENS .type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":341,"value-type":27,"reference-type":28,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"array-type":33,"delegate-type":34,"type-name":35,"simple-type":36,"OBJECT":37,"STRING":38,"non-array-type":39,"namespace-or-type-name":40,"numeric-type":41,"BOOL":42,"IDENTIFIER":43,"integral-type":44,"floating-point-type":45,"DECIMAL":46,"SBYTE":47,"BYTE":48,"SHORT":49,"USHORT":50,"INT":51,"UINT":52,"LONG":53,"ULONG":54,"CHAR":55,"FLOAT":56,"DOUBLE":57}

item set 232 
break-statement -> BREAK SEMICOLON . 
transitions ->  {}

item set 233 
continue-statement -> CONTINUE SEMICOLON . 
transitions ->  {}

item set 234 
goto-statement -> GOTO IDENTIFIER .SEMICOLON 
transitions ->  {"SEMICOLON":342}

item set 235 
goto-statement -> GOTO CASE .constant-expression SEMICOLON
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":343,"expression":344,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 236 
goto-statement -> GOTO DEFAULT .SEMICOLON 
transitions ->  {"SEMICOLON":345}

item set 237 
return-statement -> RETURN SEMICOLON . 
transitions ->  {}

item set 238 
return-statement -> RETURN expression .SEMICOLON 
transitions ->  {"SEMICOLON":346}

item set 239 
expression -> conditional-expression . 
transitions ->  {}

item set 240 
expression -> assignment . 
transitions ->  {}

item set 241 
conditional-expression -> conditional-or-expression .
conditional-expression -> conditional-or-expression .INTERR expression COLON expression
conditional-or-expression -> conditional-or-expression .OP_OR conditional-and-expression 
transitions ->  {"INTERR":347,"OP_OR":348}

item set 242 
assignment -> unary-expression .assignment-operator expression
multiplicative-expression -> unary-expression .
assignment-operator -> .ASSIGN
assignment-operator -> .OP_ADD_ASSIGNMENT
assignment-operator -> .OP_SUB_ASSIGNMENT
assignment-operator -> .OP_MULT_ASSIGNMENT
assignment-operator -> .OP_DIV_ASSIGNMENT
assignment-operator -> .OP_MOD_ASSIGNMENT
assignment-operator -> .OP_AND_ASSIGNMENT
assignment-operator -> .OP_OR_ASSIGNMENT
assignment-operator -> .OP_XOR_ASSIGNMENT
assignment-operator -> .OP_LEFT_SHIFT_ASSIGNMENT
assignment-operator -> .RIGHT_SHIFT_ASSIGNMENT 
transitions ->  {"assignment-operator":270,"ASSIGN":271,"OP_ADD_ASSIGNMENT":272,"OP_SUB_ASSIGNMENT":273,"OP_MULT_ASSIGNMENT":274,"OP_DIV_ASSIGNMENT":275,"OP_MOD_ASSIGNMENT":276,"OP_AND_ASSIGNMENT":277,"OP_OR_ASSIGNMENT":278,"OP_XOR_ASSIGNMENT":279,"OP_LEFT_SHIFT_ASSIGNMENT":280,"RIGHT_SHIFT_ASSIGNMENT":281}

item set 243 
conditional-or-expression -> conditional-and-expression .
conditional-and-expression -> conditional-and-expression .OP_AND inclusive-or-expression 
transitions ->  {"OP_AND":349}

item set 244 
unary-expression -> pre-increment-expression . 
transitions ->  {}

item set 245 
unary-expression -> pre-decrement-expression . 
transitions ->  {}

item set 246 
conditional-and-expression -> inclusive-or-expression .
inclusive-or-expression -> inclusive-or-expression .BITWISE_OR exclusive-or-expression 
transitions ->  {"BITWISE_OR":350}

item set 247 
inclusive-or-expression -> exclusive-or-expression .
exclusive-or-expression -> exclusive-or-expression .CARET and-expression 
transitions ->  {"CARET":351}

item set 248 
primary-no-array-creation-expression -> invocation-expression . 
transitions ->  {}

item set 249 
primary-no-array-creation-expression -> post-increment-expression . 
transitions ->  {}

item set 250 
primary-no-array-creation-expression -> post-decrement-expression . 
transitions ->  {}

item set 251 
primary-no-array-creation-expression -> object-creation-expression . 
transitions ->  {}

item set 252 
exclusive-or-expression -> and-expression .
and-expression -> and-expression .AMP equality-expression 
transitions ->  {"AMP":352}

item set 253 
checked-expression -> CHECKED .OPEN_PARENS expression CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":205}

item set 254 
unchecked-expression -> UNCHECKED .OPEN_PARENS expression CLOSE_PARENS 
transitions ->  {"OPEN_PARENS":207}

item set 255 
and-expression -> equality-expression .
equality-expression -> equality-expression .OP_EQ relational-expression
equality-expression -> equality-expression .OP_NE relational-expression 
transitions ->  {"OP_EQ":353,"OP_NE":354}

item set 256 
equality-expression -> relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":355,"GT":356,"OP_LE":357,"OP_GE":358,"IS":359,"AS":360}

item set 257 
relational-expression -> shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":361,"RIGHT_SHIFT":362}

item set 258 
shift-expression -> additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":363,"MINUS":364}

item set 259 
additive-expression -> multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":365,"DIV":366,"PERCENT":367}

item set 260 
throw-statement -> THROW SEMICOLON . 
transitions ->  {}

item set 261 
throw-statement -> THROW expression .SEMICOLON 
transitions ->  {"SEMICOLON":368}

item set 262 
invocation-expression -> primary-expression OPEN_PARENS .CLOSE_PARENS
invocation-expression -> primary-expression OPEN_PARENS .argument-list CLOSE_PARENS
argument-list -> .argument
argument-list -> .argument-list COMMA argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":369,"argument-list":370,"argument":371,"expression":372,"REF":373,"OUT":374,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 263 
post-increment-expression -> primary-expression OP_INC . 
transitions ->  {}

item set 264 
post-decrement-expression -> primary-expression OP_DEC . 
transitions ->  {}

item set 265 
member-access -> primary-expression DOT .IDENTIFIER 
transitions ->  {"IDENTIFIER":375}

item set 266 
object-creation-expression -> NEW type .OPEN_PARENS CLOSE_PARENS
object-creation-expression -> NEW type .OPEN_PARENS argument-list CLOSE_PARENS
non-array-type -> type . 
transitions ->  {"OPEN_PARENS":376}

item set 267 
array-creation-expression -> NEW non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> NEW non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> NEW non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> NEW non-array-type .OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-type -> non-array-type .rank-specifiers
rank-specifiers -> .rank-specifier
rank-specifiers -> .rank-specifiers rank-specifier
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET 
transitions ->  {"OPEN_BRACKET":377,"rank-specifiers":187,"rank-specifier":188}

item set 268 
array-creation-expression -> NEW array-type .array-initializer
reference-type -> array-type .
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE 
transitions ->  {"array-initializer":378,"OPEN_BRACE":379}

item set 269 
delegate-creation-expression -> NEW delegate-type .OPEN_PARENS expression CLOSE_PARENS
reference-type -> delegate-type . 
transitions ->  {"OPEN_PARENS":380}

item set 270 
assignment -> unary-expression assignment-operator .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":381,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 271 
assignment-operator -> ASSIGN . 
transitions ->  {}

item set 272 
assignment-operator -> OP_ADD_ASSIGNMENT . 
transitions ->  {}

item set 273 
assignment-operator -> OP_SUB_ASSIGNMENT . 
transitions ->  {}

item set 274 
assignment-operator -> OP_MULT_ASSIGNMENT . 
transitions ->  {}

item set 275 
assignment-operator -> OP_DIV_ASSIGNMENT . 
transitions ->  {}

item set 276 
assignment-operator -> OP_MOD_ASSIGNMENT . 
transitions ->  {}

item set 277 
assignment-operator -> OP_AND_ASSIGNMENT . 
transitions ->  {}

item set 278 
assignment-operator -> OP_OR_ASSIGNMENT . 
transitions ->  {}

item set 279 
assignment-operator -> OP_XOR_ASSIGNMENT . 
transitions ->  {}

item set 280 
assignment-operator -> OP_LEFT_SHIFT_ASSIGNMENT . 
transitions ->  {}

item set 281 
assignment-operator -> RIGHT_SHIFT_ASSIGNMENT . 
transitions ->  {}

item set 282 
pre-increment-expression -> OP_INC unary-expression . 
transitions ->  {}

item set 283 
pre-decrement-expression -> OP_DEC unary-expression . 
transitions ->  {}

item set 284 
element-access -> primary-no-array-creation-expression OPEN_BRACKET .expression-list CLOSE_BRACKET
expression-list -> .expression
expression-list -> .expression-list COMMA expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression-list":382,"expression":383,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 285 
unary-expression -> PLUS unary-expression . 
transitions ->  {}

item set 286 
unary-expression -> MINUS unary-expression . 
transitions ->  {}

item set 287 
unary-expression -> BANG unary-expression . 
transitions ->  {}

item set 288 
unary-expression -> TILDE unary-expression . 
transitions ->  {}

item set 289 
unary-expression -> STAR unary-expression . 
transitions ->  {}

item set 290 
cast-expression -> OPEN_PARENS type .CLOSE_PARENS unary-expression
non-array-type -> type . 
transitions ->  {"CLOSE_PARENS":384}

item set 291 
parenthesized-expression -> OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":385}

item set 292 
namespace-or-type-name -> IDENTIFIER .
simple-name -> IDENTIFIER . 
transitions ->  {}

item set 293 
member-access -> predefined-type DOT .IDENTIFIER 
transitions ->  {"IDENTIFIER":386}

item set 294 
base-access -> base DOT .IDENTIFIER 
transitions ->  {"IDENTIFIER":387}

item set 295 
base-access -> base OPEN_BRACKET .expression-list CLOSE_BRACKET
expression-list -> .expression
expression-list -> .expression-list COMMA expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression-list":388,"expression":383,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 296 
typeof-expression -> TYPEOF OPEN_PARENS .type CLOSE_PARENS
typeof-expression -> TYPEOF OPEN_PARENS .VOID CLOSE_PARENS
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":389,"VOID":390,"value-type":27,"reference-type":28,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"array-type":33,"delegate-type":34,"type-name":35,"simple-type":36,"OBJECT":37,"STRING":38,"non-array-type":39,"namespace-or-type-name":40,"numeric-type":41,"BOOL":42,"IDENTIFIER":43,"integral-type":44,"floating-point-type":45,"DECIMAL":46,"SBYTE":47,"BYTE":48,"SHORT":49,"USHORT":50,"INT":51,"UINT":52,"LONG":53,"ULONG":54,"CHAR":55,"FLOAT":56,"DOUBLE":57}

item set 297 
attribute-section -> OPEN_BRACKET attribute-list CLOSE_BRACKET . 
transitions ->  {}

item set 298 
attribute-section -> OPEN_BRACKET attribute-list COMMA .CLOSE_BRACKET
attribute-list -> attribute-list COMMA .attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER 
transitions ->  {"CLOSE_BRACKET":391,"attribute":392,"attribute-name":175,"type-name":183,"namespace-or-type-name":40,"IDENTIFIER":43}

item set 299 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list .CLOSE_BRACKET
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list .COMMA CLOSE_BRACKET
attribute-list -> attribute-list .COMMA attribute 
transitions ->  {"CLOSE_BRACKET":393,"COMMA":394}

item set 300 
attribute-target-specifier -> attribute-target COLON . 
transitions ->  {}

item set 301 
attribute -> attribute-name attribute-arguments . 
transitions ->  {}

item set 302 
attribute-arguments -> OPEN_PARENS .CLOSE_PARENS
attribute-arguments -> OPEN_PARENS .positional-argument-list CLOSE_PARENS
attribute-arguments -> OPEN_PARENS .positional-argument-list COMMA named-argument-list CLOSE_PARENS
attribute-arguments -> OPEN_PARENS .named-argument-list CLOSE_PARENS
positional-argument-list -> .positional-argument
positional-argument-list -> .positional-argument-list COMMA positional-argument
named-argument-list -> .named-argument
named-argument-list -> .named-argument-list COMMA named-argument
positional-argument -> .attribute-argument-expression
named-argument -> .IDENTIFIER ASSIGN attribute-argument-expression
attribute-argument-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":395,"positional-argument-list":396,"named-argument-list":397,"positional-argument":398,"named-argument":399,"attribute-argument-expression":400,"IDENTIFIER":401,"expression":402,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 303 
delegate-declaration -> attributes DELEGATE return-type IDENTIFIER .OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes DELEGATE return-type IDENTIFIER .OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"OPEN_PARENS":403}

item set 304 
delegate-declaration -> attributes delegate-modifiers DELEGATE return-type .IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes delegate-modifiers DELEGATE return-type .IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"IDENTIFIER":404}

item set 305 
delegate-declaration -> DELEGATE return-type IDENTIFIER OPEN_PARENS .CLOSE_PARENS SEMICOLON
delegate-declaration -> DELEGATE return-type IDENTIFIER OPEN_PARENS .formal-parameter-list CLOSE_PARENS SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .params array-type IDENTIFIER
parameter-array -> .attributes params array-type IDENTIFIER
fixed-parameter -> .type IDENTIFIER
fixed-parameter -> .parameter-modifier type IDENTIFIER
fixed-parameter -> .attributes type IDENTIFIER
fixed-parameter -> .attributes parameter-modifieropt type IDENTIFIER
attributes -> .attribute-sections
type -> .value-type
type -> .reference-type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"CLOSE_PARENS":405,"formal-parameter-list":406,"fixed-parameters":407,"parameter-array":408,"fixed-parameter":409,"params":410,"attributes":411,"type":412,"parameter-modifier":413,"attribute-sections":7,"value-type":27,"reference-type":28,"REF":414,"OUT":415,"attribute-section":11,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"array-type":33,"delegate-type":34,"OPEN_BRACKET":13,"type-name":35,"simple-type":36,"OBJECT":37,"STRING":38,"non-array-type":39,"namespace-or-type-name":40,"numeric-type":41,"BOOL":42,"IDENTIFIER":43,"integral-type":44,"floating-point-type":45,"DECIMAL":46,"SBYTE":47,"BYTE":48,"SHORT":49,"USHORT":50,"INT":51,"UINT":52,"LONG":53,"ULONG":54,"CHAR":55,"FLOAT":56,"DOUBLE":57}

item set 306 
rank-specifiers -> rank-specifiers rank-specifier . 
transitions ->  {}

item set 307 
rank-specifier -> OPEN_BRACKET CLOSE_BRACKET . 
transitions ->  {}

item set 308 
rank-specifier -> OPEN_BRACKET dim-separators .CLOSE_BRACKET
dim-separators -> dim-separators .COMMA 
transitions ->  {"CLOSE_BRACKET":416,"COMMA":417}

item set 309 
dim-separators -> COMMA . 
transitions ->  {}

item set 310 
namespace-or-type-name -> namespace-or-type-name DOT IDENTIFIER . 
transitions ->  {}

item set 311 
delegate-declaration -> delegate-modifiers DELEGATE return-type IDENTIFIER .OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> delegate-modifiers DELEGATE return-type IDENTIFIER .OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"OPEN_PARENS":418}

item set 312 
labeled-statement -> IDENTIFIER COLON statement . 
transitions ->  {}

item set 313 
local-variable-declarators -> local-variable-declarators COMMA .local-variable-declarator
local-variable-declarator -> .local-variable
local-variable-declarator -> .local-variable ASSIGN local-variable-initializer
local-variable -> .
local-variable -> .IDENTIFIER 
transitions ->  {"local-variable-declarator":419,"local-variable":199,"IDENTIFIER":200}

item set 314 
local-variable-declarator -> local-variable ASSIGN .local-variable-initializer
local-variable-initializer -> .expression
local-variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"local-variable-initializer":420,"expression":421,"array-initializer":422,"conditional-expression":239,"assignment":240,"OPEN_BRACE":379,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 315 
local-constant-declaration -> CONST type constant-declarators .
constant-declarators -> constant-declarators .COMMA constant-declarator 
transitions ->  {"COMMA":423}

item set 316 
constant-declarators -> constant-declarator . 
transitions ->  {}

item set 317 
constant-declarator -> IDENTIFIER .ASSIGN constant-expression 
transitions ->  {"ASSIGN":424}

item set 318 
try-statement -> TRY block catch-clauses .
try-statement -> TRY block catch-clauses .finally-clause
finally-clause -> .FINALLY block 
transitions ->  {"finally-clause":425,"FINALLY":322}

item set 319 
try-statement -> TRY block finally-clause . 
transitions ->  {}

item set 320 
catch-clauses -> specific-catch-clauses .
catch-clauses -> specific-catch-clauses .general-catch-clause
specific-catch-clauses -> specific-catch-clauses .specific-catch-clause
general-catch-clause -> .CATCH block
specific-catch-clause -> .CATCH OPEN_PARENS class-type CLOSE_PARENS block
specific-catch-clause -> .CATCH OPEN_PARENS class-type IDENTIFIER CLOSE_PARENS block 
transitions ->  {"general-catch-clause":426,"specific-catch-clause":427,"CATCH":324}

item set 321 
catch-clauses -> general-catch-clause . 
transitions ->  {}

item set 322 
finally-clause -> FINALLY .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":428,"OPEN_BRACE":10}

item set 323 
specific-catch-clauses -> specific-catch-clause . 
transitions ->  {}

item set 324 
general-catch-clause -> CATCH .block
specific-catch-clause -> CATCH .OPEN_PARENS class-type CLOSE_PARENS block
specific-catch-clause -> CATCH .OPEN_PARENS class-type IDENTIFIER CLOSE_PARENS block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":429,"OPEN_PARENS":430,"OPEN_BRACE":10}

item set 325 
checked-expression -> CHECKED OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":431}

item set 326 
unchecked-expression -> UNCHECKED OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":432}

item set 327 
lock-statement -> LOCK OPEN_PARENS expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":433}

item set 328 
using-statement -> USING OPEN_PARENS resource-acquisition .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":434}

item set 329 
resource-acquisition -> local-variable-declaration . 
transitions ->  {}

item set 330 
resource-acquisition -> expression . 
transitions ->  {}

item set 331 
if-statement -> IF OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement
if-statement -> IF OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement ELSE embedded-statement 
transitions ->  {"CLOSE_PARENS":435}

item set 332 
boolean-expression -> expression .
boolean-expression -> expression . 
transitions ->  {}

item set 333 
switch-statement -> SWITCH OPEN_PARENS expression .CLOSE_PARENS switch-block 
transitions ->  {"CLOSE_PARENS":436}

item set 334 
while-statement -> WHILE OPEN_PARENS boolean-expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":437}

item set 335 
do-statement -> DO embedded-statement WHILE .OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON 
transitions ->  {"OPEN_PARENS":438}

item set 336 
for-statement -> FOR OPEN_PARENS SEMICOLON .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON .for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-condition -> .boolean-expression
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":439,"for-condition":440,"boolean-expression":441,"expression":332,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 337 
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer .SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":442}

item set 338 
for-initializer -> local-variable-declaration . 
transitions ->  {}

item set 339 
for-initializer -> statement-expression-list .
statement-expression-list -> statement-expression-list .COMMA statement-expression 
transitions ->  {"COMMA":443}

item set 340 
statement-expression-list -> statement-expression . 
transitions ->  {}

item set 341 
foreach-statement -> FOREACH OPEN_PARENS type .IDENTIFIER IN expression CLOSE_PARENS embedded-statement
non-array-type -> type . 
transitions ->  {"IDENTIFIER":444}

item set 342 
goto-statement -> GOTO IDENTIFIER SEMICOLON . 
transitions ->  {}

item set 343 
goto-statement -> GOTO CASE constant-expression .SEMICOLON 
transitions ->  {"SEMICOLON":445}

item set 344 
constant-expression -> expression . 
transitions ->  {}

item set 345 
goto-statement -> GOTO DEFAULT SEMICOLON . 
transitions ->  {}

item set 346 
return-statement -> RETURN expression SEMICOLON . 
transitions ->  {}

item set 347 
conditional-expression -> conditional-or-expression INTERR .expression COLON expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":446,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 348 
conditional-or-expression -> conditional-or-expression OP_OR .conditional-and-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"conditional-and-expression":447,"inclusive-or-expression":246,"exclusive-or-expression":247,"and-expression":252,"equality-expression":255,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259,"unary-expression":448,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 349 
conditional-and-expression -> conditional-and-expression OP_AND .inclusive-or-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"inclusive-or-expression":449,"exclusive-or-expression":247,"and-expression":252,"equality-expression":255,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259,"unary-expression":448,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 350 
inclusive-or-expression -> inclusive-or-expression BITWISE_OR .exclusive-or-expression
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"exclusive-or-expression":450,"and-expression":252,"equality-expression":255,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259,"unary-expression":448,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 351 
exclusive-or-expression -> exclusive-or-expression CARET .and-expression
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"and-expression":451,"equality-expression":255,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259,"unary-expression":448,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 352 
and-expression -> and-expression AMP .equality-expression
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"equality-expression":452,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259,"unary-expression":448,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 353 
equality-expression -> equality-expression OP_EQ .relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"relational-expression":453,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259,"unary-expression":448,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 354 
equality-expression -> equality-expression OP_NE .relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"relational-expression":454,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259,"unary-expression":448,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 355 
relational-expression -> relational-expression LT .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"shift-expression":455,"additive-expression":258,"multiplicative-expression":259,"unary-expression":448,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 356 
relational-expression -> relational-expression GT .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"shift-expression":456,"additive-expression":258,"multiplicative-expression":259,"unary-expression":448,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 357 
relational-expression -> relational-expression OP_LE .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"shift-expression":457,"additive-expression":258,"multiplicative-expression":259,"unary-expression":448,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 358 
relational-expression -> relational-expression OP_GE .shift-expression
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"shift-expression":458,"additive-expression":258,"multiplicative-expression":259,"unary-expression":448,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 359 
relational-expression -> relational-expression IS .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":459,"value-type":27,"reference-type":28,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"array-type":33,"delegate-type":34,"type-name":35,"simple-type":36,"OBJECT":37,"STRING":38,"non-array-type":39,"namespace-or-type-name":40,"numeric-type":41,"BOOL":42,"IDENTIFIER":43,"integral-type":44,"floating-point-type":45,"DECIMAL":46,"SBYTE":47,"BYTE":48,"SHORT":49,"USHORT":50,"INT":51,"UINT":52,"LONG":53,"ULONG":54,"CHAR":55,"FLOAT":56,"DOUBLE":57}

item set 360 
relational-expression -> relational-expression AS .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":460,"value-type":27,"reference-type":28,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"array-type":33,"delegate-type":34,"type-name":35,"simple-type":36,"OBJECT":37,"STRING":38,"non-array-type":39,"namespace-or-type-name":40,"numeric-type":41,"BOOL":42,"IDENTIFIER":43,"integral-type":44,"floating-point-type":45,"DECIMAL":46,"SBYTE":47,"BYTE":48,"SHORT":49,"USHORT":50,"INT":51,"UINT":52,"LONG":53,"ULONG":54,"CHAR":55,"FLOAT":56,"DOUBLE":57}

item set 361 
shift-expression -> shift-expression OP_LEFT_SHIFT .additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"additive-expression":461,"multiplicative-expression":259,"unary-expression":448,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 362 
shift-expression -> shift-expression RIGHT_SHIFT .additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"additive-expression":462,"multiplicative-expression":259,"unary-expression":448,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 363 
additive-expression -> additive-expression PLUS .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"multiplicative-expression":463,"unary-expression":448,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 364 
additive-expression -> additive-expression MINUS .multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"multiplicative-expression":464,"unary-expression":448,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 365 
multiplicative-expression -> multiplicative-expression STAR .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":465,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 366 
multiplicative-expression -> multiplicative-expression DIV .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":466,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 367 
multiplicative-expression -> multiplicative-expression PERCENT .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":467,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 368 
throw-statement -> THROW expression SEMICOLON . 
transitions ->  {}

item set 369 
invocation-expression -> primary-expression OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 370 
invocation-expression -> primary-expression OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":468,"COMMA":469}

item set 371 
argument-list -> argument . 
transitions ->  {}

item set 372 
argument -> expression . 
transitions ->  {}

item set 373 
argument -> REF .variable-reference
variable-reference -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"variable-reference":470,"expression":471,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 374 
argument -> OUT .variable-reference
variable-reference -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"variable-reference":472,"expression":471,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 375 
member-access -> primary-expression DOT IDENTIFIER . 
transitions ->  {}

item set 376 
object-creation-expression -> NEW type OPEN_PARENS .CLOSE_PARENS
object-creation-expression -> NEW type OPEN_PARENS .argument-list CLOSE_PARENS
argument-list -> .argument
argument-list -> .argument-list COMMA argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_PARENS":473,"argument-list":474,"argument":371,"expression":372,"REF":373,"OUT":374,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 377 
array-creation-expression -> NEW non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET
array-creation-expression -> NEW non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> NEW non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> NEW non-array-type OPEN_BRACKET .expression-list CLOSE_BRACKET rank-specifiers array-initializer
rank-specifier -> OPEN_BRACKET .CLOSE_BRACKET
rank-specifier -> OPEN_BRACKET .dim-separators CLOSE_BRACKET
expression-list -> .expression
expression-list -> .expression-list COMMA expression
dim-separators -> .COMMA
dim-separators -> .dim-separators COMMA
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression-list":475,"CLOSE_BRACKET":307,"dim-separators":308,"expression":383,"COMMA":309,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 378 
array-creation-expression -> NEW array-type array-initializer . 
transitions ->  {}

item set 379 
array-initializer -> OPEN_BRACE .CLOSE_BRACE
array-initializer -> OPEN_BRACE .variable-initializer-list CLOSE_BRACE
array-initializer -> OPEN_BRACE .variable-initializer-list COMMA CLOSE_BRACE
variable-initializer-list -> .variable-initializer
variable-initializer-list -> .variable-initializer-list COMMA variable-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACE":476,"variable-initializer-list":477,"variable-initializer":478,"expression":479,"array-initializer":480,"conditional-expression":239,"assignment":240,"OPEN_BRACE":379,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 380 
delegate-creation-expression -> NEW delegate-type OPEN_PARENS .expression CLOSE_PARENS
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":481,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 381 
assignment -> unary-expression assignment-operator expression . 
transitions ->  {}

item set 382 
element-access -> primary-no-array-creation-expression OPEN_BRACKET expression-list .CLOSE_BRACKET
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":482,"COMMA":483}

item set 383 
expression-list -> expression . 
transitions ->  {}

item set 384 
cast-expression -> OPEN_PARENS type CLOSE_PARENS .unary-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"unary-expression":484,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 385 
parenthesized-expression -> OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 386 
member-access -> predefined-type DOT IDENTIFIER . 
transitions ->  {}

item set 387 
base-access -> base DOT IDENTIFIER . 
transitions ->  {}

item set 388 
base-access -> base OPEN_BRACKET expression-list .CLOSE_BRACKET
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":485,"COMMA":483}

item set 389 
typeof-expression -> TYPEOF OPEN_PARENS type .CLOSE_PARENS
non-array-type -> type . 
transitions ->  {"CLOSE_PARENS":486}

item set 390 
typeof-expression -> TYPEOF OPEN_PARENS VOID .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":487}

item set 391 
attribute-section -> OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET . 
transitions ->  {}

item set 392 
attribute-list -> attribute-list COMMA attribute . 
transitions ->  {}

item set 393 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET . 
transitions ->  {}

item set 394 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list COMMA .CLOSE_BRACKET
attribute-list -> attribute-list COMMA .attribute
attribute -> .attribute-name
attribute -> .attribute-name attribute-arguments
attribute-name -> .type-name
type-name -> .namespace-or-type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER 
transitions ->  {"CLOSE_BRACKET":488,"attribute":392,"attribute-name":175,"type-name":183,"namespace-or-type-name":40,"IDENTIFIER":43}

item set 395 
attribute-arguments -> OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 396 
attribute-arguments -> OPEN_PARENS positional-argument-list .CLOSE_PARENS
attribute-arguments -> OPEN_PARENS positional-argument-list .COMMA named-argument-list CLOSE_PARENS
positional-argument-list -> positional-argument-list .COMMA positional-argument 
transitions ->  {"CLOSE_PARENS":489,"COMMA":490}

item set 397 
attribute-arguments -> OPEN_PARENS named-argument-list .CLOSE_PARENS
named-argument-list -> named-argument-list .COMMA named-argument 
transitions ->  {"CLOSE_PARENS":491,"COMMA":492}

item set 398 
positional-argument-list -> positional-argument . 
transitions ->  {}

item set 399 
named-argument-list -> named-argument . 
transitions ->  {}

item set 400 
positional-argument -> attribute-argument-expression . 
transitions ->  {}

item set 401 
named-argument -> IDENTIFIER .ASSIGN attribute-argument-expression
simple-name -> IDENTIFIER . 
transitions ->  {"ASSIGN":493}

item set 402 
attribute-argument-expression -> expression . 
transitions ->  {}

item set 403 
delegate-declaration -> attributes DELEGATE return-type IDENTIFIER OPEN_PARENS .CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes DELEGATE return-type IDENTIFIER OPEN_PARENS .formal-parameter-list CLOSE_PARENS SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .params array-type IDENTIFIER
parameter-array -> .attributes params array-type IDENTIFIER
fixed-parameter -> .type IDENTIFIER
fixed-parameter -> .parameter-modifier type IDENTIFIER
fixed-parameter -> .attributes type IDENTIFIER
fixed-parameter -> .attributes parameter-modifieropt type IDENTIFIER
attributes -> .attribute-sections
type -> .value-type
type -> .reference-type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"CLOSE_PARENS":494,"formal-parameter-list":495,"fixed-parameters":407,"parameter-array":408,"fixed-parameter":409,"params":410,"attributes":411,"type":412,"parameter-modifier":413,"attribute-sections":7,"value-type":27,"reference-type":28,"REF":414,"OUT":415,"attribute-section":11,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"array-type":33,"delegate-type":34,"OPEN_BRACKET":13,"type-name":35,"simple-type":36,"OBJECT":37,"STRING":38,"non-array-type":39,"namespace-or-type-name":40,"numeric-type":41,"BOOL":42,"IDENTIFIER":43,"integral-type":44,"floating-point-type":45,"DECIMAL":46,"SBYTE":47,"BYTE":48,"SHORT":49,"USHORT":50,"INT":51,"UINT":52,"LONG":53,"ULONG":54,"CHAR":55,"FLOAT":56,"DOUBLE":57}

item set 404 
delegate-declaration -> attributes delegate-modifiers DELEGATE return-type IDENTIFIER .OPEN_PARENS CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes delegate-modifiers DELEGATE return-type IDENTIFIER .OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON 
transitions ->  {"OPEN_PARENS":496}

item set 405 
delegate-declaration -> DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":497}

item set 406 
delegate-declaration -> DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list .CLOSE_PARENS SEMICOLON 
transitions ->  {"CLOSE_PARENS":498}

item set 407 
formal-parameter-list -> fixed-parameters .
formal-parameter-list -> fixed-parameters .COMMA parameter-array
fixed-parameters -> fixed-parameters .COMMA fixed-parameter 
transitions ->  {"COMMA":499}

item set 408 
formal-parameter-list -> parameter-array . 
transitions ->  {}

item set 409 
fixed-parameters -> fixed-parameter . 
transitions ->  {}

item set 410 
parameter-array -> params .array-type IDENTIFIER
array-type -> .non-array-type rank-specifiers
non-array-type -> .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"array-type":500,"non-array-type":39,"type":501,"value-type":27,"reference-type":28,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"delegate-type":34,"type-name":35,"simple-type":36,"OBJECT":37,"STRING":38,"namespace-or-type-name":40,"numeric-type":41,"BOOL":42,"IDENTIFIER":43,"integral-type":44,"floating-point-type":45,"DECIMAL":46,"SBYTE":47,"BYTE":48,"SHORT":49,"USHORT":50,"INT":51,"UINT":52,"LONG":53,"ULONG":54,"CHAR":55,"FLOAT":56,"DOUBLE":57}

item set 411 
parameter-array -> attributes .params array-type IDENTIFIER
fixed-parameter -> attributes .type IDENTIFIER
fixed-parameter -> attributes .parameter-modifieropt type IDENTIFIER
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"params":502,"type":503,"parameter-modifieropt":504,"value-type":27,"reference-type":28,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"array-type":33,"delegate-type":34,"type-name":35,"simple-type":36,"OBJECT":37,"STRING":38,"non-array-type":39,"namespace-or-type-name":40,"numeric-type":41,"BOOL":42,"IDENTIFIER":43,"integral-type":44,"floating-point-type":45,"DECIMAL":46,"SBYTE":47,"BYTE":48,"SHORT":49,"USHORT":50,"INT":51,"UINT":52,"LONG":53,"ULONG":54,"CHAR":55,"FLOAT":56,"DOUBLE":57}

item set 412 
fixed-parameter -> type .IDENTIFIER
non-array-type -> type . 
transitions ->  {"IDENTIFIER":505}

item set 413 
fixed-parameter -> parameter-modifier .type IDENTIFIER
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":506,"value-type":27,"reference-type":28,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"array-type":33,"delegate-type":34,"type-name":35,"simple-type":36,"OBJECT":37,"STRING":38,"non-array-type":39,"namespace-or-type-name":40,"numeric-type":41,"BOOL":42,"IDENTIFIER":43,"integral-type":44,"floating-point-type":45,"DECIMAL":46,"SBYTE":47,"BYTE":48,"SHORT":49,"USHORT":50,"INT":51,"UINT":52,"LONG":53,"ULONG":54,"CHAR":55,"FLOAT":56,"DOUBLE":57}

item set 414 
parameter-modifier -> REF . 
transitions ->  {}

item set 415 
parameter-modifier -> OUT . 
transitions ->  {}

item set 416 
rank-specifier -> OPEN_BRACKET dim-separators CLOSE_BRACKET . 
transitions ->  {}

item set 417 
dim-separators -> dim-separators COMMA . 
transitions ->  {}

item set 418 
delegate-declaration -> delegate-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS .CLOSE_PARENS SEMICOLON
delegate-declaration -> delegate-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS .formal-parameter-list CLOSE_PARENS SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .params array-type IDENTIFIER
parameter-array -> .attributes params array-type IDENTIFIER
fixed-parameter -> .type IDENTIFIER
fixed-parameter -> .parameter-modifier type IDENTIFIER
fixed-parameter -> .attributes type IDENTIFIER
fixed-parameter -> .attributes parameter-modifieropt type IDENTIFIER
attributes -> .attribute-sections
type -> .value-type
type -> .reference-type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"CLOSE_PARENS":507,"formal-parameter-list":508,"fixed-parameters":407,"parameter-array":408,"fixed-parameter":409,"params":410,"attributes":411,"type":412,"parameter-modifier":413,"attribute-sections":7,"value-type":27,"reference-type":28,"REF":414,"OUT":415,"attribute-section":11,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"array-type":33,"delegate-type":34,"OPEN_BRACKET":13,"type-name":35,"simple-type":36,"OBJECT":37,"STRING":38,"non-array-type":39,"namespace-or-type-name":40,"numeric-type":41,"BOOL":42,"IDENTIFIER":43,"integral-type":44,"floating-point-type":45,"DECIMAL":46,"SBYTE":47,"BYTE":48,"SHORT":49,"USHORT":50,"INT":51,"UINT":52,"LONG":53,"ULONG":54,"CHAR":55,"FLOAT":56,"DOUBLE":57}

item set 419 
local-variable-declarators -> local-variable-declarators COMMA local-variable-declarator . 
transitions ->  {}

item set 420 
local-variable-declarator -> local-variable ASSIGN local-variable-initializer . 
transitions ->  {}

item set 421 
local-variable-initializer -> expression . 
transitions ->  {}

item set 422 
local-variable-initializer -> array-initializer . 
transitions ->  {}

item set 423 
constant-declarators -> constant-declarators COMMA .constant-declarator
constant-declarator -> .IDENTIFIER ASSIGN constant-expression 
transitions ->  {"constant-declarator":509,"IDENTIFIER":317}

item set 424 
constant-declarator -> IDENTIFIER ASSIGN .constant-expression
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":510,"expression":344,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 425 
try-statement -> TRY block catch-clauses finally-clause . 
transitions ->  {}

item set 426 
catch-clauses -> specific-catch-clauses general-catch-clause . 
transitions ->  {}

item set 427 
specific-catch-clauses -> specific-catch-clauses specific-catch-clause . 
transitions ->  {}

item set 428 
finally-clause -> FINALLY block . 
transitions ->  {}

item set 429 
general-catch-clause -> CATCH block . 
transitions ->  {}

item set 430 
specific-catch-clause -> CATCH OPEN_PARENS .class-type CLOSE_PARENS block
specific-catch-clause -> CATCH OPEN_PARENS .class-type IDENTIFIER CLOSE_PARENS block
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
type-name -> .namespace-or-type-name
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER 
transitions ->  {"class-type":511,"type-name":512,"OBJECT":37,"STRING":38,"namespace-or-type-name":40,"IDENTIFIER":43}

item set 431 
checked-expression -> CHECKED OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 432 
unchecked-expression -> UNCHECKED OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 433 
lock-statement -> LOCK OPEN_PARENS expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":513,"block":69,"empty-statement":70,"expression-statement":71,"selection-statement":72,"iteration-statement":73,"jump-statement":74,"try-statement":75,"checked-statement":76,"unchecked-statement":77,"lock-statement":78,"using-statement":79,"OPEN_BRACE":10,"SEMICOLON":82,"statement-expression":83,"if-statement":84,"switch-statement":85,"while-statement":86,"do-statement":87,"for-statement":88,"foreach-statement":89,"break-statement":90,"continue-statement":91,"goto-statement":92,"return-statement":93,"throw-statement":94,"TRY":95,"CHECKED":96,"UNCHECKED":97,"LOCK":98,"USING":99,"invocation-expression":100,"object-creation-expression":101,"assignment":102,"post-increment-expression":103,"post-decrement-expression":104,"pre-increment-expression":105,"pre-decrement-expression":106,"IF":107,"SWITCH":108,"WHILE":109,"DO":110,"FOR":111,"FOREACH":112,"BREAK":113,"CONTINUE":114,"GOTO":115,"RETURN":116,"THROW":117,"primary-expression":118,"NEW":119,"unary-expression":120,"OP_INC":121,"OP_DEC":122,"primary-no-array-creation-expression":125,"array-creation-expression":126,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"cast-expression":132,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"element-access":138,"this-access":139,"base-access":140,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"OPEN_PARENS":146,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 434 
using-statement -> USING OPEN_PARENS resource-acquisition CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":514,"block":69,"empty-statement":70,"expression-statement":71,"selection-statement":72,"iteration-statement":73,"jump-statement":74,"try-statement":75,"checked-statement":76,"unchecked-statement":77,"lock-statement":78,"using-statement":79,"OPEN_BRACE":10,"SEMICOLON":82,"statement-expression":83,"if-statement":84,"switch-statement":85,"while-statement":86,"do-statement":87,"for-statement":88,"foreach-statement":89,"break-statement":90,"continue-statement":91,"goto-statement":92,"return-statement":93,"throw-statement":94,"TRY":95,"CHECKED":96,"UNCHECKED":97,"LOCK":98,"USING":99,"invocation-expression":100,"object-creation-expression":101,"assignment":102,"post-increment-expression":103,"post-decrement-expression":104,"pre-increment-expression":105,"pre-decrement-expression":106,"IF":107,"SWITCH":108,"WHILE":109,"DO":110,"FOR":111,"FOREACH":112,"BREAK":113,"CONTINUE":114,"GOTO":115,"RETURN":116,"THROW":117,"primary-expression":118,"NEW":119,"unary-expression":120,"OP_INC":121,"OP_DEC":122,"primary-no-array-creation-expression":125,"array-creation-expression":126,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"cast-expression":132,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"element-access":138,"this-access":139,"base-access":140,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"OPEN_PARENS":146,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 435 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement ELSE embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":515,"block":69,"empty-statement":70,"expression-statement":71,"selection-statement":72,"iteration-statement":73,"jump-statement":74,"try-statement":75,"checked-statement":76,"unchecked-statement":77,"lock-statement":78,"using-statement":79,"OPEN_BRACE":10,"SEMICOLON":82,"statement-expression":83,"if-statement":84,"switch-statement":85,"while-statement":86,"do-statement":87,"for-statement":88,"foreach-statement":89,"break-statement":90,"continue-statement":91,"goto-statement":92,"return-statement":93,"throw-statement":94,"TRY":95,"CHECKED":96,"UNCHECKED":97,"LOCK":98,"USING":99,"invocation-expression":100,"object-creation-expression":101,"assignment":102,"post-increment-expression":103,"post-decrement-expression":104,"pre-increment-expression":105,"pre-decrement-expression":106,"IF":107,"SWITCH":108,"WHILE":109,"DO":110,"FOR":111,"FOREACH":112,"BREAK":113,"CONTINUE":114,"GOTO":115,"RETURN":116,"THROW":117,"primary-expression":118,"NEW":119,"unary-expression":120,"OP_INC":121,"OP_DEC":122,"primary-no-array-creation-expression":125,"array-creation-expression":126,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"cast-expression":132,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"element-access":138,"this-access":139,"base-access":140,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"OPEN_PARENS":146,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 436 
switch-statement -> SWITCH OPEN_PARENS expression CLOSE_PARENS .switch-block
switch-block -> .OPEN_BRACE CLOSE_BRACE
switch-block -> .OPEN_BRACE switch-sections CLOSE_BRACE 
transitions ->  {"switch-block":516,"OPEN_BRACE":517}

item set 437 
while-statement -> WHILE OPEN_PARENS boolean-expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":518,"block":69,"empty-statement":70,"expression-statement":71,"selection-statement":72,"iteration-statement":73,"jump-statement":74,"try-statement":75,"checked-statement":76,"unchecked-statement":77,"lock-statement":78,"using-statement":79,"OPEN_BRACE":10,"SEMICOLON":82,"statement-expression":83,"if-statement":84,"switch-statement":85,"while-statement":86,"do-statement":87,"for-statement":88,"foreach-statement":89,"break-statement":90,"continue-statement":91,"goto-statement":92,"return-statement":93,"throw-statement":94,"TRY":95,"CHECKED":96,"UNCHECKED":97,"LOCK":98,"USING":99,"invocation-expression":100,"object-creation-expression":101,"assignment":102,"post-increment-expression":103,"post-decrement-expression":104,"pre-increment-expression":105,"pre-decrement-expression":106,"IF":107,"SWITCH":108,"WHILE":109,"DO":110,"FOR":111,"FOREACH":112,"BREAK":113,"CONTINUE":114,"GOTO":115,"RETURN":116,"THROW":117,"primary-expression":118,"NEW":119,"unary-expression":120,"OP_INC":121,"OP_DEC":122,"primary-no-array-creation-expression":125,"array-creation-expression":126,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"cast-expression":132,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"element-access":138,"this-access":139,"base-access":140,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"OPEN_PARENS":146,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 438 
do-statement -> DO embedded-statement WHILE OPEN_PARENS .boolean-expression CLOSE_PARENS SEMICOLON
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"boolean-expression":519,"expression":332,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 439 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_PARENS":520,"for-iterator":521,"statement-expression-list":522,"statement-expression":340,"invocation-expression":100,"object-creation-expression":101,"assignment":102,"post-increment-expression":103,"post-decrement-expression":104,"pre-increment-expression":105,"pre-decrement-expression":106,"primary-expression":118,"NEW":119,"unary-expression":120,"OP_INC":121,"OP_DEC":122,"primary-no-array-creation-expression":125,"array-creation-expression":126,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"cast-expression":132,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"element-access":138,"this-access":139,"base-access":140,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"OPEN_PARENS":146,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 440 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition .SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":523}

item set 441 
for-condition -> boolean-expression . 
transitions ->  {}

item set 442 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON .for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-condition -> .boolean-expression
boolean-expression -> .expression
boolean-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"SEMICOLON":524,"for-condition":525,"boolean-expression":441,"expression":332,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 443 
statement-expression-list -> statement-expression-list COMMA .statement-expression
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"statement-expression":526,"invocation-expression":100,"object-creation-expression":101,"assignment":102,"post-increment-expression":103,"post-decrement-expression":104,"pre-increment-expression":105,"pre-decrement-expression":106,"primary-expression":118,"NEW":119,"unary-expression":120,"OP_INC":121,"OP_DEC":122,"primary-no-array-creation-expression":125,"array-creation-expression":126,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"cast-expression":132,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"element-access":138,"this-access":139,"base-access":140,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"OPEN_PARENS":146,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 444 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER .IN expression CLOSE_PARENS embedded-statement 
transitions ->  {"IN":527}

item set 445 
goto-statement -> GOTO CASE constant-expression SEMICOLON . 
transitions ->  {}

item set 446 
conditional-expression -> conditional-or-expression INTERR expression .COLON expression 
transitions ->  {"COLON":528}

item set 447 
conditional-or-expression -> conditional-or-expression OP_OR conditional-and-expression .
conditional-and-expression -> conditional-and-expression .OP_AND inclusive-or-expression 
transitions ->  {"OP_AND":349}

item set 448 
multiplicative-expression -> unary-expression . 
transitions ->  {}

item set 449 
conditional-and-expression -> conditional-and-expression OP_AND inclusive-or-expression .
inclusive-or-expression -> inclusive-or-expression .BITWISE_OR exclusive-or-expression 
transitions ->  {"BITWISE_OR":350}

item set 450 
inclusive-or-expression -> inclusive-or-expression BITWISE_OR exclusive-or-expression .
exclusive-or-expression -> exclusive-or-expression .CARET and-expression 
transitions ->  {"CARET":351}

item set 451 
exclusive-or-expression -> exclusive-or-expression CARET and-expression .
and-expression -> and-expression .AMP equality-expression 
transitions ->  {"AMP":352}

item set 452 
and-expression -> and-expression AMP equality-expression .
equality-expression -> equality-expression .OP_EQ relational-expression
equality-expression -> equality-expression .OP_NE relational-expression 
transitions ->  {"OP_EQ":353,"OP_NE":354}

item set 453 
equality-expression -> equality-expression OP_EQ relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":355,"GT":356,"OP_LE":357,"OP_GE":358,"IS":359,"AS":360}

item set 454 
equality-expression -> equality-expression OP_NE relational-expression .
relational-expression -> relational-expression .LT shift-expression
relational-expression -> relational-expression .GT shift-expression
relational-expression -> relational-expression .OP_LE shift-expression
relational-expression -> relational-expression .OP_GE shift-expression
relational-expression -> relational-expression .IS type
relational-expression -> relational-expression .AS type 
transitions ->  {"LT":355,"GT":356,"OP_LE":357,"OP_GE":358,"IS":359,"AS":360}

item set 455 
relational-expression -> relational-expression LT shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":361,"RIGHT_SHIFT":362}

item set 456 
relational-expression -> relational-expression GT shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":361,"RIGHT_SHIFT":362}

item set 457 
relational-expression -> relational-expression OP_LE shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":361,"RIGHT_SHIFT":362}

item set 458 
relational-expression -> relational-expression OP_GE shift-expression .
shift-expression -> shift-expression .OP_LEFT_SHIFT additive-expression
shift-expression -> shift-expression .RIGHT_SHIFT additive-expression 
transitions ->  {"OP_LEFT_SHIFT":361,"RIGHT_SHIFT":362}

item set 459 
relational-expression -> relational-expression IS type .
non-array-type -> type . 
transitions ->  {}

item set 460 
relational-expression -> relational-expression AS type .
non-array-type -> type . 
transitions ->  {}

item set 461 
shift-expression -> shift-expression OP_LEFT_SHIFT additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":363,"MINUS":364}

item set 462 
shift-expression -> shift-expression RIGHT_SHIFT additive-expression .
additive-expression -> additive-expression .PLUS multiplicative-expression
additive-expression -> additive-expression .MINUS multiplicative-expression 
transitions ->  {"PLUS":363,"MINUS":364}

item set 463 
additive-expression -> additive-expression PLUS multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":365,"DIV":366,"PERCENT":367}

item set 464 
additive-expression -> additive-expression MINUS multiplicative-expression .
multiplicative-expression -> multiplicative-expression .STAR unary-expression
multiplicative-expression -> multiplicative-expression .DIV unary-expression
multiplicative-expression -> multiplicative-expression .PERCENT unary-expression 
transitions ->  {"STAR":365,"DIV":366,"PERCENT":367}

item set 465 
multiplicative-expression -> multiplicative-expression STAR unary-expression . 
transitions ->  {}

item set 466 
multiplicative-expression -> multiplicative-expression DIV unary-expression . 
transitions ->  {}

item set 467 
multiplicative-expression -> multiplicative-expression PERCENT unary-expression . 
transitions ->  {}

item set 468 
invocation-expression -> primary-expression OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 469 
argument-list -> argument-list COMMA .argument
argument -> .expression
argument -> .REF variable-reference
argument -> .OUT variable-reference
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"argument":529,"expression":372,"REF":373,"OUT":374,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 470 
argument -> REF variable-reference . 
transitions ->  {}

item set 471 
variable-reference -> expression . 
transitions ->  {}

item set 472 
argument -> OUT variable-reference . 
transitions ->  {}

item set 473 
object-creation-expression -> NEW type OPEN_PARENS CLOSE_PARENS . 
transitions ->  {}

item set 474 
object-creation-expression -> NEW type OPEN_PARENS argument-list .CLOSE_PARENS
argument-list -> argument-list .COMMA argument 
transitions ->  {"CLOSE_PARENS":530,"COMMA":469}

item set 475 
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET rank-specifiers
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET array-initializer
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list .CLOSE_BRACKET rank-specifiers array-initializer
expression-list -> expression-list .COMMA expression 
transitions ->  {"CLOSE_BRACKET":531,"COMMA":483}

item set 476 
array-initializer -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 477 
array-initializer -> OPEN_BRACE variable-initializer-list .CLOSE_BRACE
array-initializer -> OPEN_BRACE variable-initializer-list .COMMA CLOSE_BRACE
variable-initializer-list -> variable-initializer-list .COMMA variable-initializer 
transitions ->  {"CLOSE_BRACE":532,"COMMA":533}

item set 478 
variable-initializer-list -> variable-initializer . 
transitions ->  {}

item set 479 
variable-initializer -> expression . 
transitions ->  {}

item set 480 
variable-initializer -> array-initializer . 
transitions ->  {}

item set 481 
delegate-creation-expression -> NEW delegate-type OPEN_PARENS expression .CLOSE_PARENS 
transitions ->  {"CLOSE_PARENS":534}

item set 482 
element-access -> primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET . 
transitions ->  {}

item set 483 
expression-list -> expression-list COMMA .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":535,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 484 
cast-expression -> OPEN_PARENS type CLOSE_PARENS unary-expression . 
transitions ->  {}

item set 485 
base-access -> base OPEN_BRACKET expression-list CLOSE_BRACKET . 
transitions ->  {}

item set 486 
typeof-expression -> TYPEOF OPEN_PARENS type CLOSE_PARENS . 
transitions ->  {}

item set 487 
typeof-expression -> TYPEOF OPEN_PARENS VOID CLOSE_PARENS . 
transitions ->  {}

item set 488 
attribute-section -> OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET . 
transitions ->  {}

item set 489 
attribute-arguments -> OPEN_PARENS positional-argument-list CLOSE_PARENS . 
transitions ->  {}

item set 490 
attribute-arguments -> OPEN_PARENS positional-argument-list COMMA .named-argument-list CLOSE_PARENS
positional-argument-list -> positional-argument-list COMMA .positional-argument
named-argument-list -> .named-argument
named-argument-list -> .named-argument-list COMMA named-argument
positional-argument -> .attribute-argument-expression
named-argument -> .IDENTIFIER ASSIGN attribute-argument-expression
attribute-argument-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"named-argument-list":536,"positional-argument":537,"named-argument":399,"attribute-argument-expression":400,"IDENTIFIER":401,"expression":402,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 491 
attribute-arguments -> OPEN_PARENS named-argument-list CLOSE_PARENS . 
transitions ->  {}

item set 492 
named-argument-list -> named-argument-list COMMA .named-argument
named-argument -> .IDENTIFIER ASSIGN attribute-argument-expression 
transitions ->  {"named-argument":538,"IDENTIFIER":539}

item set 493 
named-argument -> IDENTIFIER ASSIGN .attribute-argument-expression
attribute-argument-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"attribute-argument-expression":540,"expression":402,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 494 
delegate-declaration -> attributes DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":541}

item set 495 
delegate-declaration -> attributes DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list .CLOSE_PARENS SEMICOLON 
transitions ->  {"CLOSE_PARENS":542}

item set 496 
delegate-declaration -> attributes delegate-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS .CLOSE_PARENS SEMICOLON
delegate-declaration -> attributes delegate-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS .formal-parameter-list CLOSE_PARENS SEMICOLON
formal-parameter-list -> .fixed-parameters
formal-parameter-list -> .fixed-parameters COMMA parameter-array
formal-parameter-list -> .parameter-array
fixed-parameters -> .fixed-parameter
fixed-parameters -> .fixed-parameters COMMA fixed-parameter
parameter-array -> .params array-type IDENTIFIER
parameter-array -> .attributes params array-type IDENTIFIER
fixed-parameter -> .type IDENTIFIER
fixed-parameter -> .parameter-modifier type IDENTIFIER
fixed-parameter -> .attributes type IDENTIFIER
fixed-parameter -> .attributes parameter-modifieropt type IDENTIFIER
attributes -> .attribute-sections
type -> .value-type
type -> .reference-type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"CLOSE_PARENS":543,"formal-parameter-list":544,"fixed-parameters":407,"parameter-array":408,"fixed-parameter":409,"params":410,"attributes":411,"type":412,"parameter-modifier":413,"attribute-sections":7,"value-type":27,"reference-type":28,"REF":414,"OUT":415,"attribute-section":11,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"array-type":33,"delegate-type":34,"OPEN_BRACKET":13,"type-name":35,"simple-type":36,"OBJECT":37,"STRING":38,"non-array-type":39,"namespace-or-type-name":40,"numeric-type":41,"BOOL":42,"IDENTIFIER":43,"integral-type":44,"floating-point-type":45,"DECIMAL":46,"SBYTE":47,"BYTE":48,"SHORT":49,"USHORT":50,"INT":51,"UINT":52,"LONG":53,"ULONG":54,"CHAR":55,"FLOAT":56,"DOUBLE":57}

item set 497 
delegate-declaration -> DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 498 
delegate-declaration -> DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":545}

item set 499 
formal-parameter-list -> fixed-parameters COMMA .parameter-array
fixed-parameters -> fixed-parameters COMMA .fixed-parameter
parameter-array -> .params array-type IDENTIFIER
parameter-array -> .attributes params array-type IDENTIFIER
fixed-parameter -> .type IDENTIFIER
fixed-parameter -> .parameter-modifier type IDENTIFIER
fixed-parameter -> .attributes type IDENTIFIER
fixed-parameter -> .attributes parameter-modifieropt type IDENTIFIER
attributes -> .attribute-sections
type -> .value-type
type -> .reference-type
parameter-modifier -> .REF
parameter-modifier -> .OUT
attribute-sections -> .attribute-section
attribute-sections -> .attribute-sections attribute-section
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
attribute-section -> .OPEN_BRACKET attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-list COMMA CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list CLOSE_BRACKET
attribute-section -> .OPEN_BRACKET attribute-target-specifier attribute-list COMMA CLOSE_BRACKET
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"parameter-array":546,"fixed-parameter":547,"params":410,"attributes":411,"type":412,"parameter-modifier":413,"attribute-sections":7,"value-type":27,"reference-type":28,"REF":414,"OUT":415,"attribute-section":11,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"array-type":33,"delegate-type":34,"OPEN_BRACKET":13,"type-name":35,"simple-type":36,"OBJECT":37,"STRING":38,"non-array-type":39,"namespace-or-type-name":40,"numeric-type":41,"BOOL":42,"IDENTIFIER":43,"integral-type":44,"floating-point-type":45,"DECIMAL":46,"SBYTE":47,"BYTE":48,"SHORT":49,"USHORT":50,"INT":51,"UINT":52,"LONG":53,"ULONG":54,"CHAR":55,"FLOAT":56,"DOUBLE":57}

item set 500 
parameter-array -> params array-type .IDENTIFIER
reference-type -> array-type . 
transitions ->  {"IDENTIFIER":548}

item set 501 
non-array-type -> type . 
transitions ->  {}

item set 502 
parameter-array -> attributes params .array-type IDENTIFIER
array-type -> .non-array-type rank-specifiers
non-array-type -> .type
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"array-type":549,"non-array-type":39,"type":501,"value-type":27,"reference-type":28,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"delegate-type":34,"type-name":35,"simple-type":36,"OBJECT":37,"STRING":38,"namespace-or-type-name":40,"numeric-type":41,"BOOL":42,"IDENTIFIER":43,"integral-type":44,"floating-point-type":45,"DECIMAL":46,"SBYTE":47,"BYTE":48,"SHORT":49,"USHORT":50,"INT":51,"UINT":52,"LONG":53,"ULONG":54,"CHAR":55,"FLOAT":56,"DOUBLE":57}

item set 503 
fixed-parameter -> attributes type .IDENTIFIER
non-array-type -> type . 
transitions ->  {"IDENTIFIER":550}

item set 504 
fixed-parameter -> attributes parameter-modifieropt .type IDENTIFIER
type -> .value-type
type -> .reference-type
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE 
transitions ->  {"type":551,"value-type":27,"reference-type":28,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"array-type":33,"delegate-type":34,"type-name":35,"simple-type":36,"OBJECT":37,"STRING":38,"non-array-type":39,"namespace-or-type-name":40,"numeric-type":41,"BOOL":42,"IDENTIFIER":43,"integral-type":44,"floating-point-type":45,"DECIMAL":46,"SBYTE":47,"BYTE":48,"SHORT":49,"USHORT":50,"INT":51,"UINT":52,"LONG":53,"ULONG":54,"CHAR":55,"FLOAT":56,"DOUBLE":57}

item set 505 
fixed-parameter -> type IDENTIFIER . 
transitions ->  {}

item set 506 
fixed-parameter -> parameter-modifier type .IDENTIFIER
non-array-type -> type . 
transitions ->  {"IDENTIFIER":552}

item set 507 
delegate-declaration -> delegate-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":553}

item set 508 
delegate-declaration -> delegate-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list .CLOSE_PARENS SEMICOLON 
transitions ->  {"CLOSE_PARENS":554}

item set 509 
constant-declarators -> constant-declarators COMMA constant-declarator . 
transitions ->  {}

item set 510 
constant-declarator -> IDENTIFIER ASSIGN constant-expression . 
transitions ->  {}

item set 511 
specific-catch-clause -> CATCH OPEN_PARENS class-type .CLOSE_PARENS block
specific-catch-clause -> CATCH OPEN_PARENS class-type .IDENTIFIER CLOSE_PARENS block 
transitions ->  {"CLOSE_PARENS":555,"IDENTIFIER":556}

item set 512 
class-type -> type-name . 
transitions ->  {}

item set 513 
lock-statement -> LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 514 
using-statement -> USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 515 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement .
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement .ELSE embedded-statement 
transitions ->  {"ELSE":557}

item set 516 
switch-statement -> SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block . 
transitions ->  {}

item set 517 
switch-block -> OPEN_BRACE .CLOSE_BRACE
switch-block -> OPEN_BRACE .switch-sections CLOSE_BRACE
switch-sections -> .switch-section
switch-sections -> .switch-sections switch-section
switch-section -> .switch-labels statement-list
switch-labels -> .switch-label
switch-labels -> .switch-labels switch-label
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON 
transitions ->  {"CLOSE_BRACE":558,"switch-sections":559,"switch-section":560,"switch-labels":561,"switch-label":562,"CASE":563,"DEFAULT":564}

item set 518 
while-statement -> WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 519 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression .CLOSE_PARENS SEMICOLON 
transitions ->  {"CLOSE_PARENS":565}

item set 520 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":566,"block":69,"empty-statement":70,"expression-statement":71,"selection-statement":72,"iteration-statement":73,"jump-statement":74,"try-statement":75,"checked-statement":76,"unchecked-statement":77,"lock-statement":78,"using-statement":79,"OPEN_BRACE":10,"SEMICOLON":82,"statement-expression":83,"if-statement":84,"switch-statement":85,"while-statement":86,"do-statement":87,"for-statement":88,"foreach-statement":89,"break-statement":90,"continue-statement":91,"goto-statement":92,"return-statement":93,"throw-statement":94,"TRY":95,"CHECKED":96,"UNCHECKED":97,"LOCK":98,"USING":99,"invocation-expression":100,"object-creation-expression":101,"assignment":102,"post-increment-expression":103,"post-decrement-expression":104,"pre-increment-expression":105,"pre-decrement-expression":106,"IF":107,"SWITCH":108,"WHILE":109,"DO":110,"FOR":111,"FOREACH":112,"BREAK":113,"CONTINUE":114,"GOTO":115,"RETURN":116,"THROW":117,"primary-expression":118,"NEW":119,"unary-expression":120,"OP_INC":121,"OP_DEC":122,"primary-no-array-creation-expression":125,"array-creation-expression":126,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"cast-expression":132,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"element-access":138,"this-access":139,"base-access":140,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"OPEN_PARENS":146,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 521 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":567}

item set 522 
for-iterator -> statement-expression-list .
statement-expression-list -> statement-expression-list .COMMA statement-expression 
transitions ->  {"COMMA":443}

item set 523 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_PARENS":568,"for-iterator":569,"statement-expression-list":522,"statement-expression":340,"invocation-expression":100,"object-creation-expression":101,"assignment":102,"post-increment-expression":103,"post-decrement-expression":104,"pre-increment-expression":105,"pre-decrement-expression":106,"primary-expression":118,"NEW":119,"unary-expression":120,"OP_INC":121,"OP_DEC":122,"primary-no-array-creation-expression":125,"array-creation-expression":126,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"cast-expression":132,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"element-access":138,"this-access":139,"base-access":140,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"OPEN_PARENS":146,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 524 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_PARENS":570,"for-iterator":571,"statement-expression-list":522,"statement-expression":340,"invocation-expression":100,"object-creation-expression":101,"assignment":102,"post-increment-expression":103,"post-decrement-expression":104,"pre-increment-expression":105,"pre-decrement-expression":106,"primary-expression":118,"NEW":119,"unary-expression":120,"OP_INC":121,"OP_DEC":122,"primary-no-array-creation-expression":125,"array-creation-expression":126,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"cast-expression":132,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"element-access":138,"this-access":139,"base-access":140,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"OPEN_PARENS":146,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 525 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition .SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition .SEMICOLON for-iterator CLOSE_PARENS embedded-statement 
transitions ->  {"SEMICOLON":572}

item set 526 
statement-expression-list -> statement-expression-list COMMA statement-expression . 
transitions ->  {}

item set 527 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER IN .expression CLOSE_PARENS embedded-statement
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":573,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 528 
conditional-expression -> conditional-or-expression INTERR expression COLON .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"expression":574,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 529 
argument-list -> argument-list COMMA argument . 
transitions ->  {}

item set 530 
object-creation-expression -> NEW type OPEN_PARENS argument-list CLOSE_PARENS . 
transitions ->  {}

item set 531 
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .rank-specifiers
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .array-initializer
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET .rank-specifiers array-initializer
rank-specifiers -> .rank-specifier
rank-specifiers -> .rank-specifiers rank-specifier
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET 
transitions ->  {"rank-specifiers":575,"array-initializer":576,"rank-specifier":188,"OPEN_BRACE":379,"OPEN_BRACKET":189}

item set 532 
array-initializer -> OPEN_BRACE variable-initializer-list CLOSE_BRACE . 
transitions ->  {}

item set 533 
array-initializer -> OPEN_BRACE variable-initializer-list COMMA .CLOSE_BRACE
variable-initializer-list -> variable-initializer-list COMMA .variable-initializer
variable-initializer -> .expression
variable-initializer -> .array-initializer
expression -> .conditional-expression
expression -> .assignment
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"CLOSE_BRACE":577,"variable-initializer":578,"expression":479,"array-initializer":480,"conditional-expression":239,"assignment":240,"OPEN_BRACE":379,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 534 
delegate-creation-expression -> NEW delegate-type OPEN_PARENS expression CLOSE_PARENS . 
transitions ->  {}

item set 535 
expression-list -> expression-list COMMA expression . 
transitions ->  {}

item set 536 
attribute-arguments -> OPEN_PARENS positional-argument-list COMMA named-argument-list .CLOSE_PARENS
named-argument-list -> named-argument-list .COMMA named-argument 
transitions ->  {"CLOSE_PARENS":579,"COMMA":492}

item set 537 
positional-argument-list -> positional-argument-list COMMA positional-argument . 
transitions ->  {}

item set 538 
named-argument-list -> named-argument-list COMMA named-argument . 
transitions ->  {}

item set 539 
named-argument -> IDENTIFIER .ASSIGN attribute-argument-expression 
transitions ->  {"ASSIGN":493}

item set 540 
named-argument -> IDENTIFIER ASSIGN attribute-argument-expression . 
transitions ->  {}

item set 541 
delegate-declaration -> attributes DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 542 
delegate-declaration -> attributes DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":580}

item set 543 
delegate-declaration -> attributes delegate-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":581}

item set 544 
delegate-declaration -> attributes delegate-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list .CLOSE_PARENS SEMICOLON 
transitions ->  {"CLOSE_PARENS":582}

item set 545 
delegate-declaration -> DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 546 
formal-parameter-list -> fixed-parameters COMMA parameter-array . 
transitions ->  {}

item set 547 
fixed-parameters -> fixed-parameters COMMA fixed-parameter . 
transitions ->  {}

item set 548 
parameter-array -> params array-type IDENTIFIER . 
transitions ->  {}

item set 549 
parameter-array -> attributes params array-type .IDENTIFIER
reference-type -> array-type . 
transitions ->  {"IDENTIFIER":583}

item set 550 
fixed-parameter -> attributes type IDENTIFIER . 
transitions ->  {}

item set 551 
fixed-parameter -> attributes parameter-modifieropt type .IDENTIFIER
non-array-type -> type . 
transitions ->  {"IDENTIFIER":584}

item set 552 
fixed-parameter -> parameter-modifier type IDENTIFIER . 
transitions ->  {}

item set 553 
delegate-declaration -> delegate-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 554 
delegate-declaration -> delegate-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":585}

item set 555 
specific-catch-clause -> CATCH OPEN_PARENS class-type CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":586,"OPEN_BRACE":10}

item set 556 
specific-catch-clause -> CATCH OPEN_PARENS class-type IDENTIFIER .CLOSE_PARENS block 
transitions ->  {"CLOSE_PARENS":587}

item set 557 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":588,"block":69,"empty-statement":70,"expression-statement":71,"selection-statement":72,"iteration-statement":73,"jump-statement":74,"try-statement":75,"checked-statement":76,"unchecked-statement":77,"lock-statement":78,"using-statement":79,"OPEN_BRACE":10,"SEMICOLON":82,"statement-expression":83,"if-statement":84,"switch-statement":85,"while-statement":86,"do-statement":87,"for-statement":88,"foreach-statement":89,"break-statement":90,"continue-statement":91,"goto-statement":92,"return-statement":93,"throw-statement":94,"TRY":95,"CHECKED":96,"UNCHECKED":97,"LOCK":98,"USING":99,"invocation-expression":100,"object-creation-expression":101,"assignment":102,"post-increment-expression":103,"post-decrement-expression":104,"pre-increment-expression":105,"pre-decrement-expression":106,"IF":107,"SWITCH":108,"WHILE":109,"DO":110,"FOR":111,"FOREACH":112,"BREAK":113,"CONTINUE":114,"GOTO":115,"RETURN":116,"THROW":117,"primary-expression":118,"NEW":119,"unary-expression":120,"OP_INC":121,"OP_DEC":122,"primary-no-array-creation-expression":125,"array-creation-expression":126,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"cast-expression":132,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"element-access":138,"this-access":139,"base-access":140,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"OPEN_PARENS":146,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 558 
switch-block -> OPEN_BRACE CLOSE_BRACE . 
transitions ->  {}

item set 559 
switch-block -> OPEN_BRACE switch-sections .CLOSE_BRACE
switch-sections -> switch-sections .switch-section
switch-section -> .switch-labels statement-list
switch-labels -> .switch-label
switch-labels -> .switch-labels switch-label
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON 
transitions ->  {"CLOSE_BRACE":589,"switch-section":590,"switch-labels":561,"switch-label":562,"CASE":563,"DEFAULT":564}

item set 560 
switch-sections -> switch-section . 
transitions ->  {}

item set 561 
switch-section -> switch-labels .statement-list
switch-labels -> switch-labels .switch-label
statement-list -> .statement
statement-list -> .statement-list statement
switch-label -> .CASE constant-expression COLON
switch-label -> .DEFAULT COLON
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"statement-list":591,"switch-label":592,"statement":62,"CASE":563,"DEFAULT":564,"labeled-statement":63,"declaration-statement":64,"embedded-statement":65,"IDENTIFIER":66,"local-variable-declaration":67,"local-constant-declaration":68,"block":69,"empty-statement":70,"expression-statement":71,"selection-statement":72,"iteration-statement":73,"jump-statement":74,"try-statement":75,"checked-statement":76,"unchecked-statement":77,"lock-statement":78,"using-statement":79,"type":80,"CONST":81,"OPEN_BRACE":10,"SEMICOLON":82,"statement-expression":83,"if-statement":84,"switch-statement":85,"while-statement":86,"do-statement":87,"for-statement":88,"foreach-statement":89,"break-statement":90,"continue-statement":91,"goto-statement":92,"return-statement":93,"throw-statement":94,"TRY":95,"CHECKED":96,"UNCHECKED":97,"LOCK":98,"USING":99,"value-type":27,"reference-type":28,"invocation-expression":100,"object-creation-expression":101,"assignment":102,"post-increment-expression":103,"post-decrement-expression":104,"pre-increment-expression":105,"pre-decrement-expression":106,"IF":107,"SWITCH":108,"WHILE":109,"DO":110,"FOR":111,"FOREACH":112,"BREAK":113,"CONTINUE":114,"GOTO":115,"RETURN":116,"THROW":117,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"array-type":33,"delegate-type":34,"primary-expression":118,"NEW":119,"unary-expression":120,"OP_INC":121,"OP_DEC":122,"type-name":35,"simple-type":36,"OBJECT":123,"STRING":124,"non-array-type":39,"primary-no-array-creation-expression":125,"array-creation-expression":126,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"cast-expression":132,"namespace-or-type-name":40,"numeric-type":41,"BOOL":133,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"element-access":138,"this-access":139,"base-access":140,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"OPEN_PARENS":146,"integral-type":44,"floating-point-type":45,"DECIMAL":147,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"SBYTE":158,"BYTE":159,"SHORT":160,"USHORT":161,"INT":162,"UINT":163,"LONG":164,"ULONG":165,"CHAR":166,"FLOAT":167,"DOUBLE":168,"TRUE":169,"FALSE":170}

item set 562 
switch-labels -> switch-label . 
transitions ->  {}

item set 563 
switch-label -> CASE .constant-expression COLON
constant-expression -> .expression
expression -> .conditional-expression
expression -> .assignment
conditional-expression -> .conditional-or-expression
conditional-expression -> .conditional-or-expression INTERR expression COLON expression
assignment -> .unary-expression assignment-operator expression
conditional-or-expression -> .conditional-and-expression
conditional-or-expression -> .conditional-or-expression OP_OR conditional-and-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
conditional-and-expression -> .inclusive-or-expression
conditional-and-expression -> .conditional-and-expression OP_AND inclusive-or-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
inclusive-or-expression -> .exclusive-or-expression
inclusive-or-expression -> .inclusive-or-expression BITWISE_OR exclusive-or-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
exclusive-or-expression -> .and-expression
exclusive-or-expression -> .exclusive-or-expression CARET and-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
and-expression -> .equality-expression
and-expression -> .and-expression AMP equality-expression
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT
equality-expression -> .relational-expression
equality-expression -> .equality-expression OP_EQ relational-expression
equality-expression -> .equality-expression OP_NE relational-expression
relational-expression -> .shift-expression
relational-expression -> .relational-expression LT shift-expression
relational-expression -> .relational-expression GT shift-expression
relational-expression -> .relational-expression OP_LE shift-expression
relational-expression -> .relational-expression OP_GE shift-expression
relational-expression -> .relational-expression IS type
relational-expression -> .relational-expression AS type
shift-expression -> .additive-expression
shift-expression -> .shift-expression OP_LEFT_SHIFT additive-expression
shift-expression -> .shift-expression RIGHT_SHIFT additive-expression
additive-expression -> .multiplicative-expression
additive-expression -> .additive-expression PLUS multiplicative-expression
additive-expression -> .additive-expression MINUS multiplicative-expression
multiplicative-expression -> .unary-expression
multiplicative-expression -> .multiplicative-expression STAR unary-expression
multiplicative-expression -> .multiplicative-expression DIV unary-expression
multiplicative-expression -> .multiplicative-expression PERCENT unary-expression 
transitions ->  {"constant-expression":593,"expression":344,"conditional-expression":239,"assignment":240,"conditional-or-expression":241,"unary-expression":242,"conditional-and-expression":243,"primary-expression":118,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"pre-increment-expression":244,"pre-decrement-expression":245,"cast-expression":132,"inclusive-or-expression":246,"primary-no-array-creation-expression":125,"array-creation-expression":126,"OP_INC":121,"OP_DEC":122,"OPEN_PARENS":146,"exclusive-or-expression":247,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"invocation-expression":248,"element-access":138,"this-access":139,"base-access":140,"post-increment-expression":249,"post-decrement-expression":250,"object-creation-expression":251,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"NEW":119,"and-expression":252,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"equality-expression":255,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229,"relational-expression":256,"shift-expression":257,"additive-expression":258,"multiplicative-expression":259}

item set 564 
switch-label -> DEFAULT .COLON 
transitions ->  {"COLON":594}

item set 565 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":595}

item set 566 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 567 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":596,"block":69,"empty-statement":70,"expression-statement":71,"selection-statement":72,"iteration-statement":73,"jump-statement":74,"try-statement":75,"checked-statement":76,"unchecked-statement":77,"lock-statement":78,"using-statement":79,"OPEN_BRACE":10,"SEMICOLON":82,"statement-expression":83,"if-statement":84,"switch-statement":85,"while-statement":86,"do-statement":87,"for-statement":88,"foreach-statement":89,"break-statement":90,"continue-statement":91,"goto-statement":92,"return-statement":93,"throw-statement":94,"TRY":95,"CHECKED":96,"UNCHECKED":97,"LOCK":98,"USING":99,"invocation-expression":100,"object-creation-expression":101,"assignment":102,"post-increment-expression":103,"post-decrement-expression":104,"pre-increment-expression":105,"pre-decrement-expression":106,"IF":107,"SWITCH":108,"WHILE":109,"DO":110,"FOR":111,"FOREACH":112,"BREAK":113,"CONTINUE":114,"GOTO":115,"RETURN":116,"THROW":117,"primary-expression":118,"NEW":119,"unary-expression":120,"OP_INC":121,"OP_DEC":122,"primary-no-array-creation-expression":125,"array-creation-expression":126,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"cast-expression":132,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"element-access":138,"this-access":139,"base-access":140,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"OPEN_PARENS":146,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 568 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":597,"block":69,"empty-statement":70,"expression-statement":71,"selection-statement":72,"iteration-statement":73,"jump-statement":74,"try-statement":75,"checked-statement":76,"unchecked-statement":77,"lock-statement":78,"using-statement":79,"OPEN_BRACE":10,"SEMICOLON":82,"statement-expression":83,"if-statement":84,"switch-statement":85,"while-statement":86,"do-statement":87,"for-statement":88,"foreach-statement":89,"break-statement":90,"continue-statement":91,"goto-statement":92,"return-statement":93,"throw-statement":94,"TRY":95,"CHECKED":96,"UNCHECKED":97,"LOCK":98,"USING":99,"invocation-expression":100,"object-creation-expression":101,"assignment":102,"post-increment-expression":103,"post-decrement-expression":104,"pre-increment-expression":105,"pre-decrement-expression":106,"IF":107,"SWITCH":108,"WHILE":109,"DO":110,"FOR":111,"FOREACH":112,"BREAK":113,"CONTINUE":114,"GOTO":115,"RETURN":116,"THROW":117,"primary-expression":118,"NEW":119,"unary-expression":120,"OP_INC":121,"OP_DEC":122,"primary-no-array-creation-expression":125,"array-creation-expression":126,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"cast-expression":132,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"element-access":138,"this-access":139,"base-access":140,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"OPEN_PARENS":146,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 569 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":598}

item set 570 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":599,"block":69,"empty-statement":70,"expression-statement":71,"selection-statement":72,"iteration-statement":73,"jump-statement":74,"try-statement":75,"checked-statement":76,"unchecked-statement":77,"lock-statement":78,"using-statement":79,"OPEN_BRACE":10,"SEMICOLON":82,"statement-expression":83,"if-statement":84,"switch-statement":85,"while-statement":86,"do-statement":87,"for-statement":88,"foreach-statement":89,"break-statement":90,"continue-statement":91,"goto-statement":92,"return-statement":93,"throw-statement":94,"TRY":95,"CHECKED":96,"UNCHECKED":97,"LOCK":98,"USING":99,"invocation-expression":100,"object-creation-expression":101,"assignment":102,"post-increment-expression":103,"post-decrement-expression":104,"pre-increment-expression":105,"pre-decrement-expression":106,"IF":107,"SWITCH":108,"WHILE":109,"DO":110,"FOR":111,"FOREACH":112,"BREAK":113,"CONTINUE":114,"GOTO":115,"RETURN":116,"THROW":117,"primary-expression":118,"NEW":119,"unary-expression":120,"OP_INC":121,"OP_DEC":122,"primary-no-array-creation-expression":125,"array-creation-expression":126,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"cast-expression":132,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"element-access":138,"this-access":139,"base-access":140,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"OPEN_PARENS":146,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 571 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":600}

item set 572 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON .CLOSE_PARENS embedded-statement
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON .for-iterator CLOSE_PARENS embedded-statement
for-iterator -> .statement-expression-list
statement-expression-list -> .statement-expression
statement-expression-list -> .statement-expression-list COMMA statement-expression
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"CLOSE_PARENS":601,"for-iterator":602,"statement-expression-list":522,"statement-expression":340,"invocation-expression":100,"object-creation-expression":101,"assignment":102,"post-increment-expression":103,"post-decrement-expression":104,"pre-increment-expression":105,"pre-decrement-expression":106,"primary-expression":118,"NEW":119,"unary-expression":120,"OP_INC":121,"OP_DEC":122,"primary-no-array-creation-expression":125,"array-creation-expression":126,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"cast-expression":132,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"element-access":138,"this-access":139,"base-access":140,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"OPEN_PARENS":146,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"CHECKED":253,"UNCHECKED":254,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 573 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER IN expression .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":603}

item set 574 
conditional-expression -> conditional-or-expression INTERR expression COLON expression . 
transitions ->  {}

item set 575 
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers .
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers .array-initializer
rank-specifiers -> rank-specifiers .rank-specifier
array-initializer -> .OPEN_BRACE CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list CLOSE_BRACE
array-initializer -> .OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE
rank-specifier -> .OPEN_BRACKET CLOSE_BRACKET
rank-specifier -> .OPEN_BRACKET dim-separators CLOSE_BRACKET 
transitions ->  {"array-initializer":604,"rank-specifier":306,"OPEN_BRACE":379,"OPEN_BRACKET":189}

item set 576 
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer . 
transitions ->  {}

item set 577 
array-initializer -> OPEN_BRACE variable-initializer-list COMMA CLOSE_BRACE . 
transitions ->  {}

item set 578 
variable-initializer-list -> variable-initializer-list COMMA variable-initializer . 
transitions ->  {}

item set 579 
attribute-arguments -> OPEN_PARENS positional-argument-list COMMA named-argument-list CLOSE_PARENS . 
transitions ->  {}

item set 580 
delegate-declaration -> attributes DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 581 
delegate-declaration -> attributes delegate-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 582 
delegate-declaration -> attributes delegate-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS .SEMICOLON 
transitions ->  {"SEMICOLON":605}

item set 583 
parameter-array -> attributes params array-type IDENTIFIER . 
transitions ->  {}

item set 584 
fixed-parameter -> attributes parameter-modifieropt type IDENTIFIER . 
transitions ->  {}

item set 585 
delegate-declaration -> delegate-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 586 
specific-catch-clause -> CATCH OPEN_PARENS class-type CLOSE_PARENS block . 
transitions ->  {}

item set 587 
specific-catch-clause -> CATCH OPEN_PARENS class-type IDENTIFIER CLOSE_PARENS .block
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE 
transitions ->  {"block":606,"OPEN_BRACE":10}

item set 588 
if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement . 
transitions ->  {}

item set 589 
switch-block -> OPEN_BRACE switch-sections CLOSE_BRACE . 
transitions ->  {}

item set 590 
switch-sections -> switch-sections switch-section . 
transitions ->  {}

item set 591 
switch-section -> switch-labels statement-list .
statement-list -> statement-list .statement
statement -> .labeled-statement
statement -> .declaration-statement
statement -> .embedded-statement
labeled-statement -> .IDENTIFIER COLON statement
declaration-statement -> .local-variable-declaration SEMICOLON
declaration-statement -> .local-constant-declaration SEMICOLON
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
local-variable-declaration -> .type local-variable-declarators
local-constant-declaration -> .CONST type constant-declarators
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
type -> .value-type
type -> .reference-type
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
value-type -> .struct-type
value-type -> .enum-type
reference-type -> .class-type
reference-type -> .interface-type
reference-type -> .array-type
reference-type -> .delegate-type
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
struct-type -> .type-name
struct-type -> .simple-type
enum-type -> .type-name
class-type -> .type-name
class-type -> .OBJECT
class-type -> .STRING
interface-type -> .type-name
array-type -> .non-array-type rank-specifiers
delegate-type -> .type-name
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
type-name -> .namespace-or-type-name
simple-type -> .numeric-type
simple-type -> .BOOL
non-array-type -> .type
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
namespace-or-type-name -> .IDENTIFIER
namespace-or-type-name -> .namespace-or-type-name DOT IDENTIFIER
numeric-type -> .integral-type
numeric-type -> .floating-point-type
numeric-type -> .DECIMAL
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
integral-type -> .SBYTE
integral-type -> .BYTE
integral-type -> .SHORT
integral-type -> .USHORT
integral-type -> .INT
integral-type -> .UINT
integral-type -> .LONG
integral-type -> .ULONG
integral-type -> .CHAR
floating-point-type -> .FLOAT
floating-point-type -> .DOUBLE
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"statement":193,"labeled-statement":63,"declaration-statement":64,"embedded-statement":65,"IDENTIFIER":66,"local-variable-declaration":67,"local-constant-declaration":68,"block":69,"empty-statement":70,"expression-statement":71,"selection-statement":72,"iteration-statement":73,"jump-statement":74,"try-statement":75,"checked-statement":76,"unchecked-statement":77,"lock-statement":78,"using-statement":79,"type":80,"CONST":81,"OPEN_BRACE":10,"SEMICOLON":82,"statement-expression":83,"if-statement":84,"switch-statement":85,"while-statement":86,"do-statement":87,"for-statement":88,"foreach-statement":89,"break-statement":90,"continue-statement":91,"goto-statement":92,"return-statement":93,"throw-statement":94,"TRY":95,"CHECKED":96,"UNCHECKED":97,"LOCK":98,"USING":99,"value-type":27,"reference-type":28,"invocation-expression":100,"object-creation-expression":101,"assignment":102,"post-increment-expression":103,"post-decrement-expression":104,"pre-increment-expression":105,"pre-decrement-expression":106,"IF":107,"SWITCH":108,"WHILE":109,"DO":110,"FOR":111,"FOREACH":112,"BREAK":113,"CONTINUE":114,"GOTO":115,"RETURN":116,"THROW":117,"struct-type":29,"enum-type":30,"class-type":31,"interface-type":32,"array-type":33,"delegate-type":34,"primary-expression":118,"NEW":119,"unary-expression":120,"OP_INC":121,"OP_DEC":122,"type-name":35,"simple-type":36,"OBJECT":123,"STRING":124,"non-array-type":39,"primary-no-array-creation-expression":125,"array-creation-expression":126,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"cast-expression":132,"namespace-or-type-name":40,"numeric-type":41,"BOOL":133,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"element-access":138,"this-access":139,"base-access":140,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"OPEN_PARENS":146,"integral-type":44,"floating-point-type":45,"DECIMAL":147,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"SBYTE":158,"BYTE":159,"SHORT":160,"USHORT":161,"INT":162,"UINT":163,"LONG":164,"ULONG":165,"CHAR":166,"FLOAT":167,"DOUBLE":168,"TRUE":169,"FALSE":170}

item set 592 
switch-labels -> switch-labels switch-label . 
transitions ->  {}

item set 593 
switch-label -> CASE constant-expression .COLON 
transitions ->  {"COLON":607}

item set 594 
switch-label -> DEFAULT COLON . 
transitions ->  {}

item set 595 
do-statement -> DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 596 
for-statement -> FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 597 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 598 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":608,"block":69,"empty-statement":70,"expression-statement":71,"selection-statement":72,"iteration-statement":73,"jump-statement":74,"try-statement":75,"checked-statement":76,"unchecked-statement":77,"lock-statement":78,"using-statement":79,"OPEN_BRACE":10,"SEMICOLON":82,"statement-expression":83,"if-statement":84,"switch-statement":85,"while-statement":86,"do-statement":87,"for-statement":88,"foreach-statement":89,"break-statement":90,"continue-statement":91,"goto-statement":92,"return-statement":93,"throw-statement":94,"TRY":95,"CHECKED":96,"UNCHECKED":97,"LOCK":98,"USING":99,"invocation-expression":100,"object-creation-expression":101,"assignment":102,"post-increment-expression":103,"post-decrement-expression":104,"pre-increment-expression":105,"pre-decrement-expression":106,"IF":107,"SWITCH":108,"WHILE":109,"DO":110,"FOR":111,"FOREACH":112,"BREAK":113,"CONTINUE":114,"GOTO":115,"RETURN":116,"THROW":117,"primary-expression":118,"NEW":119,"unary-expression":120,"OP_INC":121,"OP_DEC":122,"primary-no-array-creation-expression":125,"array-creation-expression":126,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"cast-expression":132,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"element-access":138,"this-access":139,"base-access":140,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"OPEN_PARENS":146,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 599 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 600 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":609,"block":69,"empty-statement":70,"expression-statement":71,"selection-statement":72,"iteration-statement":73,"jump-statement":74,"try-statement":75,"checked-statement":76,"unchecked-statement":77,"lock-statement":78,"using-statement":79,"OPEN_BRACE":10,"SEMICOLON":82,"statement-expression":83,"if-statement":84,"switch-statement":85,"while-statement":86,"do-statement":87,"for-statement":88,"foreach-statement":89,"break-statement":90,"continue-statement":91,"goto-statement":92,"return-statement":93,"throw-statement":94,"TRY":95,"CHECKED":96,"UNCHECKED":97,"LOCK":98,"USING":99,"invocation-expression":100,"object-creation-expression":101,"assignment":102,"post-increment-expression":103,"post-decrement-expression":104,"pre-increment-expression":105,"pre-decrement-expression":106,"IF":107,"SWITCH":108,"WHILE":109,"DO":110,"FOR":111,"FOREACH":112,"BREAK":113,"CONTINUE":114,"GOTO":115,"RETURN":116,"THROW":117,"primary-expression":118,"NEW":119,"unary-expression":120,"OP_INC":121,"OP_DEC":122,"primary-no-array-creation-expression":125,"array-creation-expression":126,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"cast-expression":132,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"element-access":138,"this-access":139,"base-access":140,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"OPEN_PARENS":146,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 601 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":610,"block":69,"empty-statement":70,"expression-statement":71,"selection-statement":72,"iteration-statement":73,"jump-statement":74,"try-statement":75,"checked-statement":76,"unchecked-statement":77,"lock-statement":78,"using-statement":79,"OPEN_BRACE":10,"SEMICOLON":82,"statement-expression":83,"if-statement":84,"switch-statement":85,"while-statement":86,"do-statement":87,"for-statement":88,"foreach-statement":89,"break-statement":90,"continue-statement":91,"goto-statement":92,"return-statement":93,"throw-statement":94,"TRY":95,"CHECKED":96,"UNCHECKED":97,"LOCK":98,"USING":99,"invocation-expression":100,"object-creation-expression":101,"assignment":102,"post-increment-expression":103,"post-decrement-expression":104,"pre-increment-expression":105,"pre-decrement-expression":106,"IF":107,"SWITCH":108,"WHILE":109,"DO":110,"FOR":111,"FOREACH":112,"BREAK":113,"CONTINUE":114,"GOTO":115,"RETURN":116,"THROW":117,"primary-expression":118,"NEW":119,"unary-expression":120,"OP_INC":121,"OP_DEC":122,"primary-no-array-creation-expression":125,"array-creation-expression":126,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"cast-expression":132,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"element-access":138,"this-access":139,"base-access":140,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"OPEN_PARENS":146,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 602 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator .CLOSE_PARENS embedded-statement 
transitions ->  {"CLOSE_PARENS":611}

item set 603 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":612,"block":69,"empty-statement":70,"expression-statement":71,"selection-statement":72,"iteration-statement":73,"jump-statement":74,"try-statement":75,"checked-statement":76,"unchecked-statement":77,"lock-statement":78,"using-statement":79,"OPEN_BRACE":10,"SEMICOLON":82,"statement-expression":83,"if-statement":84,"switch-statement":85,"while-statement":86,"do-statement":87,"for-statement":88,"foreach-statement":89,"break-statement":90,"continue-statement":91,"goto-statement":92,"return-statement":93,"throw-statement":94,"TRY":95,"CHECKED":96,"UNCHECKED":97,"LOCK":98,"USING":99,"invocation-expression":100,"object-creation-expression":101,"assignment":102,"post-increment-expression":103,"post-decrement-expression":104,"pre-increment-expression":105,"pre-decrement-expression":106,"IF":107,"SWITCH":108,"WHILE":109,"DO":110,"FOR":111,"FOREACH":112,"BREAK":113,"CONTINUE":114,"GOTO":115,"RETURN":116,"THROW":117,"primary-expression":118,"NEW":119,"unary-expression":120,"OP_INC":121,"OP_DEC":122,"primary-no-array-creation-expression":125,"array-creation-expression":126,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"cast-expression":132,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"element-access":138,"this-access":139,"base-access":140,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"OPEN_PARENS":146,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 604 
array-creation-expression -> NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer . 
transitions ->  {}

item set 605 
delegate-declaration -> attributes delegate-modifiers DELEGATE return-type IDENTIFIER OPEN_PARENS formal-parameter-list CLOSE_PARENS SEMICOLON . 
transitions ->  {}

item set 606 
specific-catch-clause -> CATCH OPEN_PARENS class-type IDENTIFIER CLOSE_PARENS block . 
transitions ->  {}

item set 607 
switch-label -> CASE constant-expression COLON . 
transitions ->  {}

item set 608 
for-statement -> FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 609 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 610 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 611 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS .embedded-statement
embedded-statement -> .block
embedded-statement -> .empty-statement
embedded-statement -> .expression-statement
embedded-statement -> .selection-statement
embedded-statement -> .iteration-statement
embedded-statement -> .jump-statement
embedded-statement -> .try-statement
embedded-statement -> .checked-statement
embedded-statement -> .unchecked-statement
embedded-statement -> .lock-statement
embedded-statement -> .using-statement
block -> .OPEN_BRACE CLOSE_BRACE
block -> .OPEN_BRACE statement-list CLOSE_BRACE
empty-statement -> .SEMICOLON
expression-statement -> .statement-expression SEMICOLON
selection-statement -> .if-statement
selection-statement -> .switch-statement
iteration-statement -> .while-statement
iteration-statement -> .do-statement
iteration-statement -> .for-statement
iteration-statement -> .foreach-statement
jump-statement -> .break-statement
jump-statement -> .continue-statement
jump-statement -> .goto-statement
jump-statement -> .return-statement
jump-statement -> .throw-statement
try-statement -> .TRY block catch-clauses
try-statement -> .TRY block finally-clause
try-statement -> .TRY block catch-clauses finally-clause
checked-statement -> .CHECKED block
unchecked-statement -> .UNCHECKED block
lock-statement -> .LOCK OPEN_PARENS expression CLOSE_PARENS embedded-statement
using-statement -> .USING OPEN_PARENS resource-acquisition CLOSE_PARENS embedded-statement
statement-expression -> .invocation-expression
statement-expression -> .object-creation-expression
statement-expression -> .assignment
statement-expression -> .post-increment-expression
statement-expression -> .post-decrement-expression
statement-expression -> .pre-increment-expression
statement-expression -> .pre-decrement-expression
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
if-statement -> .IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement ELSE embedded-statement
switch-statement -> .SWITCH OPEN_PARENS expression CLOSE_PARENS switch-block
while-statement -> .WHILE OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
do-statement -> .DO embedded-statement WHILE OPEN_PARENS boolean-expression CLOSE_PARENS SEMICOLON
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
for-statement -> .FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement
foreach-statement -> .FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement
break-statement -> .BREAK SEMICOLON
continue-statement -> .CONTINUE SEMICOLON
goto-statement -> .GOTO IDENTIFIER SEMICOLON
goto-statement -> .GOTO CASE constant-expression SEMICOLON
goto-statement -> .GOTO DEFAULT SEMICOLON
return-statement -> .RETURN SEMICOLON
return-statement -> .RETURN expression SEMICOLON
throw-statement -> .THROW SEMICOLON
throw-statement -> .THROW expression SEMICOLON
invocation-expression -> .primary-expression OPEN_PARENS CLOSE_PARENS
invocation-expression -> .primary-expression OPEN_PARENS argument-list CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS CLOSE_PARENS
object-creation-expression -> .NEW type OPEN_PARENS argument-list CLOSE_PARENS
assignment -> .unary-expression assignment-operator expression
post-increment-expression -> .primary-expression OP_INC
post-decrement-expression -> .primary-expression OP_DEC
pre-increment-expression -> .OP_INC unary-expression
pre-decrement-expression -> .OP_DEC unary-expression
primary-expression -> .primary-no-array-creation-expression
primary-expression -> .array-creation-expression
unary-expression -> .primary-expression
unary-expression -> .PLUS unary-expression
unary-expression -> .MINUS unary-expression
unary-expression -> .BANG unary-expression
unary-expression -> .TILDE unary-expression
unary-expression -> .STAR unary-expression
unary-expression -> .pre-increment-expression
unary-expression -> .pre-decrement-expression
unary-expression -> .cast-expression
primary-no-array-creation-expression -> .literal
primary-no-array-creation-expression -> .simple-name
primary-no-array-creation-expression -> .parenthesized-expression
primary-no-array-creation-expression -> .member-access
primary-no-array-creation-expression -> .invocation-expression
primary-no-array-creation-expression -> .element-access
primary-no-array-creation-expression -> .this-access
primary-no-array-creation-expression -> .base-access
primary-no-array-creation-expression -> .post-increment-expression
primary-no-array-creation-expression -> .post-decrement-expression
primary-no-array-creation-expression -> .object-creation-expression
primary-no-array-creation-expression -> .delegate-creation-expression
primary-no-array-creation-expression -> .typeof-expression
primary-no-array-creation-expression -> .sizeof-expression
primary-no-array-creation-expression -> .checked-expression
primary-no-array-creation-expression -> .unchecked-expression
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET array-initializer
array-creation-expression -> .NEW non-array-type OPEN_BRACKET expression-list CLOSE_BRACKET rank-specifiers array-initializer
array-creation-expression -> .NEW array-type array-initializer
cast-expression -> .OPEN_PARENS type CLOSE_PARENS unary-expression
literal -> .BOOLEAN_LITERAL
literal -> .REAL_LITERAL
literal -> .INTEGER_LITERAL
literal -> .STRING_LITERAL
literal -> .CHARACTER_LITERAL
literal -> .NULL
simple-name -> .IDENTIFIER
parenthesized-expression -> .OPEN_PARENS expression CLOSE_PARENS
member-access -> .primary-expression DOT IDENTIFIER
member-access -> .predefined-type DOT IDENTIFIER
element-access -> .primary-no-array-creation-expression OPEN_BRACKET expression-list CLOSE_BRACKET
this-access -> .THIS
base-access -> .base DOT IDENTIFIER
base-access -> .base OPEN_BRACKET expression-list CLOSE_BRACKET
delegate-creation-expression -> .NEW delegate-type OPEN_PARENS expression CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS type CLOSE_PARENS
typeof-expression -> .TYPEOF OPEN_PARENS VOID CLOSE_PARENS
checked-expression -> .CHECKED OPEN_PARENS expression CLOSE_PARENS
unchecked-expression -> .UNCHECKED OPEN_PARENS expression CLOSE_PARENS
BOOLEAN_LITERAL -> .TRUE
BOOLEAN_LITERAL -> .FALSE
predefined-type -> .BOOL
predefined-type -> .BYTE
predefined-type -> .CHAR
predefined-type -> .DECIMAL
predefined-type -> .DOUBLE
predefined-type -> .FLOAT
predefined-type -> .INT
predefined-type -> .LONG
predefined-type -> .OBJECT
predefined-type -> .SBYTE
predefined-type -> .SHORT
predefined-type -> .STRING
predefined-type -> .UINT
predefined-type -> .ULONG
predefined-type -> .USHORT 
transitions ->  {"embedded-statement":613,"block":69,"empty-statement":70,"expression-statement":71,"selection-statement":72,"iteration-statement":73,"jump-statement":74,"try-statement":75,"checked-statement":76,"unchecked-statement":77,"lock-statement":78,"using-statement":79,"OPEN_BRACE":10,"SEMICOLON":82,"statement-expression":83,"if-statement":84,"switch-statement":85,"while-statement":86,"do-statement":87,"for-statement":88,"foreach-statement":89,"break-statement":90,"continue-statement":91,"goto-statement":92,"return-statement":93,"throw-statement":94,"TRY":95,"CHECKED":96,"UNCHECKED":97,"LOCK":98,"USING":99,"invocation-expression":100,"object-creation-expression":101,"assignment":102,"post-increment-expression":103,"post-decrement-expression":104,"pre-increment-expression":105,"pre-decrement-expression":106,"IF":107,"SWITCH":108,"WHILE":109,"DO":110,"FOR":111,"FOREACH":112,"BREAK":113,"CONTINUE":114,"GOTO":115,"RETURN":116,"THROW":117,"primary-expression":118,"NEW":119,"unary-expression":120,"OP_INC":121,"OP_DEC":122,"primary-no-array-creation-expression":125,"array-creation-expression":126,"PLUS":127,"MINUS":128,"BANG":129,"TILDE":130,"STAR":131,"cast-expression":132,"literal":134,"simple-name":135,"parenthesized-expression":136,"member-access":137,"element-access":138,"this-access":139,"base-access":140,"delegate-creation-expression":141,"typeof-expression":142,"sizeof-expression":143,"checked-expression":144,"unchecked-expression":145,"OPEN_PARENS":146,"BOOLEAN_LITERAL":148,"REAL_LITERAL":149,"INTEGER_LITERAL":150,"STRING_LITERAL":151,"CHARACTER_LITERAL":152,"NULL":153,"IDENTIFIER":214,"predefined-type":154,"THIS":155,"base":156,"TYPEOF":157,"TRUE":169,"FALSE":170,"BOOL":215,"BYTE":216,"CHAR":217,"DECIMAL":218,"DOUBLE":219,"FLOAT":220,"INT":221,"LONG":222,"OBJECT":223,"SBYTE":224,"SHORT":225,"STRING":226,"UINT":227,"ULONG":228,"USHORT":229}

item set 612 
foreach-statement -> FOREACH OPEN_PARENS type IDENTIFIER IN expression CLOSE_PARENS embedded-statement . 
transitions ->  {}

item set 613 
for-statement -> FOR OPEN_PARENS for-initializer SEMICOLON for-condition SEMICOLON for-iterator CLOSE_PARENS embedded-statement . 
transitions ->  {}
614 states.
Building lookahead grammar.
Computing lookaheads.
Building parse table.
Conflict at state: 0, token: OPEN_BRACE
  reduce by rule: e -> 
  shift token (then go to state 10)
Conflict at state: 0, token: PRIVATE
  reduce by rule: e -> 
  shift token (then go to state 18)
Conflict at state: 0, token: INTERNAL
  reduce by rule: e -> 
  shift token (then go to state 17)
Conflict at state: 0, token: PROTECTED
  reduce by rule: e -> 
  shift token (then go to state 16)
Conflict at state: 0, token: PUBLIC
  reduce by rule: e -> 
  shift token (then go to state 15)
Conflict at state: 0, token: NEW
  reduce by rule: e -> 
  shift token (then go to state 14)
Conflict at state: 0, token: DELEGATE
  reduce by rule: e -> 
  shift token (then go to state 8)
Conflict at state: 0, token: OPEN_BRACKET
  reduce by rule: e -> 
  shift token (then go to state 13)
Conflict at state: 2, token: OPEN_BRACE
  reduce by rule: e -> 
  shift token (then go to state 10)
Conflict at state: 2, token: PRIVATE
  reduce by rule: e -> 
  shift token (then go to state 18)
Conflict at state: 2, token: INTERNAL
  reduce by rule: e -> 
  shift token (then go to state 17)
Conflict at state: 2, token: PROTECTED
  reduce by rule: e -> 
  shift token (then go to state 16)
Conflict at state: 2, token: PUBLIC
  reduce by rule: e -> 
  shift token (then go to state 15)
Conflict at state: 2, token: NEW
  reduce by rule: e -> 
  shift token (then go to state 14)
Conflict at state: 2, token: DELEGATE
  reduce by rule: e -> 
  shift token (then go to state 8)
Conflict at state: 2, token: OPEN_BRACKET
  reduce by rule: e -> 
  shift token (then go to state 13)
Conflict at state: 2, token: EOF
  reduce by rule: e -> 
  shift token (then go to state 19)
Conflict at state: 4, token: PRIVATE
  reduce by rule: e -> attributes
  shift token (then go to state 18)
Conflict at state: 4, token: INTERNAL
  reduce by rule: e -> attributes
  shift token (then go to state 17)
Conflict at state: 4, token: PROTECTED
  reduce by rule: e -> attributes
  shift token (then go to state 16)
Conflict at state: 4, token: PUBLIC
  reduce by rule: e -> attributes
  shift token (then go to state 15)
Conflict at state: 4, token: NEW
  reduce by rule: e -> attributes
  shift token (then go to state 14)
Conflict at state: 4, token: DELEGATE
  reduce by rule: e -> attributes
  shift token (then go to state 21)
Conflict at state: 7, token: OPEN_BRACKET
  reduce by rule: attributes -> attribute-sections
  shift token (then go to state 13)
Conflict at state: 26, token: IDENTIFIER
  reduce by rule: non-array-type -> type
  reduce by rule: return-type -> type
Conflict at state: 26, token: OPEN_BRACKET
  reduce by rule: non-array-type -> type
  reduce by rule: return-type -> type
Conflict at state: 35, token: IDENTIFIER
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OPEN_BRACKET
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: SEMICOLON
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: ASSIGN
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: COMMA
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OPEN_PARENS
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: CLOSE_PARENS
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: IS
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OP_GE
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OP_LE
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: GT
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: LT
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: INTERR
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: CLOSE_BRACKET
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: COLON
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OP_OR
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OP_AND
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: BITWISE_OR
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: CARET
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: AMP
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OP_EQ
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OP_NE
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: CLOSE_BRACE
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: AS
  reduce by rule: enum-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: IDENTIFIER
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OPEN_BRACKET
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: SEMICOLON
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: ASSIGN
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: COMMA
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OPEN_PARENS
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: CLOSE_PARENS
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: IS
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OP_GE
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OP_LE
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: GT
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: LT
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: INTERR
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: CLOSE_BRACKET
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: COLON
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OP_OR
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OP_AND
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: BITWISE_OR
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: CARET
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: AMP
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OP_EQ
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OP_NE
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: CLOSE_BRACE
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: AS
  reduce by rule: class-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: IDENTIFIER
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OPEN_BRACKET
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: SEMICOLON
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: ASSIGN
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: COMMA
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OPEN_PARENS
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: CLOSE_PARENS
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: IS
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OP_GE
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OP_LE
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: GT
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: LT
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: INTERR
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: CLOSE_BRACKET
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: COLON
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OP_OR
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OP_AND
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: BITWISE_OR
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: CARET
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: AMP
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OP_EQ
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OP_NE
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: CLOSE_BRACE
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: AS
  reduce by rule: interface-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: IDENTIFIER
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OPEN_BRACKET
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: SEMICOLON
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: ASSIGN
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: COMMA
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OPEN_PARENS
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: CLOSE_PARENS
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: IS
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OP_GE
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OP_LE
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: GT
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: LT
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: INTERR
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: CLOSE_BRACKET
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: COLON
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OP_OR
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OP_AND
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: BITWISE_OR
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: CARET
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: AMP
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OP_EQ
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: OP_NE
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: CLOSE_BRACE
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 35, token: AS
  reduce by rule: delegate-type -> type-name
  reduce by rule: struct-type -> type-name
Conflict at state: 66, token: SEMICOLON
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 66, token: IDENTIFIER
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 66, token: ASSIGN
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 66, token: COMMA
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 66, token: DOT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 66, token: OPEN_BRACKET
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 66, token: OPEN_PARENS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 66, token: OP_INC
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 66, token: OP_DEC
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 66, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 66, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 66, token: OP_XOR_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 66, token: OP_OR_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 66, token: OP_AND_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 66, token: OP_MOD_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 66, token: OP_DIV_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 66, token: OP_MULT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 66, token: OP_SUB_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 66, token: OP_ADD_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 100, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 100, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 100, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 100, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 100, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 100, token: DOT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 100, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 100, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 100, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 100, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 100, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 100, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 100, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 100, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 100, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 100, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 100, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 100, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 100, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> invocation-expression
  reduce by rule: statement-expression -> invocation-expression
Conflict at state: 101, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 101, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 101, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 101, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 101, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 101, token: DOT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 101, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 101, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 101, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 101, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 101, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 101, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 101, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 101, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 101, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 101, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 101, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 101, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 101, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> object-creation-expression
  reduce by rule: statement-expression -> object-creation-expression
Conflict at state: 103, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 103, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 103, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 103, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 103, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 103, token: DOT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 103, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 103, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 103, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 103, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 103, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 103, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 103, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 103, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 103, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 103, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 103, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 103, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 103, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-increment-expression
  reduce by rule: statement-expression -> post-increment-expression
Conflict at state: 104, token: SEMICOLON
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 104, token: OP_DEC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 104, token: OP_INC
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 104, token: OPEN_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 104, token: OPEN_BRACKET
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 104, token: DOT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 104, token: ASSIGN
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 104, token: OP_ADD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 104, token: OP_SUB_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 104, token: OP_MULT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 104, token: OP_DIV_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 104, token: OP_MOD_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 104, token: OP_AND_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 104, token: OP_OR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 104, token: OP_XOR_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 104, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 104, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 104, token: COMMA
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 104, token: CLOSE_PARENS
  reduce by rule: primary-no-array-creation-expression -> post-decrement-expression
  reduce by rule: statement-expression -> post-decrement-expression
Conflict at state: 105, token: SEMICOLON
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 105, token: ASSIGN
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 105, token: OP_ADD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 105, token: OP_SUB_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 105, token: OP_MULT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 105, token: OP_DIV_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 105, token: OP_MOD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 105, token: OP_AND_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 105, token: OP_OR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 105, token: OP_XOR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 105, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 105, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 105, token: COMMA
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 105, token: CLOSE_PARENS
  reduce by rule: unary-expression -> pre-increment-expression
  reduce by rule: statement-expression -> pre-increment-expression
Conflict at state: 106, token: SEMICOLON
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 106, token: ASSIGN
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 106, token: OP_ADD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 106, token: OP_SUB_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 106, token: OP_MULT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 106, token: OP_DIV_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 106, token: OP_MOD_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 106, token: OP_AND_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 106, token: OP_OR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 106, token: OP_XOR_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 106, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 106, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 106, token: COMMA
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 106, token: CLOSE_PARENS
  reduce by rule: unary-expression -> pre-decrement-expression
  reduce by rule: statement-expression -> pre-decrement-expression
Conflict at state: 123, token: SEMICOLON
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 123, token: IDENTIFIER
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 123, token: ASSIGN
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 123, token: COMMA
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 123, token: OPEN_BRACKET
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 123, token: DOT
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 123, token: CLOSE_PARENS
  reduce by rule: predefined-type -> OBJECT
  reduce by rule: class-type -> OBJECT
Conflict at state: 124, token: SEMICOLON
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 124, token: IDENTIFIER
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 124, token: ASSIGN
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 124, token: COMMA
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 124, token: OPEN_BRACKET
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 124, token: DOT
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 124, token: CLOSE_PARENS
  reduce by rule: predefined-type -> STRING
  reduce by rule: class-type -> STRING
Conflict at state: 133, token: COMMA
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 133, token: ASSIGN
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 133, token: IDENTIFIER
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 133, token: SEMICOLON
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 133, token: OPEN_BRACKET
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 133, token: DOT
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 133, token: CLOSE_PARENS
  reduce by rule: predefined-type -> BOOL
  reduce by rule: simple-type -> BOOL
Conflict at state: 147, token: SEMICOLON
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 147, token: IDENTIFIER
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 147, token: ASSIGN
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 147, token: COMMA
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 147, token: OPEN_BRACKET
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 147, token: DOT
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 147, token: CLOSE_PARENS
  reduce by rule: predefined-type -> DECIMAL
  reduce by rule: numeric-type -> DECIMAL
Conflict at state: 158, token: COMMA
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 158, token: ASSIGN
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 158, token: IDENTIFIER
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 158, token: SEMICOLON
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 158, token: OPEN_BRACKET
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 158, token: DOT
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 158, token: CLOSE_PARENS
  reduce by rule: predefined-type -> SBYTE
  reduce by rule: integral-type -> SBYTE
Conflict at state: 159, token: COMMA
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 159, token: ASSIGN
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 159, token: IDENTIFIER
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 159, token: SEMICOLON
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 159, token: OPEN_BRACKET
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 159, token: DOT
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 159, token: CLOSE_PARENS
  reduce by rule: predefined-type -> BYTE
  reduce by rule: integral-type -> BYTE
Conflict at state: 160, token: COMMA
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 160, token: ASSIGN
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 160, token: IDENTIFIER
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 160, token: SEMICOLON
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 160, token: OPEN_BRACKET
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 160, token: DOT
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 160, token: CLOSE_PARENS
  reduce by rule: predefined-type -> SHORT
  reduce by rule: integral-type -> SHORT
Conflict at state: 161, token: COMMA
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 161, token: ASSIGN
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 161, token: IDENTIFIER
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 161, token: SEMICOLON
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 161, token: OPEN_BRACKET
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 161, token: DOT
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 161, token: CLOSE_PARENS
  reduce by rule: predefined-type -> USHORT
  reduce by rule: integral-type -> USHORT
Conflict at state: 162, token: COMMA
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 162, token: ASSIGN
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 162, token: IDENTIFIER
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 162, token: SEMICOLON
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 162, token: OPEN_BRACKET
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 162, token: DOT
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 162, token: CLOSE_PARENS
  reduce by rule: predefined-type -> INT
  reduce by rule: integral-type -> INT
Conflict at state: 163, token: COMMA
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 163, token: ASSIGN
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 163, token: IDENTIFIER
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 163, token: SEMICOLON
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 163, token: OPEN_BRACKET
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 163, token: DOT
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 163, token: CLOSE_PARENS
  reduce by rule: predefined-type -> UINT
  reduce by rule: integral-type -> UINT
Conflict at state: 164, token: COMMA
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 164, token: ASSIGN
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 164, token: IDENTIFIER
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 164, token: SEMICOLON
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 164, token: OPEN_BRACKET
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 164, token: DOT
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 164, token: CLOSE_PARENS
  reduce by rule: predefined-type -> LONG
  reduce by rule: integral-type -> LONG
Conflict at state: 165, token: COMMA
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 165, token: ASSIGN
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 165, token: IDENTIFIER
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 165, token: SEMICOLON
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 165, token: OPEN_BRACKET
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 165, token: DOT
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 165, token: CLOSE_PARENS
  reduce by rule: predefined-type -> ULONG
  reduce by rule: integral-type -> ULONG
Conflict at state: 166, token: COMMA
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 166, token: ASSIGN
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 166, token: IDENTIFIER
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 166, token: SEMICOLON
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 166, token: OPEN_BRACKET
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 166, token: DOT
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 166, token: CLOSE_PARENS
  reduce by rule: predefined-type -> CHAR
  reduce by rule: integral-type -> CHAR
Conflict at state: 167, token: COMMA
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 167, token: ASSIGN
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 167, token: IDENTIFIER
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 167, token: SEMICOLON
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 167, token: OPEN_BRACKET
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 167, token: DOT
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 167, token: CLOSE_PARENS
  reduce by rule: predefined-type -> FLOAT
  reduce by rule: floating-point-type -> FLOAT
Conflict at state: 168, token: COMMA
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 168, token: ASSIGN
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 168, token: IDENTIFIER
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 168, token: SEMICOLON
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 168, token: OPEN_BRACKET
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 168, token: DOT
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 168, token: CLOSE_PARENS
  reduce by rule: predefined-type -> DOUBLE
  reduce by rule: floating-point-type -> DOUBLE
Conflict at state: 187, token: OPEN_BRACKET
  reduce by rule: array-type -> non-array-type rank-specifiers
  shift token (then go to state 189)
Conflict at state: 269, token: OPEN_PARENS
  reduce by rule: reference-type -> delegate-type
  shift token (then go to state 380)
Conflict at state: 292, token: CLOSE_PARENS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: DOT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: OPEN_BRACKET
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: RIGHT_SHIFT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: OP_LEFT_SHIFT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: OP_XOR_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: OP_OR_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: OP_AND_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: OP_MOD_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: OP_DIV_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: OP_MULT_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: OP_SUB_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: OP_ADD_ASSIGNMENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: ASSIGN
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: OPEN_PARENS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: OP_INC
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: OP_DEC
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: INTERR
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: STAR
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: DIV
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: PERCENT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: OP_LEFT_SHIFT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: RIGHT_SHIFT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: OP_EQ
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: OP_NE
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: CARET
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: OP_AND
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: OP_OR
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: BITWISE_OR
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: AMP
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: AS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: IS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: OP_GE
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: OP_LE
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: GT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: LT
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: MINUS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: PLUS
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: IDENTIFIER
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: COMMA
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 292, token: SEMICOLON
  reduce by rule: simple-name -> IDENTIFIER
  reduce by rule: namespace-or-type-name -> IDENTIFIER
Conflict at state: 332, token: CLOSE_PARENS
  reduce by rule: boolean-expression -> expression
  reduce by rule: boolean-expression -> expression
Conflict at state: 332, token: SEMICOLON
  reduce by rule: boolean-expression -> expression
  reduce by rule: boolean-expression -> expression
Conflict at state: 401, token: ASSIGN
  reduce by rule: simple-name -> IDENTIFIER
  shift token (then go to state 493)
Conflict at state: 515, token: ELSE
  reduce by rule: if-statement -> IF OPEN_PARENS boolean-expression CLOSE_PARENS embedded-statement
  shift token (then go to state 557)

397 Conflict(s) found in grammar.
Done.
